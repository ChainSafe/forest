# Docker compose file to run a local devnet.
# The devnet consists of a:
# - Lotus node (2k build),
# - Lotus miner (2k build),
# - Forest node.

version: "3.7"

services:
  lotus_init:
    build:
      context: .
      dockerfile: lotus.dockerfile
    volumes:
      - filecoin-proofs:/var/tmp/filecoin-proof-parameters
      - lotus-data:/lotus_data
    env_file:
      - lotus.env
    entrypoint: ["/bin/bash", "-c" ]
    command:
      - |
        lotus fetch-params 2048
        if [ ! -f /lotus_data/NODE_INITIALISED ]; then
          lotus-seed --sector-dir /lotus_data/genesis-sectors pre-seal --sector-size 2KiB --num-sectors 2
          lotus-seed --sector-dir /lotus_data/genesis-sectors genesis new /lotus_data/localnet.json
          lotus-seed --sector-dir /lotus_data/genesis-sectors genesis add-miner /lotus_data/localnet.json /lotus_data/genesis-sectors/pre-seal-t01000.json
          touch /lotus_data/NODE_INITIALISED
        fi

  lotus_node:
    depends_on:
      lotus_init:
        condition: service_completed_successfully
    build:
      context: .
      dockerfile: lotus.dockerfile
    healthcheck:
      test: >-
        curl -s -x post -h "content-type: application/json"
        --data '{ "jsonrpc": "2.0", "method": "filecoin.chainhead", "params": [], "id": 1 }'
        http://lotus_node:1234/rpc/v0 || exit 1
      interval: 10s
      retries: 10
      timeout: 5s
    container_name: lotus
    networks:
      - devnet
    volumes:
      - filecoin-proofs:/var/tmp/filecoin-proof-parameters
      - lotus-data:/lotus_data
    entrypoint: ["/bin/bash", "-c" ]
    ports:
      - 1234:1234
      - 9090:9090
    env_file:
      - lotus.env
    command:
      - |
        lotus daemon --lotus-make-genesis=/lotus_data/devgen.car --genesis-template=/lotus_data/localnet.json --bootstrap=false

  lotus_miner:
    depends_on:
      lotus_node:
        condition: service_healthy
    build:
      context: .
      dockerfile: lotus.dockerfile
    container_name: lotus-miner
    networks:
      - devnet
    volumes:
      - filecoin-proofs:/var/tmp/filecoin-proof-parameters
      - lotus-data:/lotus_data
    entrypoint: ["/bin/bash", "-c" ]
    ports:
      - 2345:2345
    env_file:
      - lotus-miner.env
    restart: on-failure # lotus node might not be ready
    command:
      - |
        if [ ! -f /lotus_data/MINER_INITIALISED ]; then
          lotus wallet import --as-default /lotus_data/genesis-sectors/pre-seal-t01000.key
          lotus-miner init --genesis-miner --actor=t01000 --sector-size=2KiB --pre-sealed-sectors=/lotus_data/genesis-sectors --pre-sealed-metadata=/lotus_data/genesis-sectors/pre-seal-t01000.json --nosync
          touch /lotus_data/MINER_INITIALISED
        fi
        lotus-miner run --nosync

  # This container dumps relevant (for Forest) Lotus configuration to the shared volume.
  lotus_config:
    depends_on:
      lotus_node:
        condition: service_healthy
    build:
      context: .
      dockerfile: lotus.dockerfile
    volumes:
      - lotus-data:/lotus_data
    entrypoint: ["/bin/bash", "-c" ]
    env_file:
      - lotus.env
    networks:
      - devnet
    command:
      - |
        lotus net id > /lotus_data/PEER_ID

  forest:
    user: root
    depends_on:
      lotus_config:
        condition: service_completed_successfully
    build:
      context: ../../.
      dockerfile: Dockerfile
    healthcheck:
      test: |
        export TOKEN=$$(cat /root/.local/share/forest/token.jwt)
        export FULLNODE_API_INFO=$$TOKEN:/ip4/127.0.0.1/tcp/1236/http
        forest-cli sync status
      interval: 10s
      retries: 10
      timeout: 5s
      start_period: 15s
    volumes:
      - lotus-data:/lotus_data
      - filecoin-proofs:/var/tmp/filecoin-proof-parameters
      - ./forest_config.toml.tpl:/forest/forest_config.toml.tpl
      - forest-data:/root/.local/share/forest
    environment:
      - FIL_PROOFS_PARAMETER_CACHE=/var/tmp/filecoin-proof-parameters
    networks:
      - devnet
    entrypoint:
      - /bin/bash
      - '-c'
      - |
        set -eux
        DATA_DIR=/root/.local/share/forest
        if [ ! -f /root/.local/share/forest/forest_config.toml ]; then
          export NETWORK_NAME=$$(grep -o \"localnet.*\" /lotus_data/localnet.json)
          cp /forest/forest_config.toml.tpl $$DATA_DIR/forest_config.toml
          echo name = $$NETWORK_NAME >> /root/.local/share/forest/forest_config.toml
        fi
        forest --genesis /lotus_data/devgen.car --config $$DATA_DIR/forest_config.toml --save-token /root/.local/share/forest/token.jwt

  # At the moment of writing, Forest was not able to connect to a devnet node using its config.
  # This is a workaround to force the connection.
  forest_connecter:
    user: root
    depends_on:
      forest:
        condition: service_healthy
    build:
      context: ../../.
      dockerfile: Dockerfile
    volumes:
      - lotus-data:/lotus_data
      - forest-data:/root/.local/share/forest
    networks:
      - devnet
    entrypoint:
      - /bin/bash
      - '-c'
      - |
        export TOKEN=$$(cat /root/.local/share/forest/token.jwt)
        export FULLNODE_API_INFO=$$TOKEN:/dns/forest/tcp/1236/http
        forest-cli net connect /dns/lotus/tcp/9090/p2p/$$(cat /lotus_data/PEER_ID)

volumes:
  filecoin-proofs:
  lotus-data:
  forest-data:

networks:
  devnet:
