# Docker compose file to run continuous Forest sync on both mainnet and calibnet.

version: "3.7"

services:
  forest_calibnet:
    image: ghcr.io/chainsafe/forest:${FOREST_TAG}
    hostname: forest-calibnet
    container_name: forest-calibnet
    volumes:
      - type: bind
        source: ${BASE_FOLDER}
        target: ${BASE_FOLDER}
    entrypoint: ["/bin/bash", "-c"]
    environment:
      - SLACK_HOOK
    command:
      - |
        apt-get install -y curl

        report() {
          curl -X POST -H 'Content-type: application/json' --data "{\"text\":\"‚ùå  $FOREST_HOSTNAME snapshot export failure!\"}" "$$SLACK_HOOK"
        }
        trap 'report' ERR

        cd $BASE_FOLDER
        RECENT_SNAPSHOT=s3/calibnet/`ls -Atr1 s3/calibnet/ | tail -n 1`
        forest --encrypt-keystore false --metrics-address 0.0.0.0:6116 --chain calibnet --import-snapshot $${RECENT_SNAPSHOT} &
        
        sleep 300 # Wait for the RPC endpoint to be available.

        forest sync wait # Wait for forest node to be completely synced.
        echo "Synced to calibnet"

        if [[ "$$(date -r "$${RECENT_SNAPSHOT}" +%F)" != "$$(date +%F)" ]]; then
          echo "No recent snapshot. Exporting new snapshot."
          forest chain export -r 2000 -s
          echo "Export done. Uploading.."
          mv ./forest_snapshot* s3/calibnet/
          echo "Upload done."
          curl -X POST -H 'Content-type: application/json' --data "{\"text\":\"‚úÖ $FOREST_HOSTNAME snapshot uploaded! üí™üå≤!\"}" "$$SLACK_HOOK"
        else
          echo "We already have a snapshot for today. Skipping."
          curl -X POST -H 'Content-type: application/json' --data "{\"text\":\"‚úÖ $FOREST_HOSTNAME snapshot check passed! üí™üå≤!\"}" "$$SLACK_HOOK"
        fi
    restart: on-failure
    labels:
      com.centurylinklabs.watchtower.enable: true
  watchtower:
    image: containrrr/watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /root/.docker/config.json:/config.json
    command: --label-enable --include-stopped --interval 3600
    restart: unless-stopped
