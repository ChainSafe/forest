# Docker compose file to run continuous Forest sync on both mainnet and calibnet.

version: "3.7"

services:
  forest_calibnet:
    image: ghcr.io/chainsafe/forest:${FOREST_TAG}
    hostname: forest-calibnet
    container_name: forest-calibnet
    networks:
      - calibnet
    volumes:
      - type: bind
        source: ${BASE_FOLDER}
        target: ${BASE_FOLDER}
    entrypoint: ["/bin/bash", "-c"]
    command:
      - |
        cd $BASE_FOLDER
        RECENT_SNAPSHOT=s3/calibnet/`ls -Atr1 s3/calibnet/ | tail -n 1`
        forest --encrypt-keystore false --metrics-address 0.0.0.0:6116 --chain calibnet --import-snapshot $${RECENT_SNAPSHOT}
    restart: on-failure
    labels:
      com.centurylinklabs.watchtower.enable: true
  # Probe container to validate Forest syncing. Needs to be on the same network.
  forest_tester:
    image: fedora:36
    networks:
      - mainnet
      - calibnet
    volumes:
      - type: bind
        source: ${BASE_FOLDER}
        target: ${BASE_FOLDER}
      - type: bind
        source: ${FOREST_HOST_LOGS}
        target: ${FOREST_TARGET_LOGS}
    environment:
      - BASE_FOLDER
      - SLACK_HOOK
      - FOREST_TARGET_LOGS
    entrypoint: ["/bin/bash","-c"]
    command:
      - |
        dnf install docker-client
        bash ${BASE_FOLDER}/sync_check.sh forest-calibnet
        sleep infinity
    depends_on:
      # - forest_mainnet
      - forest_calibnet
    labels:
      com.centurylinklabs.watchtower.enable: true
      com.centurylinklabs.watchtower.depends-on: "forest-calibnet"
  watchtower:
    image: containrrr/watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /root/.docker/config.json:/config.json
    command: --label-enable --include-stopped --interval 3600
    restart: unless-stopped

networks:
  mainnet:
  calibnet:

