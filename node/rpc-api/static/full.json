{
    "openrpc": "1.2.6",
    "info": {
        "title": "Lotus RPC API",
        "version": "1.11.2-dev"
    },
    "methods": [
        {
            "name": "Filecoin.BeaconGetEntry",
            "description": "```go\nfunc (s *FullNodeStruct) BeaconGetEntry(p0 context.Context, p1 abi.ChainEpoch) (*types.BeaconEntry, error) {\n\tif s.Internal.BeaconGetEntry == nil {\n\t\treturn nil, ErrNotSupported\n\t}\n\treturn s.Internal.BeaconGetEntry(p0, p1)\n}\n```",
            "summary": "BeaconGetEntry returns the beacon entry for the given filecoin epoch. If\nthe entry has not yet been produced, the call will block until the entry\nbecomes available\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "abi.ChainEpoch",
                    "summary": "",
                    "schema": {
                        "title": "number",
                        "description": "Number is a number",
                        "examples": [
                            10101
                        ],
                        "type": [
                            "number"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*types.BeaconEntry",
                "description": "*types.BeaconEntry",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "Round": 42,
                            "Data": "Ynl0ZSBhcnJheQ=="
                        }
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "Data": {
                            "media": {
                                "binaryEncoding": "base64"
                            },
                            "type": "string"
                        },
                        "Round": {
                            "title": "number",
                            "type": "number"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L987"
            }
        },
        {
            "name": "Filecoin.ChainBlockstoreInfo",
            "description": "```go\nfunc (s *FullNodeStruct) ChainBlockstoreInfo(p0 context.Context) (map[string]interface{}, error) {\n\tif s.Internal.ChainBlockstoreInfo == nil {\n\t\treturn *new(map[string]interface{}), ErrNotSupported\n\t}\n\treturn s.Internal.ChainBlockstoreInfo(p0)\n}\n```",
            "summary": "ChainBlockstoreInfo returns some basic information about the blockstore\n",
            "paramStructure": "by-position",
            "params": [],
            "result": {
                "name": "map[string]interface{}",
                "description": "map[string]interface{}",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "abc": 123
                        }
                    ],
                    "patternProperties": {
                        ".*": {
                            "additionalProperties": true,
                            "type": "object"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L998"
            }
        },
        {
            "name": "Filecoin.ChainCheckBlockstore",
            "description": "```go\nfunc (s *FullNodeStruct) ChainCheckBlockstore(p0 context.Context) error {\n\tif s.Internal.ChainCheckBlockstore == nil {\n\t\treturn ErrNotSupported\n\t}\n\treturn s.Internal.ChainCheckBlockstore(p0)\n}\n```",
            "summary": "ChainCheckBlockstore performs an (asynchronous) health check on the chain/state blockstore\nif supported by the underlying implementation.\n",
            "paramStructure": "by-position",
            "params": [],
            "result": {
                "name": "Null",
                "description": "Null",
                "schema": {
                    "type": [
                        "null"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L1009"
            }
        },
        {
            "name": "Filecoin.ChainDeleteObj",
            "description": "```go\nfunc (s *FullNodeStruct) ChainDeleteObj(p0 context.Context, p1 cid.Cid) error {\n\tif s.Internal.ChainDeleteObj == nil {\n\t\treturn ErrNotSupported\n\t}\n\treturn s.Internal.ChainDeleteObj(p0, p1)\n}\n```",
            "summary": "ChainDeleteObj deletes node referenced by the given CID\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "cid.Cid",
                    "summary": "",
                    "schema": {
                        "title": "Content Identifier",
                        "description": "Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.",
                        "examples": [
                            {
                                "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                            }
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "Null",
                "description": "Null",
                "schema": {
                    "type": [
                        "null"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L1020"
            }
        },
        {
            "name": "Filecoin.ChainGetBlock",
            "description": "```go\nfunc (s *FullNodeStruct) ChainGetBlock(p0 context.Context, p1 cid.Cid) (*types.BlockHeader, error) {\n\tif s.Internal.ChainGetBlock == nil {\n\t\treturn nil, ErrNotSupported\n\t}\n\treturn s.Internal.ChainGetBlock(p0, p1)\n}\n```",
            "summary": "ChainGetBlock returns the block specified by the given CID.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "cid.Cid",
                    "summary": "",
                    "schema": {
                        "title": "Content Identifier",
                        "description": "Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.",
                        "examples": [
                            {
                                "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                            }
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*types.BlockHeader",
                "description": "*types.BlockHeader",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "Miner": "f01234",
                            "Ticket": {
                                "VRFProof": "Ynl0ZSBhcnJheQ=="
                            },
                            "ElectionProof": {
                                "WinCount": 9,
                                "VRFProof": "Ynl0ZSBhcnJheQ=="
                            },
                            "BeaconEntries": null,
                            "WinPoStProof": null,
                            "Parents": null,
                            "ParentWeight": "0",
                            "Height": 10101,
                            "ParentStateRoot": {
                                "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                            },
                            "ParentMessageReceipts": {
                                "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                            },
                            "Messages": {
                                "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                            },
                            "BLSAggregate": {
                                "Type": 2,
                                "Data": "Ynl0ZSBhcnJheQ=="
                            },
                            "Timestamp": 42,
                            "BlockSig": {
                                "Type": 2,
                                "Data": "Ynl0ZSBhcnJheQ=="
                            },
                            "ForkSignaling": 42,
                            "ParentBaseFee": "0"
                        }
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "BLSAggregate": {
                            "additionalProperties": false,
                            "properties": {
                                "Data": {
                                    "media": {
                                        "binaryEncoding": "base64"
                                    },
                                    "type": "string"
                                },
                                "Type": {
                                    "title": "number",
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        "BeaconEntries": {
                            "items": {
                                "additionalProperties": false,
                                "properties": {
                                    "Data": {
                                        "media": {
                                            "binaryEncoding": "base64"
                                        },
                                        "type": "string"
                                    },
                                    "Round": {
                                        "title": "number",
                                        "type": "number"
                                    }
                                },
                                "type": "object"
                            },
                            "type": "array"
                        },
                        "BlockSig": {
                            "additionalProperties": false,
                            "properties": {
                                "Data": {
                                    "media": {
                                        "binaryEncoding": "base64"
                                    },
                                    "type": "string"
                                },
                                "Type": {
                                    "title": "number",
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        "ElectionProof": {
                            "additionalProperties": false,
                            "properties": {
                                "VRFProof": {
                                    "media": {
                                        "binaryEncoding": "base64"
                                    },
                                    "type": "string"
                                },
                                "WinCount": {
                                    "title": "number",
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        "ForkSignaling": {
                            "title": "number",
                            "type": "number"
                        },
                        "Height": {
                            "title": "number",
                            "type": "number"
                        },
                        "Messages": {
                            "title": "Content Identifier",
                            "type": "string"
                        },
                        "Miner": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "ParentBaseFee": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "ParentMessageReceipts": {
                            "title": "Content Identifier",
                            "type": "string"
                        },
                        "ParentStateRoot": {
                            "title": "Content Identifier",
                            "type": "string"
                        },
                        "ParentWeight": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "Parents": {
                            "items": {
                                "description": "Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.",
                                "title": "Content Identifier",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "Ticket": {
                            "additionalProperties": false,
                            "properties": {
                                "VRFProof": {
                                    "media": {
                                        "binaryEncoding": "base64"
                                    },
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "Timestamp": {
                            "title": "number",
                            "type": "number"
                        },
                        "WinPoStProof": {
                            "items": {
                                "additionalProperties": false,
                                "properties": {
                                    "PoStProof": {
                                        "title": "number",
                                        "type": "number"
                                    },
                                    "ProofBytes": {
                                        "media": {
                                            "binaryEncoding": "base64"
                                        },
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "type": "array"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L1042"
            }
        },
        {
            "name": "Filecoin.ChainGetBlockMessages",
            "description": "```go\nfunc (s *FullNodeStruct) ChainGetBlockMessages(p0 context.Context, p1 cid.Cid) (*BlockMessages, error) {\n\tif s.Internal.ChainGetBlockMessages == nil {\n\t\treturn nil, ErrNotSupported\n\t}\n\treturn s.Internal.ChainGetBlockMessages(p0, p1)\n}\n```",
            "summary": "ChainGetBlockMessages returns messages stored in the specified block.\n\nNote: If there are multiple blocks in a tipset, it's likely that some\nmessages will be duplicated. It's also possible for blocks in a tipset to have\ndifferent messages from the same sender at the same nonce. When that happens,\nonly the first message (in a block with lowest ticket) will be considered\nfor execution\n\nNOTE: THIS METHOD SHOULD ONLY BE USED FOR GETTING MESSAGES IN A SPECIFIC BLOCK\n\nDO NOT USE THIS METHOD TO GET MESSAGES INCLUDED IN A TIPSET\nUse ChainGetParentMessages, which will perform correct message deduplication\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "cid.Cid",
                    "summary": "",
                    "schema": {
                        "title": "Content Identifier",
                        "description": "Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.",
                        "examples": [
                            {
                                "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                            }
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*BlockMessages",
                "description": "*BlockMessages",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "BlsMessages": null,
                            "SecpkMessages": null,
                            "Cids": null
                        }
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "BlsMessages": {
                            "items": {
                                "additionalProperties": false,
                                "properties": {
                                    "From": {
                                        "additionalProperties": false,
                                        "type": "object"
                                    },
                                    "GasFeeCap": {
                                        "additionalProperties": false,
                                        "type": "object"
                                    },
                                    "GasLimit": {
                                        "title": "number",
                                        "type": "number"
                                    },
                                    "GasPremium": {
                                        "additionalProperties": false,
                                        "type": "object"
                                    },
                                    "Method": {
                                        "title": "number",
                                        "type": "number"
                                    },
                                    "Nonce": {
                                        "title": "number",
                                        "type": "number"
                                    },
                                    "Params": {
                                        "media": {
                                            "binaryEncoding": "base64"
                                        },
                                        "type": "string"
                                    },
                                    "To": {
                                        "additionalProperties": false,
                                        "type": "object"
                                    },
                                    "Value": {
                                        "additionalProperties": false,
                                        "type": "object"
                                    },
                                    "Version": {
                                        "title": "number",
                                        "type": "number"
                                    }
                                },
                                "type": "object"
                            },
                            "type": "array"
                        },
                        "Cids": {
                            "items": {
                                "description": "Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.",
                                "title": "Content Identifier",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "SecpkMessages": {
                            "items": {
                                "additionalProperties": false,
                                "properties": {
                                    "Message": {
                                        "additionalProperties": false,
                                        "properties": {
                                            "From": {
                                                "additionalProperties": false,
                                                "type": "object"
                                            },
                                            "GasFeeCap": {
                                                "additionalProperties": false,
                                                "type": "object"
                                            },
                                            "GasLimit": {
                                                "title": "number",
                                                "type": "number"
                                            },
                                            "GasPremium": {
                                                "additionalProperties": false,
                                                "type": "object"
                                            },
                                            "Method": {
                                                "title": "number",
                                                "type": "number"
                                            },
                                            "Nonce": {
                                                "title": "number",
                                                "type": "number"
                                            },
                                            "Params": {
                                                "media": {
                                                    "binaryEncoding": "base64"
                                                },
                                                "type": "string"
                                            },
                                            "To": {
                                                "additionalProperties": false,
                                                "type": "object"
                                            },
                                            "Value": {
                                                "additionalProperties": false,
                                                "type": "object"
                                            },
                                            "Version": {
                                                "title": "number",
                                                "type": "number"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "Signature": {
                                        "additionalProperties": false,
                                        "properties": {
                                            "Data": {
                                                "media": {
                                                    "binaryEncoding": "base64"
                                                },
                                                "type": "string"
                                            },
                                            "Type": {
                                                "title": "number",
                                                "type": "number"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            },
                            "type": "array"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L1053"
            }
        },
        {
            "name": "Filecoin.ChainGetGenesis",
            "description": "```go\nfunc (s *FullNodeStruct) ChainGetGenesis(p0 context.Context) (*types.TipSet, error) {\n\tif s.Internal.ChainGetGenesis == nil {\n\t\treturn nil, ErrNotSupported\n\t}\n\treturn s.Internal.ChainGetGenesis(p0)\n}\n```",
            "summary": "ChainGetGenesis returns the genesis tipset.\n",
            "paramStructure": "by-position",
            "params": [],
            "result": {
                "name": "*types.TipSet",
                "description": "*types.TipSet",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "Cids": null,
                            "Blocks": null,
                            "Height": 0
                        }
                    ],
                    "additionalProperties": false,
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L1064"
            }
        },
        {
            "name": "Filecoin.ChainGetMessage",
            "description": "```go\nfunc (s *FullNodeStruct) ChainGetMessage(p0 context.Context, p1 cid.Cid) (*types.Message, error) {\n\tif s.Internal.ChainGetMessage == nil {\n\t\treturn nil, ErrNotSupported\n\t}\n\treturn s.Internal.ChainGetMessage(p0, p1)\n}\n```",
            "summary": "ChainGetMessage reads a message referenced by the specified CID from the\nchain blockstore.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "cid.Cid",
                    "summary": "",
                    "schema": {
                        "title": "Content Identifier",
                        "description": "Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.",
                        "examples": [
                            {
                                "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                            }
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*types.Message",
                "description": "*types.Message",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "Version": 42,
                            "To": "f01234",
                            "From": "f01234",
                            "Nonce": 42,
                            "Value": "0",
                            "GasLimit": 9,
                            "GasFeeCap": "0",
                            "GasPremium": "0",
                            "Method": 1,
                            "Params": "Ynl0ZSBhcnJheQ==",
                            "CID": {
                                "/": "bafy2bzacebbpdegvr3i4cosewthysg5xkxpqfn2wfcz6mv2hmoktwbdxkax4s"
                            }
                        }
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "From": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "GasFeeCap": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "GasLimit": {
                            "title": "number",
                            "type": "number"
                        },
                        "GasPremium": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "Method": {
                            "title": "number",
                            "type": "number"
                        },
                        "Nonce": {
                            "title": "number",
                            "type": "number"
                        },
                        "Params": {
                            "media": {
                                "binaryEncoding": "base64"
                            },
                            "type": "string"
                        },
                        "To": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "Value": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "Version": {
                            "title": "number",
                            "type": "number"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L1075"
            }
        },
        {
            "name": "Filecoin.ChainGetMessagesInTipset",
            "description": "```go\nfunc (s *FullNodeStruct) ChainGetMessagesInTipset(p0 context.Context, p1 types.TipSetKey) ([]Message, error) {\n\tif s.Internal.ChainGetMessagesInTipset == nil {\n\t\treturn *new([]Message), ErrNotSupported\n\t}\n\treturn s.Internal.ChainGetMessagesInTipset(p0, p1)\n}\n```",
            "summary": "ChainGetMessagesInTipset returns message stores in current tipset\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "[]Message",
                "description": "[]Message",
                "summary": "",
                "schema": {
                    "examples": [
                        null
                    ],
                    "items": [
                        {
                            "additionalProperties": false,
                            "properties": {
                                "Cid": {
                                    "title": "Content Identifier",
                                    "type": "string"
                                },
                                "Message": {
                                    "additionalProperties": false,
                                    "properties": {
                                        "Cid": {
                                            "title": "Content Identifier",
                                            "type": "string"
                                        },
                                        "Message": {}
                                    },
                                    "type": "object"
                                }
                            },
                            "type": [
                                "object"
                            ]
                        }
                    ],
                    "type": [
                        "array"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L1086"
            }
        },
        {
            "name": "Filecoin.ChainGetNode",
            "description": "```go\nfunc (s *FullNodeStruct) ChainGetNode(p0 context.Context, p1 string) (*IpldObject, error) {\n\tif s.Internal.ChainGetNode == nil {\n\t\treturn nil, ErrNotSupported\n\t}\n\treturn s.Internal.ChainGetNode(p0, p1)\n}\n```",
            "summary": "",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "string",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "string value"
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*IpldObject",
                "description": "*IpldObject",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "Cid": {
                                "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                            },
                            "Obj": {}
                        }
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "Cid": {
                            "title": "Content Identifier",
                            "type": "string"
                        },
                        "Obj": {
                            "additionalProperties": true,
                            "type": "object"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L1097"
            }
        },
        {
            "name": "Filecoin.ChainGetParentMessages",
            "description": "```go\nfunc (s *FullNodeStruct) ChainGetParentMessages(p0 context.Context, p1 cid.Cid) ([]Message, error) {\n\tif s.Internal.ChainGetParentMessages == nil {\n\t\treturn *new([]Message), ErrNotSupported\n\t}\n\treturn s.Internal.ChainGetParentMessages(p0, p1)\n}\n```",
            "summary": "ChainGetParentMessages returns messages stored in parent tipset of the\nspecified block.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "cid.Cid",
                    "summary": "",
                    "schema": {
                        "title": "Content Identifier",
                        "description": "Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.",
                        "examples": [
                            {
                                "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                            }
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "[]Message",
                "description": "[]Message",
                "summary": "",
                "schema": {
                    "examples": [
                        null
                    ],
                    "items": [
                        {
                            "additionalProperties": false,
                            "properties": {
                                "Cid": {
                                    "title": "Content Identifier",
                                    "type": "string"
                                },
                                "Message": {
                                    "additionalProperties": false,
                                    "properties": {
                                        "Cid": {
                                            "title": "Content Identifier",
                                            "type": "string"
                                        },
                                        "Message": {}
                                    },
                                    "type": "object"
                                }
                            },
                            "type": [
                                "object"
                            ]
                        }
                    ],
                    "type": [
                        "array"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L1108"
            }
        },
        {
            "name": "Filecoin.ChainGetParentReceipts",
            "description": "```go\nfunc (s *FullNodeStruct) ChainGetParentReceipts(p0 context.Context, p1 cid.Cid) ([]*types.MessageReceipt, error) {\n\tif s.Internal.ChainGetParentReceipts == nil {\n\t\treturn *new([]*types.MessageReceipt), ErrNotSupported\n\t}\n\treturn s.Internal.ChainGetParentReceipts(p0, p1)\n}\n```",
            "summary": "ChainGetParentReceipts returns receipts for messages in parent tipset of\nthe specified block. The receipts in the list returned is one-to-one with the\nmessages returned by a call to ChainGetParentMessages with the same blockCid.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "cid.Cid",
                    "summary": "",
                    "schema": {
                        "title": "Content Identifier",
                        "description": "Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.",
                        "examples": [
                            {
                                "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                            }
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "[]*types.MessageReceipt",
                "description": "[]*types.MessageReceipt",
                "summary": "",
                "schema": {
                    "examples": [
                        null
                    ],
                    "items": [
                        {
                            "additionalProperties": false,
                            "properties": {
                                "ExitCode": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "GasUsed": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "Return": {
                                    "media": {
                                        "binaryEncoding": "base64"
                                    },
                                    "type": "string"
                                }
                            },
                            "type": [
                                "object"
                            ]
                        }
                    ],
                    "type": [
                        "array"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L1119"
            }
        },
        {
            "name": "Filecoin.ChainGetPath",
            "description": "```go\nfunc (s *FullNodeStruct) ChainGetPath(p0 context.Context, p1 types.TipSetKey, p2 types.TipSetKey) ([]*HeadChange, error) {\n\tif s.Internal.ChainGetPath == nil {\n\t\treturn *new([]*HeadChange), ErrNotSupported\n\t}\n\treturn s.Internal.ChainGetPath(p0, p1, p2)\n}\n```",
            "summary": "ChainGetPath returns a set of revert/apply operations needed to get from\none tipset to another, for example:\n```\n       to\n        ^\nfrom   tAA\n  ^     ^\ntBA    tAB\n ^---*--^\n     ^\n    tRR\n```\nWould return `[revert(tBA), apply(tAB), apply(tAA)]`\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p2",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "[]*HeadChange",
                "description": "[]*HeadChange",
                "summary": "",
                "schema": {
                    "examples": [
                        null
                    ],
                    "items": [
                        {
                            "additionalProperties": false,
                            "properties": {
                                "Type": {
                                    "type": "string"
                                },
                                "Val": {
                                    "additionalProperties": false,
                                    "type": "object"
                                }
                            },
                            "type": [
                                "object"
                            ]
                        }
                    ],
                    "type": [
                        "array"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L1130"
            }
        },
        {
            "name": "Filecoin.ChainGetRandomnessFromBeacon",
            "description": "```go\nfunc (s *FullNodeStruct) ChainGetRandomnessFromBeacon(p0 context.Context, p1 types.TipSetKey, p2 crypto.DomainSeparationTag, p3 abi.ChainEpoch, p4 []byte) (abi.Randomness, error) {\n\tif s.Internal.ChainGetRandomnessFromBeacon == nil {\n\t\treturn *new(abi.Randomness), ErrNotSupported\n\t}\n\treturn s.Internal.ChainGetRandomnessFromBeacon(p0, p1, p2, p3, p4)\n}\n```",
            "summary": "ChainGetRandomnessFromBeacon is used to sample the beacon for randomness.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p2",
                    "description": "crypto.DomainSeparationTag",
                    "summary": "",
                    "schema": {
                        "title": "number",
                        "description": "Number is a number",
                        "examples": [
                            2
                        ],
                        "type": [
                            "number"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p3",
                    "description": "abi.ChainEpoch",
                    "summary": "",
                    "schema": {
                        "title": "number",
                        "description": "Number is a number",
                        "examples": [
                            10101
                        ],
                        "type": [
                            "number"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p4",
                    "description": "[]byte",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "Ynl0ZSBhcnJheQ=="
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "abi.Randomness",
                "description": "abi.Randomness",
                "summary": "",
                "schema": {
                    "examples": [
                        null
                    ],
                    "items": [
                        {
                            "title": "number",
                            "description": "Number is a number",
                            "type": [
                                "number"
                            ]
                        }
                    ],
                    "type": [
                        "array"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L1141"
            }
        },
        {
            "name": "Filecoin.ChainGetRandomnessFromTickets",
            "description": "```go\nfunc (s *FullNodeStruct) ChainGetRandomnessFromTickets(p0 context.Context, p1 types.TipSetKey, p2 crypto.DomainSeparationTag, p3 abi.ChainEpoch, p4 []byte) (abi.Randomness, error) {\n\tif s.Internal.ChainGetRandomnessFromTickets == nil {\n\t\treturn *new(abi.Randomness), ErrNotSupported\n\t}\n\treturn s.Internal.ChainGetRandomnessFromTickets(p0, p1, p2, p3, p4)\n}\n```",
            "summary": "ChainGetRandomnessFromTickets is used to sample the chain for randomness.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p2",
                    "description": "crypto.DomainSeparationTag",
                    "summary": "",
                    "schema": {
                        "title": "number",
                        "description": "Number is a number",
                        "examples": [
                            2
                        ],
                        "type": [
                            "number"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p3",
                    "description": "abi.ChainEpoch",
                    "summary": "",
                    "schema": {
                        "title": "number",
                        "description": "Number is a number",
                        "examples": [
                            10101
                        ],
                        "type": [
                            "number"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p4",
                    "description": "[]byte",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "Ynl0ZSBhcnJheQ=="
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "abi.Randomness",
                "description": "abi.Randomness",
                "summary": "",
                "schema": {
                    "examples": [
                        null
                    ],
                    "items": [
                        {
                            "title": "number",
                            "description": "Number is a number",
                            "type": [
                                "number"
                            ]
                        }
                    ],
                    "type": [
                        "array"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L1152"
            }
        },
        {
            "name": "Filecoin.ChainGetTipSet",
            "description": "```go\nfunc (s *FullNodeStruct) ChainGetTipSet(p0 context.Context, p1 types.TipSetKey) (*types.TipSet, error) {\n\tif s.Internal.ChainGetTipSet == nil {\n\t\treturn nil, ErrNotSupported\n\t}\n\treturn s.Internal.ChainGetTipSet(p0, p1)\n}\n```",
            "summary": "ChainGetTipSet returns the tipset specified by the given TipSetKey.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*types.TipSet",
                "description": "*types.TipSet",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "Cids": null,
                            "Blocks": null,
                            "Height": 0
                        }
                    ],
                    "additionalProperties": false,
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L1163"
            }
        },
        {
            "name": "Filecoin.ChainGetTipSetByHeight",
            "description": "```go\nfunc (s *FullNodeStruct) ChainGetTipSetByHeight(p0 context.Context, p1 abi.ChainEpoch, p2 types.TipSetKey) (*types.TipSet, error) {\n\tif s.Internal.ChainGetTipSetByHeight == nil {\n\t\treturn nil, ErrNotSupported\n\t}\n\treturn s.Internal.ChainGetTipSetByHeight(p0, p1, p2)\n}\n```",
            "summary": "ChainGetTipSetByHeight looks back for a tipset at the specified epoch.\nIf there are no blocks at the specified epoch, a tipset at an earlier epoch\nwill be returned.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "abi.ChainEpoch",
                    "summary": "",
                    "schema": {
                        "title": "number",
                        "description": "Number is a number",
                        "examples": [
                            10101
                        ],
                        "type": [
                            "number"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p2",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*types.TipSet",
                "description": "*types.TipSet",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "Cids": null,
                            "Blocks": null,
                            "Height": 0
                        }
                    ],
                    "additionalProperties": false,
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L1174"
            }
        },
        {
            "name": "Filecoin.ChainHasObj",
            "description": "```go\nfunc (s *FullNodeStruct) ChainHasObj(p0 context.Context, p1 cid.Cid) (bool, error) {\n\tif s.Internal.ChainHasObj == nil {\n\t\treturn false, ErrNotSupported\n\t}\n\treturn s.Internal.ChainHasObj(p0, p1)\n}\n```",
            "summary": "ChainHasObj checks if a given CID exists in the chain blockstore.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "cid.Cid",
                    "summary": "",
                    "schema": {
                        "title": "Content Identifier",
                        "description": "Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.",
                        "examples": [
                            {
                                "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                            }
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "bool",
                "description": "bool",
                "summary": "",
                "schema": {
                    "examples": [
                        true
                    ],
                    "type": [
                        "boolean"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L1185"
            }
        },
        {
            "name": "Filecoin.ChainHead",
            "description": "```go\nfunc (s *FullNodeStruct) ChainHead(p0 context.Context) (*types.TipSet, error) {\n\tif s.Internal.ChainHead == nil {\n\t\treturn nil, ErrNotSupported\n\t}\n\treturn s.Internal.ChainHead(p0)\n}\n```",
            "summary": "ChainHead returns the current head of the chain.\n",
            "paramStructure": "by-position",
            "params": [],
            "result": {
                "name": "*types.TipSet",
                "description": "*types.TipSet",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "Cids": null,
                            "Blocks": null,
                            "Height": 0
                        }
                    ],
                    "additionalProperties": false,
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L1196"
            }
        },
        {
            "name": "Filecoin.ChainReadObj",
            "description": "```go\nfunc (s *FullNodeStruct) ChainReadObj(p0 context.Context, p1 cid.Cid) ([]byte, error) {\n\tif s.Internal.ChainReadObj == nil {\n\t\treturn *new([]byte), ErrNotSupported\n\t}\n\treturn s.Internal.ChainReadObj(p0, p1)\n}\n```",
            "summary": "ChainReadObj reads ipld nodes referenced by the specified CID from chain\nblockstore and returns raw bytes.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "cid.Cid",
                    "summary": "",
                    "schema": {
                        "title": "Content Identifier",
                        "description": "Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.",
                        "examples": [
                            {
                                "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                            }
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "[]byte",
                "description": "[]byte",
                "summary": "",
                "schema": {
                    "examples": [
                        "Ynl0ZSBhcnJheQ=="
                    ],
                    "type": [
                        "string"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L1218"
            }
        },
        {
            "name": "Filecoin.ChainSetHead",
            "description": "```go\nfunc (s *FullNodeStruct) ChainSetHead(p0 context.Context, p1 types.TipSetKey) error {\n\tif s.Internal.ChainSetHead == nil {\n\t\treturn ErrNotSupported\n\t}\n\treturn s.Internal.ChainSetHead(p0, p1)\n}\n```",
            "summary": "ChainSetHead forcefully sets current chain head. Use with caution.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "Null",
                "description": "Null",
                "schema": {
                    "type": [
                        "null"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L1229"
            }
        },
        {
            "name": "Filecoin.ChainStatObj",
            "description": "```go\nfunc (s *FullNodeStruct) ChainStatObj(p0 context.Context, p1 cid.Cid, p2 cid.Cid) (ObjStat, error) {\n\tif s.Internal.ChainStatObj == nil {\n\t\treturn *new(ObjStat), ErrNotSupported\n\t}\n\treturn s.Internal.ChainStatObj(p0, p1, p2)\n}\n```",
            "summary": "ChainStatObj returns statistics about the graph referenced by 'obj'.\nIf 'base' is also specified, then the returned stat will be a diff\nbetween the two objects.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "cid.Cid",
                    "summary": "",
                    "schema": {
                        "title": "Content Identifier",
                        "description": "Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.",
                        "examples": [
                            {
                                "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                            }
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p2",
                    "description": "cid.Cid",
                    "summary": "",
                    "schema": {
                        "title": "Content Identifier",
                        "description": "Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.",
                        "examples": [
                            {
                                "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                            }
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "ObjStat",
                "description": "ObjStat",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "Size": 42,
                            "Links": 42
                        }
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "Links": {
                            "title": "number",
                            "type": "number"
                        },
                        "Size": {
                            "title": "number",
                            "type": "number"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L1240"
            }
        },
        {
            "name": "Filecoin.ChainTipSetWeight",
            "description": "```go\nfunc (s *FullNodeStruct) ChainTipSetWeight(p0 context.Context, p1 types.TipSetKey) (types.BigInt, error) {\n\tif s.Internal.ChainTipSetWeight == nil {\n\t\treturn *new(types.BigInt), ErrNotSupported\n\t}\n\treturn s.Internal.ChainTipSetWeight(p0, p1)\n}\n```",
            "summary": "ChainTipSetWeight computes weight for the specified tipset.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "types.BigInt",
                "description": "types.BigInt",
                "summary": "",
                "schema": {
                    "examples": [
                        "0"
                    ],
                    "additionalProperties": false,
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L1251"
            }
        },
        {
            "name": "Filecoin.ClientCalcCommP",
            "description": "```go\nfunc (s *FullNodeStruct) ClientCalcCommP(p0 context.Context, p1 string) (*CommPRet, error) {\n\tif s.Internal.ClientCalcCommP == nil {\n\t\treturn nil, ErrNotSupported\n\t}\n\treturn s.Internal.ClientCalcCommP(p0, p1)\n}\n```",
            "summary": "ClientCalcCommP calculates the CommP for a specified file\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "string",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "string value"
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*CommPRet",
                "description": "*CommPRet",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "Root": {
                                "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                            },
                            "Size": 1024
                        }
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "Root": {
                            "title": "Content Identifier",
                            "type": "string"
                        },
                        "Size": {
                            "title": "number",
                            "type": "number"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L1262"
            }
        },
        {
            "name": "Filecoin.ClientCancelDataTransfer",
            "description": "```go\nfunc (s *FullNodeStruct) ClientCancelDataTransfer(p0 context.Context, p1 datatransfer.TransferID, p2 peer.ID, p3 bool) error {\n\tif s.Internal.ClientCancelDataTransfer == nil {\n\t\treturn ErrNotSupported\n\t}\n\treturn s.Internal.ClientCancelDataTransfer(p0, p1, p2, p3)\n}\n```",
            "summary": "ClientCancelDataTransfer cancels a data transfer with the given transfer ID and other peer\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "datatransfer.TransferID",
                    "summary": "",
                    "schema": {
                        "title": "number",
                        "description": "Number is a number",
                        "examples": [
                            3
                        ],
                        "type": [
                            "number"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p2",
                    "description": "peer.ID",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "12D3KooWGzxzKZYveHXtpG6AsrUJBcWxHBFS2HsEoGTxrMLvKXtf"
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p3",
                    "description": "bool",
                    "summary": "",
                    "schema": {
                        "examples": [
                            true
                        ],
                        "type": [
                            "boolean"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "Null",
                "description": "Null",
                "schema": {
                    "type": [
                        "null"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L1273"
            }
        },
        {
            "name": "Filecoin.ClientCancelRetrievalDeal",
            "description": "```go\nfunc (s *FullNodeStruct) ClientCancelRetrievalDeal(p0 context.Context, p1 retrievalmarket.DealID) error {\n\tif s.Internal.ClientCancelRetrievalDeal == nil {\n\t\treturn ErrNotSupported\n\t}\n\treturn s.Internal.ClientCancelRetrievalDeal(p0, p1)\n}\n```",
            "summary": "ClientCancelRetrievalDeal cancels an ongoing retrieval deal based on DealID\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "retrievalmarket.DealID",
                    "summary": "",
                    "schema": {
                        "title": "number",
                        "description": "Number is a number",
                        "examples": [
                            5
                        ],
                        "type": [
                            "number"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "Null",
                "description": "Null",
                "schema": {
                    "type": [
                        "null"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L1284"
            }
        },
        {
            "name": "Filecoin.ClientDealPieceCID",
            "description": "```go\nfunc (s *FullNodeStruct) ClientDealPieceCID(p0 context.Context, p1 cid.Cid) (DataCIDSize, error) {\n\tif s.Internal.ClientDealPieceCID == nil {\n\t\treturn *new(DataCIDSize), ErrNotSupported\n\t}\n\treturn s.Internal.ClientDealPieceCID(p0, p1)\n}\n```",
            "summary": "ClientCalcCommP calculates the CommP and data size of the specified CID\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "cid.Cid",
                    "summary": "",
                    "schema": {
                        "title": "Content Identifier",
                        "description": "Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.",
                        "examples": [
                            {
                                "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                            }
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "DataCIDSize",
                "description": "DataCIDSize",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "PayloadSize": 9,
                            "PieceSize": 1032,
                            "PieceCID": {
                                "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                            }
                        }
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "PayloadSize": {
                            "title": "number",
                            "type": "number"
                        },
                        "PieceCID": {
                            "title": "Content Identifier",
                            "type": "string"
                        },
                        "PieceSize": {
                            "title": "number",
                            "type": "number"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L1306"
            }
        },
        {
            "name": "Filecoin.ClientDealSize",
            "description": "```go\nfunc (s *FullNodeStruct) ClientDealSize(p0 context.Context, p1 cid.Cid) (DataSize, error) {\n\tif s.Internal.ClientDealSize == nil {\n\t\treturn *new(DataSize), ErrNotSupported\n\t}\n\treturn s.Internal.ClientDealSize(p0, p1)\n}\n```",
            "summary": "ClientDealSize calculates real deal data size\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "cid.Cid",
                    "summary": "",
                    "schema": {
                        "title": "Content Identifier",
                        "description": "Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.",
                        "examples": [
                            {
                                "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                            }
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "DataSize",
                "description": "DataSize",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "PayloadSize": 9,
                            "PieceSize": 1032
                        }
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "PayloadSize": {
                            "title": "number",
                            "type": "number"
                        },
                        "PieceSize": {
                            "title": "number",
                            "type": "number"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L1317"
            }
        },
        {
            "name": "Filecoin.ClientFindData",
            "description": "```go\nfunc (s *FullNodeStruct) ClientFindData(p0 context.Context, p1 cid.Cid, p2 *cid.Cid) ([]QueryOffer, error) {\n\tif s.Internal.ClientFindData == nil {\n\t\treturn *new([]QueryOffer), ErrNotSupported\n\t}\n\treturn s.Internal.ClientFindData(p0, p1, p2)\n}\n```",
            "summary": "ClientFindData identifies peers that have a certain file, and returns QueryOffers (one per peer).\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "cid.Cid",
                    "summary": "",
                    "schema": {
                        "title": "Content Identifier",
                        "description": "Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.",
                        "examples": [
                            {
                                "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                            }
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p2",
                    "description": "*cid.Cid",
                    "summary": "",
                    "schema": {
                        "title": "Content Identifier",
                        "description": "Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.",
                        "examples": [
                            null
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "[]QueryOffer",
                "description": "[]QueryOffer",
                "summary": "",
                "schema": {
                    "examples": [
                        null
                    ],
                    "items": [
                        {
                            "additionalProperties": false,
                            "properties": {
                                "Err": {
                                    "type": "string"
                                },
                                "MinPrice": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "Miner": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "MinerPeer": {
                                    "additionalProperties": false,
                                    "properties": {
                                        "Address": {
                                            "additionalProperties": false,
                                            "type": "object"
                                        },
                                        "ID": {
                                            "type": "string"
                                        },
                                        "PieceCID": {
                                            "title": "Content Identifier",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "PaymentInterval": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "PaymentIntervalIncrease": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "Piece": {
                                    "title": "Content Identifier",
                                    "type": "string"
                                },
                                "Root": {
                                    "title": "Content Identifier",
                                    "type": "string"
                                },
                                "Size": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "UnsealPrice": {
                                    "additionalProperties": false,
                                    "type": "object"
                                }
                            },
                            "type": [
                                "object"
                            ]
                        }
                    ],
                    "type": [
                        "array"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L1328"
            }
        },
        {
            "name": "Filecoin.ClientGenCar",
            "description": "```go\nfunc (s *FullNodeStruct) ClientGenCar(p0 context.Context, p1 FileRef, p2 string) error {\n\tif s.Internal.ClientGenCar == nil {\n\t\treturn ErrNotSupported\n\t}\n\treturn s.Internal.ClientGenCar(p0, p1, p2)\n}\n```",
            "summary": "ClientGenCar generates a CAR file for the specified file.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "FileRef",
                    "summary": "",
                    "schema": {
                        "examples": [
                            {
                                "Path": "string value",
                                "IsCAR": true
                            }
                        ],
                        "additionalProperties": false,
                        "properties": {
                            "IsCAR": {
                                "type": "boolean"
                            },
                            "Path": {
                                "type": "string"
                            }
                        },
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p2",
                    "description": "string",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "string value"
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "Null",
                "description": "Null",
                "schema": {
                    "type": [
                        "null"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L1339"
            }
        },
        {
            "name": "Filecoin.ClientGetDealInfo",
            "description": "```go\nfunc (s *FullNodeStruct) ClientGetDealInfo(p0 context.Context, p1 cid.Cid) (*DealInfo, error) {\n\tif s.Internal.ClientGetDealInfo == nil {\n\t\treturn nil, ErrNotSupported\n\t}\n\treturn s.Internal.ClientGetDealInfo(p0, p1)\n}\n```",
            "summary": "ClientGetDealInfo returns the latest information about a given deal.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "cid.Cid",
                    "summary": "",
                    "schema": {
                        "title": "Content Identifier",
                        "description": "Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.",
                        "examples": [
                            {
                                "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                            }
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*DealInfo",
                "description": "*DealInfo",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "ProposalCid": {
                                "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                            },
                            "State": 42,
                            "Message": "string value",
                            "DealStages": {
                                "Stages": null
                            },
                            "Provider": "f01234",
                            "DataRef": {
                                "TransferType": "string value",
                                "Root": {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                "PieceCid": null,
                                "PieceSize": 1024,
                                "RawBlockSize": 42
                            },
                            "PieceCID": {
                                "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                            },
                            "Size": 42,
                            "PricePerEpoch": "0",
                            "Duration": 42,
                            "DealID": 5432,
                            "CreationTime": "0001-01-01T00:00:00Z",
                            "Verified": true,
                            "TransferChannelID": {
                                "Initiator": "12D3KooWGzxzKZYveHXtpG6AsrUJBcWxHBFS2HsEoGTxrMLvKXtf",
                                "Responder": "12D3KooWGzxzKZYveHXtpG6AsrUJBcWxHBFS2HsEoGTxrMLvKXtf",
                                "ID": 3
                            },
                            "DataTransfer": {
                                "TransferID": 3,
                                "Status": 1,
                                "BaseCID": {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                "IsInitiator": true,
                                "IsSender": true,
                                "Voucher": "string value",
                                "Message": "string value",
                                "OtherPeer": "12D3KooWGzxzKZYveHXtpG6AsrUJBcWxHBFS2HsEoGTxrMLvKXtf",
                                "Transferred": 42,
                                "Stages": {
                                    "Stages": null
                                }
                            }
                        }
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "CreationTime": {
                            "format": "date-time",
                            "type": "string"
                        },
                        "DataRef": {
                            "additionalProperties": false,
                            "properties": {
                                "PieceCid": {
                                    "title": "Content Identifier",
                                    "type": "string"
                                },
                                "PieceSize": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "RawBlockSize": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "Root": {
                                    "title": "Content Identifier",
                                    "type": "string"
                                },
                                "TransferType": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "DataTransfer": {
                            "additionalProperties": false,
                            "properties": {
                                "BaseCID": {
                                    "title": "Content Identifier",
                                    "type": "string"
                                },
                                "IsInitiator": {
                                    "type": "boolean"
                                },
                                "IsSender": {
                                    "type": "boolean"
                                },
                                "Message": {
                                    "type": "string"
                                },
                                "OtherPeer": {
                                    "type": "string"
                                },
                                "Stages": {
                                    "additionalProperties": false,
                                    "properties": {
                                        "Stages": {
                                            "items": {
                                                "additionalProperties": false,
                                                "properties": {
                                                    "CreatedTime": {
                                                        "additionalProperties": false,
                                                        "type": "object"
                                                    },
                                                    "Description": {
                                                        "type": "string"
                                                    },
                                                    "Logs": {
                                                        "items": {
                                                            "additionalProperties": false,
                                                            "properties": {
                                                                "Log": {
                                                                    "type": "string"
                                                                },
                                                                "UpdatedTime": {
                                                                    "additionalProperties": false,
                                                                    "type": "object"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "Name": {
                                                        "type": "string"
                                                    },
                                                    "UpdatedTime": {
                                                        "additionalProperties": false,
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                },
                                "Status": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "TransferID": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "Transferred": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "Voucher": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "DealID": {
                            "title": "number",
                            "type": "number"
                        },
                        "DealStages": {
                            "additionalProperties": false,
                            "properties": {
                                "Stages": {
                                    "items": {
                                        "additionalProperties": false,
                                        "properties": {
                                            "CreatedTime": {
                                                "additionalProperties": false,
                                                "type": "object"
                                            },
                                            "Description": {
                                                "type": "string"
                                            },
                                            "ExpectedDuration": {
                                                "type": "string"
                                            },
                                            "Logs": {
                                                "items": {
                                                    "additionalProperties": false,
                                                    "properties": {
                                                        "Log": {
                                                            "type": "string"
                                                        },
                                                        "UpdatedTime": {
                                                            "additionalProperties": false,
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "type": "array"
                                            },
                                            "Name": {
                                                "type": "string"
                                            },
                                            "UpdatedTime": {
                                                "additionalProperties": false,
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        },
                        "Duration": {
                            "title": "number",
                            "type": "number"
                        },
                        "Message": {
                            "type": "string"
                        },
                        "PieceCID": {
                            "title": "Content Identifier",
                            "type": "string"
                        },
                        "PricePerEpoch": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "ProposalCid": {
                            "title": "Content Identifier",
                            "type": "string"
                        },
                        "Provider": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "Size": {
                            "title": "number",
                            "type": "number"
                        },
                        "State": {
                            "title": "number",
                            "type": "number"
                        },
                        "TransferChannelID": {
                            "additionalProperties": false,
                            "properties": {
                                "ID": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "Initiator": {
                                    "type": "string"
                                },
                                "Responder": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "Verified": {
                            "type": "boolean"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L1350"
            }
        },
        {
            "name": "Filecoin.ClientGetDealStatus",
            "description": "```go\nfunc (s *FullNodeStruct) ClientGetDealStatus(p0 context.Context, p1 uint64) (string, error) {\n\tif s.Internal.ClientGetDealStatus == nil {\n\t\treturn \"\", ErrNotSupported\n\t}\n\treturn s.Internal.ClientGetDealStatus(p0, p1)\n}\n```",
            "summary": "ClientGetDealStatus returns status given a code\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "uint64",
                    "summary": "",
                    "schema": {
                        "title": "number",
                        "description": "Number is a number",
                        "examples": [
                            42
                        ],
                        "type": [
                            "number"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "string",
                "description": "string",
                "summary": "",
                "schema": {
                    "examples": [
                        "string value"
                    ],
                    "type": [
                        "string"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L1361"
            }
        },
        {
            "name": "Filecoin.ClientHasLocal",
            "description": "```go\nfunc (s *FullNodeStruct) ClientHasLocal(p0 context.Context, p1 cid.Cid) (bool, error) {\n\tif s.Internal.ClientHasLocal == nil {\n\t\treturn false, ErrNotSupported\n\t}\n\treturn s.Internal.ClientHasLocal(p0, p1)\n}\n```",
            "summary": "ClientHasLocal indicates whether a certain CID is locally stored.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "cid.Cid",
                    "summary": "",
                    "schema": {
                        "title": "Content Identifier",
                        "description": "Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.",
                        "examples": [
                            {
                                "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                            }
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "bool",
                "description": "bool",
                "summary": "",
                "schema": {
                    "examples": [
                        true
                    ],
                    "type": [
                        "boolean"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L1394"
            }
        },
        {
            "name": "Filecoin.ClientImport",
            "description": "```go\nfunc (s *FullNodeStruct) ClientImport(p0 context.Context, p1 FileRef) (*ImportRes, error) {\n\tif s.Internal.ClientImport == nil {\n\t\treturn nil, ErrNotSupported\n\t}\n\treturn s.Internal.ClientImport(p0, p1)\n}\n```",
            "summary": "ClientImport imports file under the specified path into filestore.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "FileRef",
                    "summary": "",
                    "schema": {
                        "examples": [
                            {
                                "Path": "string value",
                                "IsCAR": true
                            }
                        ],
                        "additionalProperties": false,
                        "properties": {
                            "IsCAR": {
                                "type": "boolean"
                            },
                            "Path": {
                                "type": "string"
                            }
                        },
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*ImportRes",
                "description": "*ImportRes",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "Root": {
                                "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                            },
                            "ImportID": 50
                        }
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "ImportID": {
                            "title": "number",
                            "type": "number"
                        },
                        "Root": {
                            "title": "Content Identifier",
                            "type": "string"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L1405"
            }
        },
        {
            "name": "Filecoin.ClientListDataTransfers",
            "description": "```go\nfunc (s *FullNodeStruct) ClientListDataTransfers(p0 context.Context) ([]DataTransferChannel, error) {\n\tif s.Internal.ClientListDataTransfers == nil {\n\t\treturn *new([]DataTransferChannel), ErrNotSupported\n\t}\n\treturn s.Internal.ClientListDataTransfers(p0)\n}\n```",
            "summary": "ClientListTransfers returns the status of all ongoing transfers of data\n",
            "paramStructure": "by-position",
            "params": [],
            "result": {
                "name": "[]DataTransferChannel",
                "description": "[]DataTransferChannel",
                "summary": "",
                "schema": {
                    "examples": [
                        null
                    ],
                    "items": [
                        {
                            "additionalProperties": false,
                            "properties": {
                                "BaseCID": {
                                    "title": "Content Identifier",
                                    "type": "string"
                                },
                                "IsInitiator": {
                                    "type": "boolean"
                                },
                                "IsSender": {
                                    "type": "boolean"
                                },
                                "Message": {
                                    "type": "string"
                                },
                                "OtherPeer": {
                                    "type": "string"
                                },
                                "Stages": {
                                    "additionalProperties": false,
                                    "properties": {
                                        "Stages": {
                                            "items": {
                                                "additionalProperties": false,
                                                "properties": {
                                                    "CreatedTime": {
                                                        "additionalProperties": false,
                                                        "type": "object"
                                                    },
                                                    "Description": {
                                                        "type": "string"
                                                    },
                                                    "Logs": {
                                                        "items": {
                                                            "additionalProperties": false,
                                                            "properties": {
                                                                "Log": {
                                                                    "type": "string"
                                                                },
                                                                "UpdatedTime": {
                                                                    "additionalProperties": false,
                                                                    "type": "object"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "Name": {
                                                        "type": "string"
                                                    },
                                                    "UpdatedTime": {
                                                        "additionalProperties": false,
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                },
                                "Status": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "TransferID": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "Transferred": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "Voucher": {
                                    "type": "string"
                                }
                            },
                            "type": [
                                "object"
                            ]
                        }
                    ],
                    "type": [
                        "array"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L1416"
            }
        },
        {
            "name": "Filecoin.ClientListDeals",
            "description": "```go\nfunc (s *FullNodeStruct) ClientListDeals(p0 context.Context) ([]DealInfo, error) {\n\tif s.Internal.ClientListDeals == nil {\n\t\treturn *new([]DealInfo), ErrNotSupported\n\t}\n\treturn s.Internal.ClientListDeals(p0)\n}\n```",
            "summary": "ClientListDeals returns information about the deals made by the local client.\n",
            "paramStructure": "by-position",
            "params": [],
            "result": {
                "name": "[]DealInfo",
                "description": "[]DealInfo",
                "summary": "",
                "schema": {
                    "examples": [
                        null
                    ],
                    "items": [
                        {
                            "additionalProperties": false,
                            "properties": {
                                "CreationTime": {
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "DataRef": {
                                    "additionalProperties": false,
                                    "properties": {
                                        "PieceCid": {
                                            "title": "Content Identifier",
                                            "type": "string"
                                        },
                                        "PieceSize": {
                                            "title": "number",
                                            "type": "number"
                                        },
                                        "RawBlockSize": {
                                            "title": "number",
                                            "type": "number"
                                        },
                                        "Root": {
                                            "title": "Content Identifier",
                                            "type": "string"
                                        },
                                        "TransferType": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "DataTransfer": {
                                    "additionalProperties": false,
                                    "properties": {
                                        "BaseCID": {
                                            "title": "Content Identifier",
                                            "type": "string"
                                        },
                                        "IsInitiator": {
                                            "type": "boolean"
                                        },
                                        "IsSender": {
                                            "type": "boolean"
                                        },
                                        "Message": {
                                            "type": "string"
                                        },
                                        "OtherPeer": {
                                            "type": "string"
                                        },
                                        "Stages": {
                                            "additionalProperties": false,
                                            "properties": {
                                                "Stages": {
                                                    "items": {
                                                        "additionalProperties": false,
                                                        "properties": {
                                                            "CreatedTime": {
                                                                "additionalProperties": false,
                                                                "type": "object"
                                                            },
                                                            "Description": {
                                                                "type": "string"
                                                            },
                                                            "Logs": {
                                                                "items": {
                                                                    "additionalProperties": false,
                                                                    "properties": {
                                                                        "Log": {
                                                                            "type": "string"
                                                                        },
                                                                        "UpdatedTime": {
                                                                            "additionalProperties": false,
                                                                            "type": "object"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "Name": {
                                                                "type": "string"
                                                            },
                                                            "UpdatedTime": {
                                                                "additionalProperties": false,
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "Status": {
                                            "title": "number",
                                            "type": "number"
                                        },
                                        "TransferID": {
                                            "title": "number",
                                            "type": "number"
                                        },
                                        "Transferred": {
                                            "title": "number",
                                            "type": "number"
                                        },
                                        "Voucher": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "DealID": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "DealStages": {
                                    "additionalProperties": false,
                                    "properties": {
                                        "Stages": {
                                            "items": {
                                                "additionalProperties": false,
                                                "properties": {
                                                    "CreatedTime": {
                                                        "additionalProperties": false,
                                                        "type": "object"
                                                    },
                                                    "Description": {
                                                        "type": "string"
                                                    },
                                                    "ExpectedDuration": {
                                                        "type": "string"
                                                    },
                                                    "Logs": {
                                                        "items": {
                                                            "additionalProperties": false,
                                                            "properties": {
                                                                "Log": {
                                                                    "type": "string"
                                                                },
                                                                "UpdatedTime": {
                                                                    "additionalProperties": false,
                                                                    "type": "object"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "Name": {
                                                        "type": "string"
                                                    },
                                                    "UpdatedTime": {
                                                        "additionalProperties": false,
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                },
                                "Duration": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "Message": {
                                    "type": "string"
                                },
                                "PieceCID": {
                                    "title": "Content Identifier",
                                    "type": "string"
                                },
                                "PricePerEpoch": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "ProposalCid": {
                                    "title": "Content Identifier",
                                    "type": "string"
                                },
                                "Provider": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "Size": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "State": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "TransferChannelID": {
                                    "additionalProperties": false,
                                    "properties": {
                                        "ID": {
                                            "title": "number",
                                            "type": "number"
                                        },
                                        "Initiator": {
                                            "type": "string"
                                        },
                                        "Responder": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "Verified": {
                                    "type": "boolean"
                                }
                            },
                            "type": [
                                "object"
                            ]
                        }
                    ],
                    "type": [
                        "array"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L1427"
            }
        },
        {
            "name": "Filecoin.ClientListImports",
            "description": "```go\nfunc (s *FullNodeStruct) ClientListImports(p0 context.Context) ([]Import, error) {\n\tif s.Internal.ClientListImports == nil {\n\t\treturn *new([]Import), ErrNotSupported\n\t}\n\treturn s.Internal.ClientListImports(p0)\n}\n```",
            "summary": "ClientListImports lists imported files and their root CIDs\n",
            "paramStructure": "by-position",
            "params": [],
            "result": {
                "name": "[]Import",
                "description": "[]Import",
                "summary": "",
                "schema": {
                    "examples": [
                        null
                    ],
                    "items": [
                        {
                            "additionalProperties": false,
                            "properties": {
                                "Err": {
                                    "type": "string"
                                },
                                "FilePath": {
                                    "type": "string"
                                },
                                "Key": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "Root": {
                                    "title": "Content Identifier",
                                    "type": "string"
                                },
                                "Source": {
                                    "type": "string"
                                }
                            },
                            "type": [
                                "object"
                            ]
                        }
                    ],
                    "type": [
                        "array"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L1438"
            }
        },
        {
            "name": "Filecoin.ClientListRetrievals",
            "description": "```go\nfunc (s *FullNodeStruct) ClientListRetrievals(p0 context.Context) ([]RetrievalInfo, error) {\n\tif s.Internal.ClientListRetrievals == nil {\n\t\treturn *new([]RetrievalInfo), ErrNotSupported\n\t}\n\treturn s.Internal.ClientListRetrievals(p0)\n}\n```",
            "summary": "ClientListRetrievals returns information about retrievals made by the local client\n",
            "paramStructure": "by-position",
            "params": [],
            "result": {
                "name": "[]RetrievalInfo",
                "description": "[]RetrievalInfo",
                "summary": "",
                "schema": {
                    "examples": [
                        null
                    ],
                    "items": [
                        {
                            "additionalProperties": false,
                            "properties": {
                                "BytesPaidFor": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "BytesReceived": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "DataTransfer": {
                                    "additionalProperties": false,
                                    "properties": {
                                        "BaseCID": {
                                            "title": "Content Identifier",
                                            "type": "string"
                                        },
                                        "IsInitiator": {
                                            "type": "boolean"
                                        },
                                        "IsSender": {
                                            "type": "boolean"
                                        },
                                        "Message": {
                                            "type": "string"
                                        },
                                        "OtherPeer": {
                                            "type": "string"
                                        },
                                        "Stages": {
                                            "additionalProperties": false,
                                            "properties": {
                                                "Stages": {
                                                    "items": {
                                                        "additionalProperties": false,
                                                        "properties": {
                                                            "CreatedTime": {
                                                                "additionalProperties": false,
                                                                "type": "object"
                                                            },
                                                            "Description": {
                                                                "type": "string"
                                                            },
                                                            "Logs": {
                                                                "items": {
                                                                    "additionalProperties": false,
                                                                    "properties": {
                                                                        "Log": {
                                                                            "type": "string"
                                                                        },
                                                                        "UpdatedTime": {
                                                                            "additionalProperties": false,
                                                                            "type": "object"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "Name": {
                                                                "type": "string"
                                                            },
                                                            "UpdatedTime": {
                                                                "additionalProperties": false,
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "Status": {
                                            "title": "number",
                                            "type": "number"
                                        },
                                        "TransferID": {
                                            "title": "number",
                                            "type": "number"
                                        },
                                        "Transferred": {
                                            "title": "number",
                                            "type": "number"
                                        },
                                        "Voucher": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "ID": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "Message": {
                                    "type": "string"
                                },
                                "PayloadCID": {
                                    "title": "Content Identifier",
                                    "type": "string"
                                },
                                "PieceCID": {
                                    "title": "Content Identifier",
                                    "type": "string"
                                },
                                "PricePerByte": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "Provider": {
                                    "type": "string"
                                },
                                "Status": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "TotalPaid": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "TransferChannelID": {
                                    "additionalProperties": false,
                                    "properties": {
                                        "ID": {
                                            "title": "number",
                                            "type": "number"
                                        },
                                        "Initiator": {
                                            "type": "string"
                                        },
                                        "Responder": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "UnsealPrice": {
                                    "additionalProperties": false,
                                    "type": "object"
                                }
                            },
                            "type": [
                                "object"
                            ]
                        }
                    ],
                    "type": [
                        "array"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L1449"
            }
        },
        {
            "name": "Filecoin.ClientMinerQueryOffer",
            "description": "```go\nfunc (s *FullNodeStruct) ClientMinerQueryOffer(p0 context.Context, p1 address.Address, p2 cid.Cid, p3 *cid.Cid) (QueryOffer, error) {\n\tif s.Internal.ClientMinerQueryOffer == nil {\n\t\treturn *new(QueryOffer), ErrNotSupported\n\t}\n\treturn s.Internal.ClientMinerQueryOffer(p0, p1, p2, p3)\n}\n```",
            "summary": "ClientMinerQueryOffer returns a QueryOffer for the specific miner and file.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p2",
                    "description": "cid.Cid",
                    "summary": "",
                    "schema": {
                        "title": "Content Identifier",
                        "description": "Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.",
                        "examples": [
                            {
                                "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                            }
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p3",
                    "description": "*cid.Cid",
                    "summary": "",
                    "schema": {
                        "title": "Content Identifier",
                        "description": "Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.",
                        "examples": [
                            null
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "QueryOffer",
                "description": "QueryOffer",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "Err": "string value",
                            "Root": {
                                "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                            },
                            "Piece": null,
                            "Size": 42,
                            "MinPrice": "0",
                            "UnsealPrice": "0",
                            "PaymentInterval": 42,
                            "PaymentIntervalIncrease": 42,
                            "Miner": "f01234",
                            "MinerPeer": {
                                "Address": "f01234",
                                "ID": "12D3KooWGzxzKZYveHXtpG6AsrUJBcWxHBFS2HsEoGTxrMLvKXtf",
                                "PieceCID": null
                            }
                        }
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "Err": {
                            "type": "string"
                        },
                        "MinPrice": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "Miner": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "MinerPeer": {
                            "additionalProperties": false,
                            "properties": {
                                "Address": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "ID": {
                                    "type": "string"
                                },
                                "PieceCID": {
                                    "title": "Content Identifier",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "PaymentInterval": {
                            "title": "number",
                            "type": "number"
                        },
                        "PaymentIntervalIncrease": {
                            "title": "number",
                            "type": "number"
                        },
                        "Piece": {
                            "title": "Content Identifier",
                            "type": "string"
                        },
                        "Root": {
                            "title": "Content Identifier",
                            "type": "string"
                        },
                        "Size": {
                            "title": "number",
                            "type": "number"
                        },
                        "UnsealPrice": {
                            "additionalProperties": false,
                            "type": "object"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L1460"
            }
        },
        {
            "name": "Filecoin.ClientQueryAsk",
            "description": "```go\nfunc (s *FullNodeStruct) ClientQueryAsk(p0 context.Context, p1 peer.ID, p2 address.Address) (*storagemarket.StorageAsk, error) {\n\tif s.Internal.ClientQueryAsk == nil {\n\t\treturn nil, ErrNotSupported\n\t}\n\treturn s.Internal.ClientQueryAsk(p0, p1, p2)\n}\n```",
            "summary": "ClientQueryAsk returns a signed StorageAsk from the specified miner.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "peer.ID",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "12D3KooWGzxzKZYveHXtpG6AsrUJBcWxHBFS2HsEoGTxrMLvKXtf"
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p2",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*storagemarket.StorageAsk",
                "description": "*storagemarket.StorageAsk",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "Price": "0",
                            "VerifiedPrice": "0",
                            "MinPieceSize": 1032,
                            "MaxPieceSize": 1032,
                            "Miner": "f01234",
                            "Timestamp": 10101,
                            "Expiry": 10101,
                            "SeqNo": 42
                        }
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "Expiry": {
                            "title": "number",
                            "type": "number"
                        },
                        "MaxPieceSize": {
                            "title": "number",
                            "type": "number"
                        },
                        "MinPieceSize": {
                            "title": "number",
                            "type": "number"
                        },
                        "Miner": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "Price": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "SeqNo": {
                            "title": "number",
                            "type": "number"
                        },
                        "Timestamp": {
                            "title": "number",
                            "type": "number"
                        },
                        "VerifiedPrice": {
                            "additionalProperties": false,
                            "type": "object"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L1471"
            }
        },
        {
            "name": "Filecoin.ClientRemoveImport",
            "description": "```go\nfunc (s *FullNodeStruct) ClientRemoveImport(p0 context.Context, p1 multistore.StoreID) error {\n\tif s.Internal.ClientRemoveImport == nil {\n\t\treturn ErrNotSupported\n\t}\n\treturn s.Internal.ClientRemoveImport(p0, p1)\n}\n```",
            "summary": "ClientRemoveImport removes file import\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "multistore.StoreID",
                    "summary": "",
                    "schema": {
                        "title": "number",
                        "description": "Number is a number",
                        "examples": [
                            50
                        ],
                        "type": [
                            "number"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "Null",
                "description": "Null",
                "schema": {
                    "type": [
                        "null"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L1482"
            }
        },
        {
            "name": "Filecoin.ClientRestartDataTransfer",
            "description": "```go\nfunc (s *FullNodeStruct) ClientRestartDataTransfer(p0 context.Context, p1 datatransfer.TransferID, p2 peer.ID, p3 bool) error {\n\tif s.Internal.ClientRestartDataTransfer == nil {\n\t\treturn ErrNotSupported\n\t}\n\treturn s.Internal.ClientRestartDataTransfer(p0, p1, p2, p3)\n}\n```",
            "summary": "ClientRestartDataTransfer attempts to restart a data transfer with the given transfer ID and other peer\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "datatransfer.TransferID",
                    "summary": "",
                    "schema": {
                        "title": "number",
                        "description": "Number is a number",
                        "examples": [
                            3
                        ],
                        "type": [
                            "number"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p2",
                    "description": "peer.ID",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "12D3KooWGzxzKZYveHXtpG6AsrUJBcWxHBFS2HsEoGTxrMLvKXtf"
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p3",
                    "description": "bool",
                    "summary": "",
                    "schema": {
                        "examples": [
                            true
                        ],
                        "type": [
                            "boolean"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "Null",
                "description": "Null",
                "schema": {
                    "type": [
                        "null"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L1493"
            }
        },
        {
            "name": "Filecoin.ClientRetrieve",
            "description": "```go\nfunc (s *FullNodeStruct) ClientRetrieve(p0 context.Context, p1 RetrievalOrder, p2 *FileRef) error {\n\tif s.Internal.ClientRetrieve == nil {\n\t\treturn ErrNotSupported\n\t}\n\treturn s.Internal.ClientRetrieve(p0, p1, p2)\n}\n```",
            "summary": "ClientRetrieve initiates the retrieval of a file, as specified in the order.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "RetrievalOrder",
                    "summary": "",
                    "schema": {
                        "examples": [
                            {
                                "Root": {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                "Piece": null,
                                "Size": 42,
                                "LocalStore": 12,
                                "Total": "0",
                                "UnsealPrice": "0",
                                "PaymentInterval": 42,
                                "PaymentIntervalIncrease": 42,
                                "Client": "f01234",
                                "Miner": "f01234",
                                "MinerPeer": {
                                    "Address": "f01234",
                                    "ID": "12D3KooWGzxzKZYveHXtpG6AsrUJBcWxHBFS2HsEoGTxrMLvKXtf",
                                    "PieceCID": null
                                }
                            }
                        ],
                        "additionalProperties": false,
                        "properties": {
                            "Client": {
                                "additionalProperties": false,
                                "type": "object"
                            },
                            "LocalStore": {
                                "title": "number",
                                "type": "number"
                            },
                            "Miner": {
                                "additionalProperties": false,
                                "type": "object"
                            },
                            "MinerPeer": {
                                "additionalProperties": false,
                                "properties": {
                                    "Address": {
                                        "additionalProperties": false,
                                        "type": "object"
                                    },
                                    "ID": {
                                        "type": "string"
                                    },
                                    "PieceCID": {
                                        "title": "Content Identifier",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "PaymentInterval": {
                                "title": "number",
                                "type": "number"
                            },
                            "PaymentIntervalIncrease": {
                                "title": "number",
                                "type": "number"
                            },
                            "Piece": {
                                "title": "Content Identifier",
                                "type": "string"
                            },
                            "Root": {
                                "title": "Content Identifier",
                                "type": "string"
                            },
                            "Size": {
                                "title": "number",
                                "type": "number"
                            },
                            "Total": {
                                "additionalProperties": false,
                                "type": "object"
                            },
                            "UnsealPrice": {
                                "additionalProperties": false,
                                "type": "object"
                            }
                        },
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p2",
                    "description": "*FileRef",
                    "summary": "",
                    "schema": {
                        "examples": [
                            {
                                "Path": "string value",
                                "IsCAR": true
                            }
                        ],
                        "additionalProperties": false,
                        "properties": {
                            "IsCAR": {
                                "type": "boolean"
                            },
                            "Path": {
                                "type": "string"
                            }
                        },
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "Null",
                "description": "Null",
                "schema": {
                    "type": [
                        "null"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L1504"
            }
        },
        {
            "name": "Filecoin.ClientRetrieveTryRestartInsufficientFunds",
            "description": "```go\nfunc (s *FullNodeStruct) ClientRetrieveTryRestartInsufficientFunds(p0 context.Context, p1 address.Address) error {\n\tif s.Internal.ClientRetrieveTryRestartInsufficientFunds == nil {\n\t\treturn ErrNotSupported\n\t}\n\treturn s.Internal.ClientRetrieveTryRestartInsufficientFunds(p0, p1)\n}\n```",
            "summary": "ClientRetrieveTryRestartInsufficientFunds attempts to restart stalled retrievals on a given payment channel\nwhich are stuck due to insufficient funds\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "Null",
                "description": "Null",
                "schema": {
                    "type": [
                        "null"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L1515"
            }
        },
        {
            "name": "Filecoin.ClientStartDeal",
            "description": "```go\nfunc (s *FullNodeStruct) ClientStartDeal(p0 context.Context, p1 *StartDealParams) (*cid.Cid, error) {\n\tif s.Internal.ClientStartDeal == nil {\n\t\treturn nil, ErrNotSupported\n\t}\n\treturn s.Internal.ClientStartDeal(p0, p1)\n}\n```",
            "summary": "ClientStartDeal proposes a deal with a miner.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "*StartDealParams",
                    "summary": "",
                    "schema": {
                        "examples": [
                            {
                                "Data": {
                                    "TransferType": "string value",
                                    "Root": {
                                        "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                    },
                                    "PieceCid": null,
                                    "PieceSize": 1024,
                                    "RawBlockSize": 42
                                },
                                "Wallet": "f01234",
                                "Miner": "f01234",
                                "EpochPrice": "0",
                                "MinBlocksDuration": 42,
                                "ProviderCollateral": "0",
                                "DealStartEpoch": 10101,
                                "FastRetrieval": true,
                                "VerifiedDeal": true
                            }
                        ],
                        "additionalProperties": false,
                        "properties": {
                            "Data": {
                                "additionalProperties": false,
                                "properties": {
                                    "PieceCid": {
                                        "title": "Content Identifier",
                                        "type": "string"
                                    },
                                    "PieceSize": {
                                        "title": "number",
                                        "type": "number"
                                    },
                                    "RawBlockSize": {
                                        "title": "number",
                                        "type": "number"
                                    },
                                    "Root": {
                                        "title": "Content Identifier",
                                        "type": "string"
                                    },
                                    "TransferType": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "DealStartEpoch": {
                                "title": "number",
                                "type": "number"
                            },
                            "EpochPrice": {
                                "additionalProperties": false,
                                "type": "object"
                            },
                            "FastRetrieval": {
                                "type": "boolean"
                            },
                            "MinBlocksDuration": {
                                "title": "number",
                                "type": "number"
                            },
                            "Miner": {
                                "additionalProperties": false,
                                "type": "object"
                            },
                            "ProviderCollateral": {
                                "additionalProperties": false,
                                "type": "object"
                            },
                            "VerifiedDeal": {
                                "type": "boolean"
                            },
                            "Wallet": {
                                "additionalProperties": false,
                                "type": "object"
                            }
                        },
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*cid.Cid",
                "description": "*cid.Cid",
                "summary": "",
                "schema": {
                    "title": "Content Identifier",
                    "description": "Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.",
                    "examples": [
                        null
                    ],
                    "type": [
                        "string"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L1537"
            }
        },
        {
            "name": "Filecoin.ClientStatelessDeal",
            "description": "```go\nfunc (s *FullNodeStruct) ClientStatelessDeal(p0 context.Context, p1 *StartDealParams) (*cid.Cid, error) {\n\tif s.Internal.ClientStatelessDeal == nil {\n\t\treturn nil, ErrNotSupported\n\t}\n\treturn s.Internal.ClientStatelessDeal(p0, p1)\n}\n```",
            "summary": "ClientStatelessDeal fire-and-forget-proposes an offline deal to a miner without subsequent tracking.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "*StartDealParams",
                    "summary": "",
                    "schema": {
                        "examples": [
                            {
                                "Data": {
                                    "TransferType": "string value",
                                    "Root": {
                                        "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                    },
                                    "PieceCid": null,
                                    "PieceSize": 1024,
                                    "RawBlockSize": 42
                                },
                                "Wallet": "f01234",
                                "Miner": "f01234",
                                "EpochPrice": "0",
                                "MinBlocksDuration": 42,
                                "ProviderCollateral": "0",
                                "DealStartEpoch": 10101,
                                "FastRetrieval": true,
                                "VerifiedDeal": true
                            }
                        ],
                        "additionalProperties": false,
                        "properties": {
                            "Data": {
                                "additionalProperties": false,
                                "properties": {
                                    "PieceCid": {
                                        "title": "Content Identifier",
                                        "type": "string"
                                    },
                                    "PieceSize": {
                                        "title": "number",
                                        "type": "number"
                                    },
                                    "RawBlockSize": {
                                        "title": "number",
                                        "type": "number"
                                    },
                                    "Root": {
                                        "title": "Content Identifier",
                                        "type": "string"
                                    },
                                    "TransferType": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "DealStartEpoch": {
                                "title": "number",
                                "type": "number"
                            },
                            "EpochPrice": {
                                "additionalProperties": false,
                                "type": "object"
                            },
                            "FastRetrieval": {
                                "type": "boolean"
                            },
                            "MinBlocksDuration": {
                                "title": "number",
                                "type": "number"
                            },
                            "Miner": {
                                "additionalProperties": false,
                                "type": "object"
                            },
                            "ProviderCollateral": {
                                "additionalProperties": false,
                                "type": "object"
                            },
                            "VerifiedDeal": {
                                "type": "boolean"
                            },
                            "Wallet": {
                                "additionalProperties": false,
                                "type": "object"
                            }
                        },
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*cid.Cid",
                "description": "*cid.Cid",
                "summary": "",
                "schema": {
                    "title": "Content Identifier",
                    "description": "Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.",
                    "examples": [
                        null
                    ],
                    "type": [
                        "string"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L1548"
            }
        },
        {
            "name": "Filecoin.CreateBackup",
            "description": "```go\nfunc (s *FullNodeStruct) CreateBackup(p0 context.Context, p1 string) error {\n\tif s.Internal.CreateBackup == nil {\n\t\treturn ErrNotSupported\n\t}\n\treturn s.Internal.CreateBackup(p0, p1)\n}\n```",
            "summary": "CreateBackup creates node backup onder the specified file name. The\nmethod requires that the lotus daemon is running with the\nLOTUS_BACKUP_BASE_PATH environment variable set to some path, and that\nthe path specified when calling CreateBackup is within the base path\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "string",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "string value"
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "Null",
                "description": "Null",
                "schema": {
                    "type": [
                        "null"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L1559"
            }
        },
        {
            "name": "Filecoin.GasEstimateFeeCap",
            "description": "```go\nfunc (s *FullNodeStruct) GasEstimateFeeCap(p0 context.Context, p1 *types.Message, p2 int64, p3 types.TipSetKey) (types.BigInt, error) {\n\tif s.Internal.GasEstimateFeeCap == nil {\n\t\treturn *new(types.BigInt), ErrNotSupported\n\t}\n\treturn s.Internal.GasEstimateFeeCap(p0, p1, p2, p3)\n}\n```",
            "summary": "GasEstimateFeeCap estimates gas fee cap\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "*types.Message",
                    "summary": "",
                    "schema": {
                        "examples": [
                            {
                                "Version": 42,
                                "To": "f01234",
                                "From": "f01234",
                                "Nonce": 42,
                                "Value": "0",
                                "GasLimit": 9,
                                "GasFeeCap": "0",
                                "GasPremium": "0",
                                "Method": 1,
                                "Params": "Ynl0ZSBhcnJheQ==",
                                "CID": {
                                    "/": "bafy2bzacebbpdegvr3i4cosewthysg5xkxpqfn2wfcz6mv2hmoktwbdxkax4s"
                                }
                            }
                        ],
                        "additionalProperties": false,
                        "properties": {
                            "From": {
                                "additionalProperties": false,
                                "type": "object"
                            },
                            "GasFeeCap": {
                                "additionalProperties": false,
                                "type": "object"
                            },
                            "GasLimit": {
                                "title": "number",
                                "type": "number"
                            },
                            "GasPremium": {
                                "additionalProperties": false,
                                "type": "object"
                            },
                            "Method": {
                                "title": "number",
                                "type": "number"
                            },
                            "Nonce": {
                                "title": "number",
                                "type": "number"
                            },
                            "Params": {
                                "media": {
                                    "binaryEncoding": "base64"
                                },
                                "type": "string"
                            },
                            "To": {
                                "additionalProperties": false,
                                "type": "object"
                            },
                            "Value": {
                                "additionalProperties": false,
                                "type": "object"
                            },
                            "Version": {
                                "title": "number",
                                "type": "number"
                            }
                        },
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p2",
                    "description": "int64",
                    "summary": "",
                    "schema": {
                        "title": "number",
                        "description": "Number is a number",
                        "examples": [
                            9
                        ],
                        "type": [
                            "number"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p3",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "types.BigInt",
                "description": "types.BigInt",
                "summary": "",
                "schema": {
                    "examples": [
                        "0"
                    ],
                    "additionalProperties": false,
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L1570"
            }
        },
        {
            "name": "Filecoin.GasEstimateGasLimit",
            "description": "```go\nfunc (s *FullNodeStruct) GasEstimateGasLimit(p0 context.Context, p1 *types.Message, p2 types.TipSetKey) (int64, error) {\n\tif s.Internal.GasEstimateGasLimit == nil {\n\t\treturn 0, ErrNotSupported\n\t}\n\treturn s.Internal.GasEstimateGasLimit(p0, p1, p2)\n}\n```",
            "summary": "GasEstimateGasLimit estimates gas used by the message and returns it.\nIt fails if message fails to execute.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "*types.Message",
                    "summary": "",
                    "schema": {
                        "examples": [
                            {
                                "Version": 42,
                                "To": "f01234",
                                "From": "f01234",
                                "Nonce": 42,
                                "Value": "0",
                                "GasLimit": 9,
                                "GasFeeCap": "0",
                                "GasPremium": "0",
                                "Method": 1,
                                "Params": "Ynl0ZSBhcnJheQ==",
                                "CID": {
                                    "/": "bafy2bzacebbpdegvr3i4cosewthysg5xkxpqfn2wfcz6mv2hmoktwbdxkax4s"
                                }
                            }
                        ],
                        "additionalProperties": false,
                        "properties": {
                            "From": {
                                "additionalProperties": false,
                                "type": "object"
                            },
                            "GasFeeCap": {
                                "additionalProperties": false,
                                "type": "object"
                            },
                            "GasLimit": {
                                "title": "number",
                                "type": "number"
                            },
                            "GasPremium": {
                                "additionalProperties": false,
                                "type": "object"
                            },
                            "Method": {
                                "title": "number",
                                "type": "number"
                            },
                            "Nonce": {
                                "title": "number",
                                "type": "number"
                            },
                            "Params": {
                                "media": {
                                    "binaryEncoding": "base64"
                                },
                                "type": "string"
                            },
                            "To": {
                                "additionalProperties": false,
                                "type": "object"
                            },
                            "Value": {
                                "additionalProperties": false,
                                "type": "object"
                            },
                            "Version": {
                                "title": "number",
                                "type": "number"
                            }
                        },
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p2",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "int64",
                "description": "int64",
                "summary": "",
                "schema": {
                    "title": "number",
                    "description": "Number is a number",
                    "examples": [
                        9
                    ],
                    "type": [
                        "number"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L1581"
            }
        },
        {
            "name": "Filecoin.GasEstimateGasPremium",
            "description": "```go\nfunc (s *FullNodeStruct) GasEstimateGasPremium(p0 context.Context, p1 uint64, p2 address.Address, p3 int64, p4 types.TipSetKey) (types.BigInt, error) {\n\tif s.Internal.GasEstimateGasPremium == nil {\n\t\treturn *new(types.BigInt), ErrNotSupported\n\t}\n\treturn s.Internal.GasEstimateGasPremium(p0, p1, p2, p3, p4)\n}\n```",
            "summary": "GasEstimateGasPremium estimates what gas price should be used for a\nmessage to have high likelihood of inclusion in `nblocksincl` epochs.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "uint64",
                    "summary": "",
                    "schema": {
                        "title": "number",
                        "description": "Number is a number",
                        "examples": [
                            42
                        ],
                        "type": [
                            "number"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p2",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p3",
                    "description": "int64",
                    "summary": "",
                    "schema": {
                        "title": "number",
                        "description": "Number is a number",
                        "examples": [
                            9
                        ],
                        "type": [
                            "number"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p4",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "types.BigInt",
                "description": "types.BigInt",
                "summary": "",
                "schema": {
                    "examples": [
                        "0"
                    ],
                    "additionalProperties": false,
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L1592"
            }
        },
        {
            "name": "Filecoin.GasEstimateMessageGas",
            "description": "```go\nfunc (s *FullNodeStruct) GasEstimateMessageGas(p0 context.Context, p1 *types.Message, p2 *MessageSendSpec, p3 types.TipSetKey) (*types.Message, error) {\n\tif s.Internal.GasEstimateMessageGas == nil {\n\t\treturn nil, ErrNotSupported\n\t}\n\treturn s.Internal.GasEstimateMessageGas(p0, p1, p2, p3)\n}\n```",
            "summary": "GasEstimateMessageGas estimates gas values for unset message gas fields\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "*types.Message",
                    "summary": "",
                    "schema": {
                        "examples": [
                            {
                                "Version": 42,
                                "To": "f01234",
                                "From": "f01234",
                                "Nonce": 42,
                                "Value": "0",
                                "GasLimit": 9,
                                "GasFeeCap": "0",
                                "GasPremium": "0",
                                "Method": 1,
                                "Params": "Ynl0ZSBhcnJheQ==",
                                "CID": {
                                    "/": "bafy2bzacebbpdegvr3i4cosewthysg5xkxpqfn2wfcz6mv2hmoktwbdxkax4s"
                                }
                            }
                        ],
                        "additionalProperties": false,
                        "properties": {
                            "From": {
                                "additionalProperties": false,
                                "type": "object"
                            },
                            "GasFeeCap": {
                                "additionalProperties": false,
                                "type": "object"
                            },
                            "GasLimit": {
                                "title": "number",
                                "type": "number"
                            },
                            "GasPremium": {
                                "additionalProperties": false,
                                "type": "object"
                            },
                            "Method": {
                                "title": "number",
                                "type": "number"
                            },
                            "Nonce": {
                                "title": "number",
                                "type": "number"
                            },
                            "Params": {
                                "media": {
                                    "binaryEncoding": "base64"
                                },
                                "type": "string"
                            },
                            "To": {
                                "additionalProperties": false,
                                "type": "object"
                            },
                            "Value": {
                                "additionalProperties": false,
                                "type": "object"
                            },
                            "Version": {
                                "title": "number",
                                "type": "number"
                            }
                        },
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p2",
                    "description": "*MessageSendSpec",
                    "summary": "",
                    "schema": {
                        "examples": [
                            {
                                "MaxFee": "0"
                            }
                        ],
                        "additionalProperties": false,
                        "properties": {
                            "MaxFee": {
                                "additionalProperties": false,
                                "type": "object"
                            }
                        },
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p3",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*types.Message",
                "description": "*types.Message",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "Version": 42,
                            "To": "f01234",
                            "From": "f01234",
                            "Nonce": 42,
                            "Value": "0",
                            "GasLimit": 9,
                            "GasFeeCap": "0",
                            "GasPremium": "0",
                            "Method": 1,
                            "Params": "Ynl0ZSBhcnJheQ==",
                            "CID": {
                                "/": "bafy2bzacebbpdegvr3i4cosewthysg5xkxpqfn2wfcz6mv2hmoktwbdxkax4s"
                            }
                        }
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "From": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "GasFeeCap": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "GasLimit": {
                            "title": "number",
                            "type": "number"
                        },
                        "GasPremium": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "Method": {
                            "title": "number",
                            "type": "number"
                        },
                        "Nonce": {
                            "title": "number",
                            "type": "number"
                        },
                        "Params": {
                            "media": {
                                "binaryEncoding": "base64"
                            },
                            "type": "string"
                        },
                        "To": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "Value": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "Version": {
                            "title": "number",
                            "type": "number"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L1603"
            }
        },
        {
            "name": "Filecoin.MarketAddBalance",
            "description": "```go\nfunc (s *FullNodeStruct) MarketAddBalance(p0 context.Context, p1 address.Address, p2 address.Address, p3 types.BigInt) (cid.Cid, error) {\n\tif s.Internal.MarketAddBalance == nil {\n\t\treturn *new(cid.Cid), ErrNotSupported\n\t}\n\treturn s.Internal.MarketAddBalance(p0, p1, p2, p3)\n}\n```",
            "summary": "MarketAddBalance adds funds to the market actor\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p2",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p3",
                    "description": "types.BigInt",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "0"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "cid.Cid",
                "description": "cid.Cid",
                "summary": "",
                "schema": {
                    "title": "Content Identifier",
                    "description": "Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.",
                    "examples": [
                        {
                            "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                        }
                    ],
                    "type": [
                        "string"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L1614"
            }
        },
        {
            "name": "Filecoin.MarketGetReserved",
            "description": "```go\nfunc (s *FullNodeStruct) MarketGetReserved(p0 context.Context, p1 address.Address) (types.BigInt, error) {\n\tif s.Internal.MarketGetReserved == nil {\n\t\treturn *new(types.BigInt), ErrNotSupported\n\t}\n\treturn s.Internal.MarketGetReserved(p0, p1)\n}\n```",
            "summary": "MarketGetReserved gets the amount of funds that are currently reserved for the address\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "types.BigInt",
                "description": "types.BigInt",
                "summary": "",
                "schema": {
                    "examples": [
                        "0"
                    ],
                    "additionalProperties": false,
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L1625"
            }
        },
        {
            "name": "Filecoin.MarketReleaseFunds",
            "description": "```go\nfunc (s *FullNodeStruct) MarketReleaseFunds(p0 context.Context, p1 address.Address, p2 types.BigInt) error {\n\tif s.Internal.MarketReleaseFunds == nil {\n\t\treturn ErrNotSupported\n\t}\n\treturn s.Internal.MarketReleaseFunds(p0, p1, p2)\n}\n```",
            "summary": "MarketReleaseFunds releases funds reserved by MarketReserveFunds\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p2",
                    "description": "types.BigInt",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "0"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "Null",
                "description": "Null",
                "schema": {
                    "type": [
                        "null"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L1636"
            }
        },
        {
            "name": "Filecoin.MarketReserveFunds",
            "description": "```go\nfunc (s *FullNodeStruct) MarketReserveFunds(p0 context.Context, p1 address.Address, p2 address.Address, p3 types.BigInt) (cid.Cid, error) {\n\tif s.Internal.MarketReserveFunds == nil {\n\t\treturn *new(cid.Cid), ErrNotSupported\n\t}\n\treturn s.Internal.MarketReserveFunds(p0, p1, p2, p3)\n}\n```",
            "summary": "MarketReserveFunds reserves funds for a deal\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p2",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p3",
                    "description": "types.BigInt",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "0"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "cid.Cid",
                "description": "cid.Cid",
                "summary": "",
                "schema": {
                    "title": "Content Identifier",
                    "description": "Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.",
                    "examples": [
                        {
                            "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                        }
                    ],
                    "type": [
                        "string"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L1647"
            }
        },
        {
            "name": "Filecoin.MarketWithdraw",
            "description": "```go\nfunc (s *FullNodeStruct) MarketWithdraw(p0 context.Context, p1 address.Address, p2 address.Address, p3 types.BigInt) (cid.Cid, error) {\n\tif s.Internal.MarketWithdraw == nil {\n\t\treturn *new(cid.Cid), ErrNotSupported\n\t}\n\treturn s.Internal.MarketWithdraw(p0, p1, p2, p3)\n}\n```",
            "summary": "MarketWithdraw withdraws unlocked funds from the market actor\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p2",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p3",
                    "description": "types.BigInt",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "0"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "cid.Cid",
                "description": "cid.Cid",
                "summary": "",
                "schema": {
                    "title": "Content Identifier",
                    "description": "Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.",
                    "examples": [
                        {
                            "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                        }
                    ],
                    "type": [
                        "string"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L1658"
            }
        },
        {
            "name": "Filecoin.MinerCreateBlock",
            "description": "```go\nfunc (s *FullNodeStruct) MinerCreateBlock(p0 context.Context, p1 *BlockTemplate) (*types.BlockMsg, error) {\n\tif s.Internal.MinerCreateBlock == nil {\n\t\treturn nil, ErrNotSupported\n\t}\n\treturn s.Internal.MinerCreateBlock(p0, p1)\n}\n```",
            "summary": "",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "*BlockTemplate",
                    "summary": "",
                    "schema": {
                        "examples": [
                            {
                                "Miner": "f01234",
                                "Parents": [
                                    {
                                        "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                    },
                                    {
                                        "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                    }
                                ],
                                "Ticket": {
                                    "VRFProof": "Ynl0ZSBhcnJheQ=="
                                },
                                "Eproof": {
                                    "WinCount": 9,
                                    "VRFProof": "Ynl0ZSBhcnJheQ=="
                                },
                                "BeaconValues": null,
                                "Messages": null,
                                "Epoch": 10101,
                                "Timestamp": 42,
                                "WinningPoStProof": null
                            }
                        ],
                        "additionalProperties": false,
                        "properties": {
                            "BeaconValues": {
                                "items": {
                                    "additionalProperties": false,
                                    "properties": {
                                        "Data": {
                                            "media": {
                                                "binaryEncoding": "base64"
                                            },
                                            "type": "string"
                                        },
                                        "Round": {
                                            "title": "number",
                                            "type": "number"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            "Epoch": {
                                "title": "number",
                                "type": "number"
                            },
                            "Eproof": {
                                "additionalProperties": false,
                                "properties": {
                                    "VRFProof": {
                                        "media": {
                                            "binaryEncoding": "base64"
                                        },
                                        "type": "string"
                                    },
                                    "WinCount": {
                                        "title": "number",
                                        "type": "number"
                                    }
                                },
                                "type": "object"
                            },
                            "Messages": {
                                "items": {
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "additionalProperties": false,
                                            "properties": {
                                                "From": {
                                                    "additionalProperties": false,
                                                    "type": "object"
                                                },
                                                "GasFeeCap": {
                                                    "additionalProperties": false,
                                                    "type": "object"
                                                },
                                                "GasLimit": {
                                                    "title": "number",
                                                    "type": "number"
                                                },
                                                "GasPremium": {
                                                    "additionalProperties": false,
                                                    "type": "object"
                                                },
                                                "Method": {
                                                    "title": "number",
                                                    "type": "number"
                                                },
                                                "Nonce": {
                                                    "title": "number",
                                                    "type": "number"
                                                },
                                                "Params": {
                                                    "media": {
                                                        "binaryEncoding": "base64"
                                                    },
                                                    "type": "string"
                                                },
                                                "To": {
                                                    "additionalProperties": false,
                                                    "type": "object"
                                                },
                                                "Value": {
                                                    "additionalProperties": false,
                                                    "type": "object"
                                                },
                                                "Version": {
                                                    "title": "number",
                                                    "type": "number"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "Signature": {
                                            "additionalProperties": false,
                                            "properties": {
                                                "Data": {
                                                    "media": {
                                                        "binaryEncoding": "base64"
                                                    },
                                                    "type": "string"
                                                },
                                                "Type": {
                                                    "title": "number",
                                                    "type": "number"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            "Miner": {
                                "additionalProperties": false,
                                "type": "object"
                            },
                            "Parents": {
                                "additionalProperties": false,
                                "type": "object"
                            },
                            "Ticket": {
                                "additionalProperties": false,
                                "properties": {
                                    "VRFProof": {
                                        "media": {
                                            "binaryEncoding": "base64"
                                        },
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "Timestamp": {
                                "title": "number",
                                "type": "number"
                            },
                            "WinningPoStProof": {
                                "items": {
                                    "additionalProperties": false,
                                    "properties": {
                                        "PoStProof": {
                                            "title": "number",
                                            "type": "number"
                                        },
                                        "ProofBytes": {
                                            "media": {
                                                "binaryEncoding": "base64"
                                            },
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            }
                        },
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*types.BlockMsg",
                "description": "*types.BlockMsg",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "Header": {
                                "Miner": "f01234",
                                "Ticket": {
                                    "VRFProof": "Ynl0ZSBhcnJheQ=="
                                },
                                "ElectionProof": {
                                    "WinCount": 9,
                                    "VRFProof": "Ynl0ZSBhcnJheQ=="
                                },
                                "BeaconEntries": null,
                                "WinPoStProof": null,
                                "Parents": null,
                                "ParentWeight": "0",
                                "Height": 10101,
                                "ParentStateRoot": {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                "ParentMessageReceipts": {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                "Messages": {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                "BLSAggregate": {
                                    "Type": 2,
                                    "Data": "Ynl0ZSBhcnJheQ=="
                                },
                                "Timestamp": 42,
                                "BlockSig": {
                                    "Type": 2,
                                    "Data": "Ynl0ZSBhcnJheQ=="
                                },
                                "ForkSignaling": 42,
                                "ParentBaseFee": "0"
                            },
                            "BlsMessages": null,
                            "SecpkMessages": null
                        }
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "BlsMessages": {
                            "items": {
                                "description": "Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.",
                                "title": "Content Identifier",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "Header": {
                            "additionalProperties": false,
                            "properties": {
                                "BLSAggregate": {
                                    "additionalProperties": false,
                                    "properties": {
                                        "Data": {
                                            "media": {
                                                "binaryEncoding": "base64"
                                            },
                                            "type": "string"
                                        },
                                        "Type": {
                                            "title": "number",
                                            "type": "number"
                                        }
                                    },
                                    "type": "object"
                                },
                                "BeaconEntries": {
                                    "items": {
                                        "additionalProperties": false,
                                        "properties": {
                                            "Data": {
                                                "media": {
                                                    "binaryEncoding": "base64"
                                                },
                                                "type": "string"
                                            },
                                            "Round": {
                                                "title": "number",
                                                "type": "number"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "BlockSig": {
                                    "additionalProperties": false,
                                    "properties": {
                                        "Data": {
                                            "media": {
                                                "binaryEncoding": "base64"
                                            },
                                            "type": "string"
                                        },
                                        "Type": {
                                            "title": "number",
                                            "type": "number"
                                        }
                                    },
                                    "type": "object"
                                },
                                "ElectionProof": {
                                    "additionalProperties": false,
                                    "properties": {
                                        "VRFProof": {
                                            "media": {
                                                "binaryEncoding": "base64"
                                            },
                                            "type": "string"
                                        },
                                        "WinCount": {
                                            "title": "number",
                                            "type": "number"
                                        }
                                    },
                                    "type": "object"
                                },
                                "ForkSignaling": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "Height": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "Messages": {
                                    "title": "Content Identifier",
                                    "type": "string"
                                },
                                "Miner": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "ParentBaseFee": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "ParentMessageReceipts": {
                                    "title": "Content Identifier",
                                    "type": "string"
                                },
                                "ParentStateRoot": {
                                    "title": "Content Identifier",
                                    "type": "string"
                                },
                                "ParentWeight": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "Parents": {
                                    "items": {
                                        "description": "Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.",
                                        "title": "Content Identifier",
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "Ticket": {
                                    "additionalProperties": false,
                                    "properties": {
                                        "VRFProof": {
                                            "media": {
                                                "binaryEncoding": "base64"
                                            },
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "Timestamp": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "WinPoStProof": {
                                    "items": {
                                        "additionalProperties": false,
                                        "properties": {
                                            "PoStProof": {
                                                "title": "number",
                                                "type": "number"
                                            },
                                            "ProofBytes": {
                                                "media": {
                                                    "binaryEncoding": "base64"
                                                },
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        },
                        "SecpkMessages": {
                            "items": {
                                "description": "Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.",
                                "title": "Content Identifier",
                                "type": "string"
                            },
                            "type": "array"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L1669"
            }
        },
        {
            "name": "Filecoin.MinerGetBaseInfo",
            "description": "```go\nfunc (s *FullNodeStruct) MinerGetBaseInfo(p0 context.Context, p1 address.Address, p2 abi.ChainEpoch, p3 types.TipSetKey) (*MiningBaseInfo, error) {\n\tif s.Internal.MinerGetBaseInfo == nil {\n\t\treturn nil, ErrNotSupported\n\t}\n\treturn s.Internal.MinerGetBaseInfo(p0, p1, p2, p3)\n}\n```",
            "summary": "There are not yet any comments for this method.",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p2",
                    "description": "abi.ChainEpoch",
                    "summary": "",
                    "schema": {
                        "title": "number",
                        "description": "Number is a number",
                        "examples": [
                            10101
                        ],
                        "type": [
                            "number"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p3",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*MiningBaseInfo",
                "description": "*MiningBaseInfo",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "MinerPower": "0",
                            "NetworkPower": "0",
                            "Sectors": null,
                            "WorkerKey": "f01234",
                            "SectorSize": 34359738368,
                            "PrevBeaconEntry": {
                                "Round": 42,
                                "Data": "Ynl0ZSBhcnJheQ=="
                            },
                            "BeaconEntries": null,
                            "EligibleForMining": true
                        }
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "BeaconEntries": {
                            "items": {
                                "additionalProperties": false,
                                "properties": {
                                    "Data": {
                                        "media": {
                                            "binaryEncoding": "base64"
                                        },
                                        "type": "string"
                                    },
                                    "Round": {
                                        "title": "number",
                                        "type": "number"
                                    }
                                },
                                "type": "object"
                            },
                            "type": "array"
                        },
                        "EligibleForMining": {
                            "type": "boolean"
                        },
                        "MinerPower": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "NetworkPower": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "PrevBeaconEntry": {
                            "additionalProperties": false,
                            "properties": {
                                "Data": {
                                    "media": {
                                        "binaryEncoding": "base64"
                                    },
                                    "type": "string"
                                },
                                "Round": {
                                    "title": "number",
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        "SectorSize": {
                            "title": "number",
                            "type": "number"
                        },
                        "Sectors": {
                            "items": {
                                "additionalProperties": false,
                                "properties": {
                                    "SealProof": {
                                        "title": "number",
                                        "type": "number"
                                    },
                                    "SealedCID": {
                                        "title": "Content Identifier",
                                        "type": "string"
                                    },
                                    "SectorNumber": {
                                        "title": "number",
                                        "type": "number"
                                    }
                                },
                                "type": "object"
                            },
                            "type": "array"
                        },
                        "WorkerKey": {
                            "additionalProperties": false,
                            "type": "object"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L1680"
            }
        },
        {
            "name": "Filecoin.MpoolBatchPush",
            "description": "```go\nfunc (s *FullNodeStruct) MpoolBatchPush(p0 context.Context, p1 []*types.SignedMessage) ([]cid.Cid, error) {\n\tif s.Internal.MpoolBatchPush == nil {\n\t\treturn *new([]cid.Cid), ErrNotSupported\n\t}\n\treturn s.Internal.MpoolBatchPush(p0, p1)\n}\n```",
            "summary": "MpoolBatchPush batch pushes a signed message to mempool.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "[]*types.SignedMessage",
                    "summary": "",
                    "schema": {
                        "examples": [
                            null
                        ],
                        "items": [
                            {
                                "additionalProperties": false,
                                "properties": {
                                    "Message": {
                                        "additionalProperties": false,
                                        "properties": {
                                            "From": {
                                                "additionalProperties": false,
                                                "type": "object"
                                            },
                                            "GasFeeCap": {
                                                "additionalProperties": false,
                                                "type": "object"
                                            },
                                            "GasLimit": {
                                                "title": "number",
                                                "type": "number"
                                            },
                                            "GasPremium": {
                                                "additionalProperties": false,
                                                "type": "object"
                                            },
                                            "Method": {
                                                "title": "number",
                                                "type": "number"
                                            },
                                            "Nonce": {
                                                "title": "number",
                                                "type": "number"
                                            },
                                            "Params": {
                                                "media": {
                                                    "binaryEncoding": "base64"
                                                },
                                                "type": "string"
                                            },
                                            "To": {
                                                "additionalProperties": false,
                                                "type": "object"
                                            },
                                            "Value": {
                                                "additionalProperties": false,
                                                "type": "object"
                                            },
                                            "Version": {
                                                "title": "number",
                                                "type": "number"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "Signature": {
                                        "additionalProperties": false,
                                        "properties": {
                                            "Data": {
                                                "media": {
                                                    "binaryEncoding": "base64"
                                                },
                                                "type": "string"
                                            },
                                            "Type": {
                                                "title": "number",
                                                "type": "number"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": [
                                    "object"
                                ]
                            }
                        ],
                        "type": [
                            "array"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "[]cid.Cid",
                "description": "[]cid.Cid",
                "summary": "",
                "schema": {
                    "examples": [
                        null
                    ],
                    "items": [
                        {
                            "title": "Content Identifier",
                            "description": "Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.",
                            "type": [
                                "string"
                            ]
                        }
                    ],
                    "type": [
                        "array"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L1691"
            }
        },
        {
            "name": "Filecoin.MpoolBatchPushMessage",
            "description": "```go\nfunc (s *FullNodeStruct) MpoolBatchPushMessage(p0 context.Context, p1 []*types.Message, p2 *MessageSendSpec) ([]*types.SignedMessage, error) {\n\tif s.Internal.MpoolBatchPushMessage == nil {\n\t\treturn *new([]*types.SignedMessage), ErrNotSupported\n\t}\n\treturn s.Internal.MpoolBatchPushMessage(p0, p1, p2)\n}\n```",
            "summary": "MpoolBatchPushMessage batch pushes a unsigned message to mempool.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "[]*types.Message",
                    "summary": "",
                    "schema": {
                        "examples": [
                            null
                        ],
                        "items": [
                            {
                                "additionalProperties": false,
                                "properties": {
                                    "From": {
                                        "additionalProperties": false,
                                        "type": "object"
                                    },
                                    "GasFeeCap": {
                                        "additionalProperties": false,
                                        "type": "object"
                                    },
                                    "GasLimit": {
                                        "title": "number",
                                        "type": "number"
                                    },
                                    "GasPremium": {
                                        "additionalProperties": false,
                                        "type": "object"
                                    },
                                    "Method": {
                                        "title": "number",
                                        "type": "number"
                                    },
                                    "Nonce": {
                                        "title": "number",
                                        "type": "number"
                                    },
                                    "Params": {
                                        "media": {
                                            "binaryEncoding": "base64"
                                        },
                                        "type": "string"
                                    },
                                    "To": {
                                        "additionalProperties": false,
                                        "type": "object"
                                    },
                                    "Value": {
                                        "additionalProperties": false,
                                        "type": "object"
                                    },
                                    "Version": {
                                        "title": "number",
                                        "type": "number"
                                    }
                                },
                                "type": [
                                    "object"
                                ]
                            }
                        ],
                        "type": [
                            "array"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p2",
                    "description": "*MessageSendSpec",
                    "summary": "",
                    "schema": {
                        "examples": [
                            {
                                "MaxFee": "0"
                            }
                        ],
                        "additionalProperties": false,
                        "properties": {
                            "MaxFee": {
                                "additionalProperties": false,
                                "type": "object"
                            }
                        },
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "[]*types.SignedMessage",
                "description": "[]*types.SignedMessage",
                "summary": "",
                "schema": {
                    "examples": [
                        null
                    ],
                    "items": [
                        {
                            "additionalProperties": false,
                            "properties": {
                                "Message": {
                                    "additionalProperties": false,
                                    "properties": {
                                        "From": {
                                            "additionalProperties": false,
                                            "type": "object"
                                        },
                                        "GasFeeCap": {
                                            "additionalProperties": false,
                                            "type": "object"
                                        },
                                        "GasLimit": {
                                            "title": "number",
                                            "type": "number"
                                        },
                                        "GasPremium": {
                                            "additionalProperties": false,
                                            "type": "object"
                                        },
                                        "Method": {
                                            "title": "number",
                                            "type": "number"
                                        },
                                        "Nonce": {
                                            "title": "number",
                                            "type": "number"
                                        },
                                        "Params": {
                                            "media": {
                                                "binaryEncoding": "base64"
                                            },
                                            "type": "string"
                                        },
                                        "To": {
                                            "additionalProperties": false,
                                            "type": "object"
                                        },
                                        "Value": {
                                            "additionalProperties": false,
                                            "type": "object"
                                        },
                                        "Version": {
                                            "title": "number",
                                            "type": "number"
                                        }
                                    },
                                    "type": "object"
                                },
                                "Signature": {
                                    "additionalProperties": false,
                                    "properties": {
                                        "Data": {
                                            "media": {
                                                "binaryEncoding": "base64"
                                            },
                                            "type": "string"
                                        },
                                        "Type": {
                                            "title": "number",
                                            "type": "number"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "type": [
                                "object"
                            ]
                        }
                    ],
                    "type": [
                        "array"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L1702"
            }
        },
        {
            "name": "Filecoin.MpoolBatchPushUntrusted",
            "description": "```go\nfunc (s *FullNodeStruct) MpoolBatchPushUntrusted(p0 context.Context, p1 []*types.SignedMessage) ([]cid.Cid, error) {\n\tif s.Internal.MpoolBatchPushUntrusted == nil {\n\t\treturn *new([]cid.Cid), ErrNotSupported\n\t}\n\treturn s.Internal.MpoolBatchPushUntrusted(p0, p1)\n}\n```",
            "summary": "MpoolBatchPushUntrusted batch pushes a signed message to mempool from untrusted sources.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "[]*types.SignedMessage",
                    "summary": "",
                    "schema": {
                        "examples": [
                            null
                        ],
                        "items": [
                            {
                                "additionalProperties": false,
                                "properties": {
                                    "Message": {
                                        "additionalProperties": false,
                                        "properties": {
                                            "From": {
                                                "additionalProperties": false,
                                                "type": "object"
                                            },
                                            "GasFeeCap": {
                                                "additionalProperties": false,
                                                "type": "object"
                                            },
                                            "GasLimit": {
                                                "title": "number",
                                                "type": "number"
                                            },
                                            "GasPremium": {
                                                "additionalProperties": false,
                                                "type": "object"
                                            },
                                            "Method": {
                                                "title": "number",
                                                "type": "number"
                                            },
                                            "Nonce": {
                                                "title": "number",
                                                "type": "number"
                                            },
                                            "Params": {
                                                "media": {
                                                    "binaryEncoding": "base64"
                                                },
                                                "type": "string"
                                            },
                                            "To": {
                                                "additionalProperties": false,
                                                "type": "object"
                                            },
                                            "Value": {
                                                "additionalProperties": false,
                                                "type": "object"
                                            },
                                            "Version": {
                                                "title": "number",
                                                "type": "number"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "Signature": {
                                        "additionalProperties": false,
                                        "properties": {
                                            "Data": {
                                                "media": {
                                                    "binaryEncoding": "base64"
                                                },
                                                "type": "string"
                                            },
                                            "Type": {
                                                "title": "number",
                                                "type": "number"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": [
                                    "object"
                                ]
                            }
                        ],
                        "type": [
                            "array"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "[]cid.Cid",
                "description": "[]cid.Cid",
                "summary": "",
                "schema": {
                    "examples": [
                        null
                    ],
                    "items": [
                        {
                            "title": "Content Identifier",
                            "description": "Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.",
                            "type": [
                                "string"
                            ]
                        }
                    ],
                    "type": [
                        "array"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L1713"
            }
        },
        {
            "name": "Filecoin.MpoolCheckMessages",
            "description": "```go\nfunc (s *FullNodeStruct) MpoolCheckMessages(p0 context.Context, p1 []*MessagePrototype) ([][]MessageCheckStatus, error) {\n\tif s.Internal.MpoolCheckMessages == nil {\n\t\treturn *new([][]MessageCheckStatus), ErrNotSupported\n\t}\n\treturn s.Internal.MpoolCheckMessages(p0, p1)\n}\n```",
            "summary": "MpoolCheckMessages performs logical checks on a batch of messages\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "[]*MessagePrototype",
                    "summary": "",
                    "schema": {
                        "examples": [
                            null
                        ],
                        "items": [
                            {
                                "additionalProperties": false,
                                "properties": {
                                    "Message": {
                                        "additionalProperties": false,
                                        "properties": {
                                            "From": {
                                                "additionalProperties": false,
                                                "type": "object"
                                            },
                                            "GasFeeCap": {
                                                "additionalProperties": false,
                                                "type": "object"
                                            },
                                            "GasLimit": {
                                                "title": "number",
                                                "type": "number"
                                            },
                                            "GasPremium": {
                                                "additionalProperties": false,
                                                "type": "object"
                                            },
                                            "Method": {
                                                "title": "number",
                                                "type": "number"
                                            },
                                            "Nonce": {
                                                "title": "number",
                                                "type": "number"
                                            },
                                            "Params": {
                                                "media": {
                                                    "binaryEncoding": "base64"
                                                },
                                                "type": "string"
                                            },
                                            "To": {
                                                "additionalProperties": false,
                                                "type": "object"
                                            },
                                            "Value": {
                                                "additionalProperties": false,
                                                "type": "object"
                                            },
                                            "Version": {
                                                "title": "number",
                                                "type": "number"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "ValidNonce": {
                                        "type": "boolean"
                                    }
                                },
                                "type": [
                                    "object"
                                ]
                            }
                        ],
                        "type": [
                            "array"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "[][]MessageCheckStatus",
                "description": "[][]MessageCheckStatus",
                "summary": "",
                "schema": {
                    "examples": [
                        null
                    ],
                    "items": [
                        {
                            "items": [
                                {
                                    "additionalProperties": false,
                                    "properties": {
                                        "Cid": {
                                            "title": "Content Identifier",
                                            "type": "string"
                                        },
                                        "Code": {
                                            "title": "number",
                                            "type": "number"
                                        },
                                        "Err": {
                                            "type": "string"
                                        },
                                        "Hint": {
                                            "patternProperties": {
                                                ".*": {
                                                    "additionalProperties": true,
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "OK": {
                                            "type": "boolean"
                                        }
                                    },
                                    "type": [
                                        "object"
                                    ]
                                }
                            ],
                            "type": [
                                "array"
                            ]
                        }
                    ],
                    "type": [
                        "array"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L1724"
            }
        },
        {
            "name": "Filecoin.MpoolCheckPendingMessages",
            "description": "```go\nfunc (s *FullNodeStruct) MpoolCheckPendingMessages(p0 context.Context, p1 address.Address) ([][]MessageCheckStatus, error) {\n\tif s.Internal.MpoolCheckPendingMessages == nil {\n\t\treturn *new([][]MessageCheckStatus), ErrNotSupported\n\t}\n\treturn s.Internal.MpoolCheckPendingMessages(p0, p1)\n}\n```",
            "summary": "MpoolCheckPendingMessages performs logical checks for all pending messages from a given address\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "[][]MessageCheckStatus",
                "description": "[][]MessageCheckStatus",
                "summary": "",
                "schema": {
                    "examples": [
                        null
                    ],
                    "items": [
                        {
                            "items": [
                                {
                                    "additionalProperties": false,
                                    "properties": {
                                        "Cid": {
                                            "title": "Content Identifier",
                                            "type": "string"
                                        },
                                        "Code": {
                                            "title": "number",
                                            "type": "number"
                                        },
                                        "Err": {
                                            "type": "string"
                                        },
                                        "Hint": {
                                            "patternProperties": {
                                                ".*": {
                                                    "additionalProperties": true,
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "OK": {
                                            "type": "boolean"
                                        }
                                    },
                                    "type": [
                                        "object"
                                    ]
                                }
                            ],
                            "type": [
                                "array"
                            ]
                        }
                    ],
                    "type": [
                        "array"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L1735"
            }
        },
        {
            "name": "Filecoin.MpoolCheckReplaceMessages",
            "description": "```go\nfunc (s *FullNodeStruct) MpoolCheckReplaceMessages(p0 context.Context, p1 []*types.Message) ([][]MessageCheckStatus, error) {\n\tif s.Internal.MpoolCheckReplaceMessages == nil {\n\t\treturn *new([][]MessageCheckStatus), ErrNotSupported\n\t}\n\treturn s.Internal.MpoolCheckReplaceMessages(p0, p1)\n}\n```",
            "summary": "MpoolCheckReplaceMessages performs logical checks on pending messages with replacement\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "[]*types.Message",
                    "summary": "",
                    "schema": {
                        "examples": [
                            null
                        ],
                        "items": [
                            {
                                "additionalProperties": false,
                                "properties": {
                                    "From": {
                                        "additionalProperties": false,
                                        "type": "object"
                                    },
                                    "GasFeeCap": {
                                        "additionalProperties": false,
                                        "type": "object"
                                    },
                                    "GasLimit": {
                                        "title": "number",
                                        "type": "number"
                                    },
                                    "GasPremium": {
                                        "additionalProperties": false,
                                        "type": "object"
                                    },
                                    "Method": {
                                        "title": "number",
                                        "type": "number"
                                    },
                                    "Nonce": {
                                        "title": "number",
                                        "type": "number"
                                    },
                                    "Params": {
                                        "media": {
                                            "binaryEncoding": "base64"
                                        },
                                        "type": "string"
                                    },
                                    "To": {
                                        "additionalProperties": false,
                                        "type": "object"
                                    },
                                    "Value": {
                                        "additionalProperties": false,
                                        "type": "object"
                                    },
                                    "Version": {
                                        "title": "number",
                                        "type": "number"
                                    }
                                },
                                "type": [
                                    "object"
                                ]
                            }
                        ],
                        "type": [
                            "array"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "[][]MessageCheckStatus",
                "description": "[][]MessageCheckStatus",
                "summary": "",
                "schema": {
                    "examples": [
                        null
                    ],
                    "items": [
                        {
                            "items": [
                                {
                                    "additionalProperties": false,
                                    "properties": {
                                        "Cid": {
                                            "title": "Content Identifier",
                                            "type": "string"
                                        },
                                        "Code": {
                                            "title": "number",
                                            "type": "number"
                                        },
                                        "Err": {
                                            "type": "string"
                                        },
                                        "Hint": {
                                            "patternProperties": {
                                                ".*": {
                                                    "additionalProperties": true,
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "OK": {
                                            "type": "boolean"
                                        }
                                    },
                                    "type": [
                                        "object"
                                    ]
                                }
                            ],
                            "type": [
                                "array"
                            ]
                        }
                    ],
                    "type": [
                        "array"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L1746"
            }
        },
        {
            "name": "Filecoin.MpoolClear",
            "description": "```go\nfunc (s *FullNodeStruct) MpoolClear(p0 context.Context, p1 bool) error {\n\tif s.Internal.MpoolClear == nil {\n\t\treturn ErrNotSupported\n\t}\n\treturn s.Internal.MpoolClear(p0, p1)\n}\n```",
            "summary": "MpoolClear clears pending messages from the mpool\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "bool",
                    "summary": "",
                    "schema": {
                        "examples": [
                            true
                        ],
                        "type": [
                            "boolean"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "Null",
                "description": "Null",
                "schema": {
                    "type": [
                        "null"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L1757"
            }
        },
        {
            "name": "Filecoin.MpoolGetConfig",
            "description": "```go\nfunc (s *FullNodeStruct) MpoolGetConfig(p0 context.Context) (*types.MpoolConfig, error) {\n\tif s.Internal.MpoolGetConfig == nil {\n\t\treturn nil, ErrNotSupported\n\t}\n\treturn s.Internal.MpoolGetConfig(p0)\n}\n```",
            "summary": "MpoolGetConfig returns (a copy of) the current mpool config\n",
            "paramStructure": "by-position",
            "params": [],
            "result": {
                "name": "*types.MpoolConfig",
                "description": "*types.MpoolConfig",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "PriorityAddrs": null,
                            "SizeLimitHigh": 123,
                            "SizeLimitLow": 123,
                            "ReplaceByFeeRatio": 12.3,
                            "PruneCooldown": 60000000000,
                            "GasLimitOverestimation": 12.3
                        }
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "GasLimitOverestimation": {
                            "type": "number"
                        },
                        "PriorityAddrs": {
                            "items": {
                                "additionalProperties": false,
                                "type": "object"
                            },
                            "type": "array"
                        },
                        "PruneCooldown": {
                            "title": "number",
                            "type": "number"
                        },
                        "ReplaceByFeeRatio": {
                            "type": "number"
                        },
                        "SizeLimitHigh": {
                            "title": "number",
                            "type": "number"
                        },
                        "SizeLimitLow": {
                            "title": "number",
                            "type": "number"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L1768"
            }
        },
        {
            "name": "Filecoin.MpoolGetNonce",
            "description": "```go\nfunc (s *FullNodeStruct) MpoolGetNonce(p0 context.Context, p1 address.Address) (uint64, error) {\n\tif s.Internal.MpoolGetNonce == nil {\n\t\treturn 0, ErrNotSupported\n\t}\n\treturn s.Internal.MpoolGetNonce(p0, p1)\n}\n```",
            "summary": "MpoolGetNonce gets next nonce for the specified sender.\nNote that this method may not be atomic. Use MpoolPushMessage instead.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "uint64",
                "description": "uint64",
                "summary": "",
                "schema": {
                    "title": "number",
                    "description": "Number is a number",
                    "examples": [
                        42
                    ],
                    "type": [
                        "number"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L1779"
            }
        },
        {
            "name": "Filecoin.MpoolPending",
            "description": "```go\nfunc (s *FullNodeStruct) MpoolPending(p0 context.Context, p1 types.TipSetKey) ([]*types.SignedMessage, error) {\n\tif s.Internal.MpoolPending == nil {\n\t\treturn *new([]*types.SignedMessage), ErrNotSupported\n\t}\n\treturn s.Internal.MpoolPending(p0, p1)\n}\n```",
            "summary": "MpoolPending returns pending mempool messages.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "[]*types.SignedMessage",
                "description": "[]*types.SignedMessage",
                "summary": "",
                "schema": {
                    "examples": [
                        null
                    ],
                    "items": [
                        {
                            "additionalProperties": false,
                            "properties": {
                                "Message": {
                                    "additionalProperties": false,
                                    "properties": {
                                        "From": {
                                            "additionalProperties": false,
                                            "type": "object"
                                        },
                                        "GasFeeCap": {
                                            "additionalProperties": false,
                                            "type": "object"
                                        },
                                        "GasLimit": {
                                            "title": "number",
                                            "type": "number"
                                        },
                                        "GasPremium": {
                                            "additionalProperties": false,
                                            "type": "object"
                                        },
                                        "Method": {
                                            "title": "number",
                                            "type": "number"
                                        },
                                        "Nonce": {
                                            "title": "number",
                                            "type": "number"
                                        },
                                        "Params": {
                                            "media": {
                                                "binaryEncoding": "base64"
                                            },
                                            "type": "string"
                                        },
                                        "To": {
                                            "additionalProperties": false,
                                            "type": "object"
                                        },
                                        "Value": {
                                            "additionalProperties": false,
                                            "type": "object"
                                        },
                                        "Version": {
                                            "title": "number",
                                            "type": "number"
                                        }
                                    },
                                    "type": "object"
                                },
                                "Signature": {
                                    "additionalProperties": false,
                                    "properties": {
                                        "Data": {
                                            "media": {
                                                "binaryEncoding": "base64"
                                            },
                                            "type": "string"
                                        },
                                        "Type": {
                                            "title": "number",
                                            "type": "number"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "type": [
                                "object"
                            ]
                        }
                    ],
                    "type": [
                        "array"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L1790"
            }
        },
        {
            "name": "Filecoin.MpoolPush",
            "description": "```go\nfunc (s *FullNodeStruct) MpoolPush(p0 context.Context, p1 *types.SignedMessage) (cid.Cid, error) {\n\tif s.Internal.MpoolPush == nil {\n\t\treturn *new(cid.Cid), ErrNotSupported\n\t}\n\treturn s.Internal.MpoolPush(p0, p1)\n}\n```",
            "summary": "MpoolPush pushes a signed message to mempool.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "*types.SignedMessage",
                    "summary": "",
                    "schema": {
                        "examples": [
                            {
                                "Message": {
                                    "Version": 42,
                                    "To": "f01234",
                                    "From": "f01234",
                                    "Nonce": 42,
                                    "Value": "0",
                                    "GasLimit": 9,
                                    "GasFeeCap": "0",
                                    "GasPremium": "0",
                                    "Method": 1,
                                    "Params": "Ynl0ZSBhcnJheQ==",
                                    "CID": {
                                        "/": "bafy2bzacebbpdegvr3i4cosewthysg5xkxpqfn2wfcz6mv2hmoktwbdxkax4s"
                                    }
                                },
                                "Signature": {
                                    "Type": 2,
                                    "Data": "Ynl0ZSBhcnJheQ=="
                                },
                                "CID": {
                                    "/": "bafy2bzacebbpdegvr3i4cosewthysg5xkxpqfn2wfcz6mv2hmoktwbdxkax4s"
                                }
                            }
                        ],
                        "additionalProperties": false,
                        "properties": {
                            "Message": {
                                "additionalProperties": false,
                                "properties": {
                                    "From": {
                                        "additionalProperties": false,
                                        "type": "object"
                                    },
                                    "GasFeeCap": {
                                        "additionalProperties": false,
                                        "type": "object"
                                    },
                                    "GasLimit": {
                                        "title": "number",
                                        "type": "number"
                                    },
                                    "GasPremium": {
                                        "additionalProperties": false,
                                        "type": "object"
                                    },
                                    "Method": {
                                        "title": "number",
                                        "type": "number"
                                    },
                                    "Nonce": {
                                        "title": "number",
                                        "type": "number"
                                    },
                                    "Params": {
                                        "media": {
                                            "binaryEncoding": "base64"
                                        },
                                        "type": "string"
                                    },
                                    "To": {
                                        "additionalProperties": false,
                                        "type": "object"
                                    },
                                    "Value": {
                                        "additionalProperties": false,
                                        "type": "object"
                                    },
                                    "Version": {
                                        "title": "number",
                                        "type": "number"
                                    }
                                },
                                "type": "object"
                            },
                            "Signature": {
                                "additionalProperties": false,
                                "properties": {
                                    "Data": {
                                        "media": {
                                            "binaryEncoding": "base64"
                                        },
                                        "type": "string"
                                    },
                                    "Type": {
                                        "title": "number",
                                        "type": "number"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "cid.Cid",
                "description": "cid.Cid",
                "summary": "",
                "schema": {
                    "title": "Content Identifier",
                    "description": "Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.",
                    "examples": [
                        {
                            "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                        }
                    ],
                    "type": [
                        "string"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L1801"
            }
        },
        {
            "name": "Filecoin.MpoolPushMessage",
            "description": "```go\nfunc (s *FullNodeStruct) MpoolPushMessage(p0 context.Context, p1 *types.Message, p2 *MessageSendSpec) (*types.SignedMessage, error) {\n\tif s.Internal.MpoolPushMessage == nil {\n\t\treturn nil, ErrNotSupported\n\t}\n\treturn s.Internal.MpoolPushMessage(p0, p1, p2)\n}\n```",
            "summary": "MpoolPushMessage atomically assigns a nonce, signs, and pushes a message\nto mempool.\nmaxFee is only used when GasFeeCap/GasPremium fields aren't specified\n\nWhen maxFee is set to 0, MpoolPushMessage will guess appropriate fee\nbased on current chain conditions\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "*types.Message",
                    "summary": "",
                    "schema": {
                        "examples": [
                            {
                                "Version": 42,
                                "To": "f01234",
                                "From": "f01234",
                                "Nonce": 42,
                                "Value": "0",
                                "GasLimit": 9,
                                "GasFeeCap": "0",
                                "GasPremium": "0",
                                "Method": 1,
                                "Params": "Ynl0ZSBhcnJheQ==",
                                "CID": {
                                    "/": "bafy2bzacebbpdegvr3i4cosewthysg5xkxpqfn2wfcz6mv2hmoktwbdxkax4s"
                                }
                            }
                        ],
                        "additionalProperties": false,
                        "properties": {
                            "From": {
                                "additionalProperties": false,
                                "type": "object"
                            },
                            "GasFeeCap": {
                                "additionalProperties": false,
                                "type": "object"
                            },
                            "GasLimit": {
                                "title": "number",
                                "type": "number"
                            },
                            "GasPremium": {
                                "additionalProperties": false,
                                "type": "object"
                            },
                            "Method": {
                                "title": "number",
                                "type": "number"
                            },
                            "Nonce": {
                                "title": "number",
                                "type": "number"
                            },
                            "Params": {
                                "media": {
                                    "binaryEncoding": "base64"
                                },
                                "type": "string"
                            },
                            "To": {
                                "additionalProperties": false,
                                "type": "object"
                            },
                            "Value": {
                                "additionalProperties": false,
                                "type": "object"
                            },
                            "Version": {
                                "title": "number",
                                "type": "number"
                            }
                        },
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p2",
                    "description": "*MessageSendSpec",
                    "summary": "",
                    "schema": {
                        "examples": [
                            {
                                "MaxFee": "0"
                            }
                        ],
                        "additionalProperties": false,
                        "properties": {
                            "MaxFee": {
                                "additionalProperties": false,
                                "type": "object"
                            }
                        },
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*types.SignedMessage",
                "description": "*types.SignedMessage",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "Message": {
                                "Version": 42,
                                "To": "f01234",
                                "From": "f01234",
                                "Nonce": 42,
                                "Value": "0",
                                "GasLimit": 9,
                                "GasFeeCap": "0",
                                "GasPremium": "0",
                                "Method": 1,
                                "Params": "Ynl0ZSBhcnJheQ==",
                                "CID": {
                                    "/": "bafy2bzacebbpdegvr3i4cosewthysg5xkxpqfn2wfcz6mv2hmoktwbdxkax4s"
                                }
                            },
                            "Signature": {
                                "Type": 2,
                                "Data": "Ynl0ZSBhcnJheQ=="
                            },
                            "CID": {
                                "/": "bafy2bzacebbpdegvr3i4cosewthysg5xkxpqfn2wfcz6mv2hmoktwbdxkax4s"
                            }
                        }
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "Message": {
                            "additionalProperties": false,
                            "properties": {
                                "From": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "GasFeeCap": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "GasLimit": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "GasPremium": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "Method": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "Nonce": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "Params": {
                                    "media": {
                                        "binaryEncoding": "base64"
                                    },
                                    "type": "string"
                                },
                                "To": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "Value": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "Version": {
                                    "title": "number",
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        "Signature": {
                            "additionalProperties": false,
                            "properties": {
                                "Data": {
                                    "media": {
                                        "binaryEncoding": "base64"
                                    },
                                    "type": "string"
                                },
                                "Type": {
                                    "title": "number",
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L1812"
            }
        },
        {
            "name": "Filecoin.MpoolPushUntrusted",
            "description": "```go\nfunc (s *FullNodeStruct) MpoolPushUntrusted(p0 context.Context, p1 *types.SignedMessage) (cid.Cid, error) {\n\tif s.Internal.MpoolPushUntrusted == nil {\n\t\treturn *new(cid.Cid), ErrNotSupported\n\t}\n\treturn s.Internal.MpoolPushUntrusted(p0, p1)\n}\n```",
            "summary": "MpoolPushUntrusted pushes a signed message to mempool from untrusted sources.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "*types.SignedMessage",
                    "summary": "",
                    "schema": {
                        "examples": [
                            {
                                "Message": {
                                    "Version": 42,
                                    "To": "f01234",
                                    "From": "f01234",
                                    "Nonce": 42,
                                    "Value": "0",
                                    "GasLimit": 9,
                                    "GasFeeCap": "0",
                                    "GasPremium": "0",
                                    "Method": 1,
                                    "Params": "Ynl0ZSBhcnJheQ==",
                                    "CID": {
                                        "/": "bafy2bzacebbpdegvr3i4cosewthysg5xkxpqfn2wfcz6mv2hmoktwbdxkax4s"
                                    }
                                },
                                "Signature": {
                                    "Type": 2,
                                    "Data": "Ynl0ZSBhcnJheQ=="
                                },
                                "CID": {
                                    "/": "bafy2bzacebbpdegvr3i4cosewthysg5xkxpqfn2wfcz6mv2hmoktwbdxkax4s"
                                }
                            }
                        ],
                        "additionalProperties": false,
                        "properties": {
                            "Message": {
                                "additionalProperties": false,
                                "properties": {
                                    "From": {
                                        "additionalProperties": false,
                                        "type": "object"
                                    },
                                    "GasFeeCap": {
                                        "additionalProperties": false,
                                        "type": "object"
                                    },
                                    "GasLimit": {
                                        "title": "number",
                                        "type": "number"
                                    },
                                    "GasPremium": {
                                        "additionalProperties": false,
                                        "type": "object"
                                    },
                                    "Method": {
                                        "title": "number",
                                        "type": "number"
                                    },
                                    "Nonce": {
                                        "title": "number",
                                        "type": "number"
                                    },
                                    "Params": {
                                        "media": {
                                            "binaryEncoding": "base64"
                                        },
                                        "type": "string"
                                    },
                                    "To": {
                                        "additionalProperties": false,
                                        "type": "object"
                                    },
                                    "Value": {
                                        "additionalProperties": false,
                                        "type": "object"
                                    },
                                    "Version": {
                                        "title": "number",
                                        "type": "number"
                                    }
                                },
                                "type": "object"
                            },
                            "Signature": {
                                "additionalProperties": false,
                                "properties": {
                                    "Data": {
                                        "media": {
                                            "binaryEncoding": "base64"
                                        },
                                        "type": "string"
                                    },
                                    "Type": {
                                        "title": "number",
                                        "type": "number"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "cid.Cid",
                "description": "cid.Cid",
                "summary": "",
                "schema": {
                    "title": "Content Identifier",
                    "description": "Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.",
                    "examples": [
                        {
                            "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                        }
                    ],
                    "type": [
                        "string"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L1823"
            }
        },
        {
            "name": "Filecoin.MpoolSelect",
            "description": "```go\nfunc (s *FullNodeStruct) MpoolSelect(p0 context.Context, p1 types.TipSetKey, p2 float64) ([]*types.SignedMessage, error) {\n\tif s.Internal.MpoolSelect == nil {\n\t\treturn *new([]*types.SignedMessage), ErrNotSupported\n\t}\n\treturn s.Internal.MpoolSelect(p0, p1, p2)\n}\n```",
            "summary": "MpoolSelect returns a list of pending messages for inclusion in the next block\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p2",
                    "description": "float64",
                    "summary": "",
                    "schema": {
                        "examples": [
                            12.3
                        ],
                        "type": [
                            "number"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "[]*types.SignedMessage",
                "description": "[]*types.SignedMessage",
                "summary": "",
                "schema": {
                    "examples": [
                        null
                    ],
                    "items": [
                        {
                            "additionalProperties": false,
                            "properties": {
                                "Message": {
                                    "additionalProperties": false,
                                    "properties": {
                                        "From": {
                                            "additionalProperties": false,
                                            "type": "object"
                                        },
                                        "GasFeeCap": {
                                            "additionalProperties": false,
                                            "type": "object"
                                        },
                                        "GasLimit": {
                                            "title": "number",
                                            "type": "number"
                                        },
                                        "GasPremium": {
                                            "additionalProperties": false,
                                            "type": "object"
                                        },
                                        "Method": {
                                            "title": "number",
                                            "type": "number"
                                        },
                                        "Nonce": {
                                            "title": "number",
                                            "type": "number"
                                        },
                                        "Params": {
                                            "media": {
                                                "binaryEncoding": "base64"
                                            },
                                            "type": "string"
                                        },
                                        "To": {
                                            "additionalProperties": false,
                                            "type": "object"
                                        },
                                        "Value": {
                                            "additionalProperties": false,
                                            "type": "object"
                                        },
                                        "Version": {
                                            "title": "number",
                                            "type": "number"
                                        }
                                    },
                                    "type": "object"
                                },
                                "Signature": {
                                    "additionalProperties": false,
                                    "properties": {
                                        "Data": {
                                            "media": {
                                                "binaryEncoding": "base64"
                                            },
                                            "type": "string"
                                        },
                                        "Type": {
                                            "title": "number",
                                            "type": "number"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "type": [
                                "object"
                            ]
                        }
                    ],
                    "type": [
                        "array"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L1834"
            }
        },
        {
            "name": "Filecoin.MpoolSetConfig",
            "description": "```go\nfunc (s *FullNodeStruct) MpoolSetConfig(p0 context.Context, p1 *types.MpoolConfig) error {\n\tif s.Internal.MpoolSetConfig == nil {\n\t\treturn ErrNotSupported\n\t}\n\treturn s.Internal.MpoolSetConfig(p0, p1)\n}\n```",
            "summary": "MpoolSetConfig sets the mpool config to (a copy of) the supplied config\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "*types.MpoolConfig",
                    "summary": "",
                    "schema": {
                        "examples": [
                            {
                                "PriorityAddrs": null,
                                "SizeLimitHigh": 123,
                                "SizeLimitLow": 123,
                                "ReplaceByFeeRatio": 12.3,
                                "PruneCooldown": 60000000000,
                                "GasLimitOverestimation": 12.3
                            }
                        ],
                        "additionalProperties": false,
                        "properties": {
                            "GasLimitOverestimation": {
                                "type": "number"
                            },
                            "PriorityAddrs": {
                                "items": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            "PruneCooldown": {
                                "title": "number",
                                "type": "number"
                            },
                            "ReplaceByFeeRatio": {
                                "type": "number"
                            },
                            "SizeLimitHigh": {
                                "title": "number",
                                "type": "number"
                            },
                            "SizeLimitLow": {
                                "title": "number",
                                "type": "number"
                            }
                        },
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "Null",
                "description": "Null",
                "schema": {
                    "type": [
                        "null"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L1845"
            }
        },
        {
            "name": "Filecoin.MsigAddApprove",
            "description": "```go\nfunc (s *FullNodeStruct) MsigAddApprove(p0 context.Context, p1 address.Address, p2 address.Address, p3 uint64, p4 address.Address, p5 address.Address, p6 bool) (*MessagePrototype, error) {\n\tif s.Internal.MsigAddApprove == nil {\n\t\treturn nil, ErrNotSupported\n\t}\n\treturn s.Internal.MsigAddApprove(p0, p1, p2, p3, p4, p5, p6)\n}\n```",
            "summary": "MsigAddApprove approves a previously proposed AddSigner message\nIt takes the following params: \u003cmultisig address\u003e, \u003csender address of the approve msg\u003e, \u003cproposed message ID\u003e,\n\u003cproposer address\u003e, \u003cnew signer\u003e, \u003cwhether the number of required signers should be increased\u003e\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p2",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p3",
                    "description": "uint64",
                    "summary": "",
                    "schema": {
                        "title": "number",
                        "description": "Number is a number",
                        "examples": [
                            42
                        ],
                        "type": [
                            "number"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p4",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p5",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p6",
                    "description": "bool",
                    "summary": "",
                    "schema": {
                        "examples": [
                            true
                        ],
                        "type": [
                            "boolean"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*MessagePrototype",
                "description": "*MessagePrototype",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "Message": {
                                "Version": 42,
                                "To": "f01234",
                                "From": "f01234",
                                "Nonce": 42,
                                "Value": "0",
                                "GasLimit": 9,
                                "GasFeeCap": "0",
                                "GasPremium": "0",
                                "Method": 1,
                                "Params": "Ynl0ZSBhcnJheQ==",
                                "CID": {
                                    "/": "bafy2bzacebbpdegvr3i4cosewthysg5xkxpqfn2wfcz6mv2hmoktwbdxkax4s"
                                }
                            },
                            "ValidNonce": true
                        }
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "Message": {
                            "additionalProperties": false,
                            "properties": {
                                "From": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "GasFeeCap": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "GasLimit": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "GasPremium": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "Method": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "Nonce": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "Params": {
                                    "media": {
                                        "binaryEncoding": "base64"
                                    },
                                    "type": "string"
                                },
                                "To": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "Value": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "Version": {
                                    "title": "number",
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        "ValidNonce": {
                            "type": "boolean"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L1867"
            }
        },
        {
            "name": "Filecoin.MsigAddCancel",
            "description": "```go\nfunc (s *FullNodeStruct) MsigAddCancel(p0 context.Context, p1 address.Address, p2 address.Address, p3 uint64, p4 address.Address, p5 bool) (*MessagePrototype, error) {\n\tif s.Internal.MsigAddCancel == nil {\n\t\treturn nil, ErrNotSupported\n\t}\n\treturn s.Internal.MsigAddCancel(p0, p1, p2, p3, p4, p5)\n}\n```",
            "summary": "MsigAddCancel cancels a previously proposed AddSigner message\nIt takes the following params: \u003cmultisig address\u003e, \u003csender address of the cancel msg\u003e, \u003cproposed message ID\u003e,\n\u003cnew signer\u003e, \u003cwhether the number of required signers should be increased\u003e\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p2",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p3",
                    "description": "uint64",
                    "summary": "",
                    "schema": {
                        "title": "number",
                        "description": "Number is a number",
                        "examples": [
                            42
                        ],
                        "type": [
                            "number"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p4",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p5",
                    "description": "bool",
                    "summary": "",
                    "schema": {
                        "examples": [
                            true
                        ],
                        "type": [
                            "boolean"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*MessagePrototype",
                "description": "*MessagePrototype",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "Message": {
                                "Version": 42,
                                "To": "f01234",
                                "From": "f01234",
                                "Nonce": 42,
                                "Value": "0",
                                "GasLimit": 9,
                                "GasFeeCap": "0",
                                "GasPremium": "0",
                                "Method": 1,
                                "Params": "Ynl0ZSBhcnJheQ==",
                                "CID": {
                                    "/": "bafy2bzacebbpdegvr3i4cosewthysg5xkxpqfn2wfcz6mv2hmoktwbdxkax4s"
                                }
                            },
                            "ValidNonce": true
                        }
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "Message": {
                            "additionalProperties": false,
                            "properties": {
                                "From": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "GasFeeCap": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "GasLimit": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "GasPremium": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "Method": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "Nonce": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "Params": {
                                    "media": {
                                        "binaryEncoding": "base64"
                                    },
                                    "type": "string"
                                },
                                "To": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "Value": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "Version": {
                                    "title": "number",
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        "ValidNonce": {
                            "type": "boolean"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L1878"
            }
        },
        {
            "name": "Filecoin.MsigAddPropose",
            "description": "```go\nfunc (s *FullNodeStruct) MsigAddPropose(p0 context.Context, p1 address.Address, p2 address.Address, p3 address.Address, p4 bool) (*MessagePrototype, error) {\n\tif s.Internal.MsigAddPropose == nil {\n\t\treturn nil, ErrNotSupported\n\t}\n\treturn s.Internal.MsigAddPropose(p0, p1, p2, p3, p4)\n}\n```",
            "summary": "MsigAddPropose proposes adding a signer in the multisig\nIt takes the following params: \u003cmultisig address\u003e, \u003csender address of the propose msg\u003e,\n\u003cnew signer\u003e, \u003cwhether the number of required signers should be increased\u003e\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p2",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p3",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p4",
                    "description": "bool",
                    "summary": "",
                    "schema": {
                        "examples": [
                            true
                        ],
                        "type": [
                            "boolean"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*MessagePrototype",
                "description": "*MessagePrototype",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "Message": {
                                "Version": 42,
                                "To": "f01234",
                                "From": "f01234",
                                "Nonce": 42,
                                "Value": "0",
                                "GasLimit": 9,
                                "GasFeeCap": "0",
                                "GasPremium": "0",
                                "Method": 1,
                                "Params": "Ynl0ZSBhcnJheQ==",
                                "CID": {
                                    "/": "bafy2bzacebbpdegvr3i4cosewthysg5xkxpqfn2wfcz6mv2hmoktwbdxkax4s"
                                }
                            },
                            "ValidNonce": true
                        }
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "Message": {
                            "additionalProperties": false,
                            "properties": {
                                "From": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "GasFeeCap": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "GasLimit": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "GasPremium": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "Method": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "Nonce": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "Params": {
                                    "media": {
                                        "binaryEncoding": "base64"
                                    },
                                    "type": "string"
                                },
                                "To": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "Value": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "Version": {
                                    "title": "number",
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        "ValidNonce": {
                            "type": "boolean"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L1889"
            }
        },
        {
            "name": "Filecoin.MsigApprove",
            "description": "```go\nfunc (s *FullNodeStruct) MsigApprove(p0 context.Context, p1 address.Address, p2 uint64, p3 address.Address) (*MessagePrototype, error) {\n\tif s.Internal.MsigApprove == nil {\n\t\treturn nil, ErrNotSupported\n\t}\n\treturn s.Internal.MsigApprove(p0, p1, p2, p3)\n}\n```",
            "summary": "MsigApprove approves a previously-proposed multisig message by transaction ID\nIt takes the following params: \u003cmultisig address\u003e, \u003cproposed transaction ID\u003e \u003csigner address\u003e\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p2",
                    "description": "uint64",
                    "summary": "",
                    "schema": {
                        "title": "number",
                        "description": "Number is a number",
                        "examples": [
                            42
                        ],
                        "type": [
                            "number"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p3",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*MessagePrototype",
                "description": "*MessagePrototype",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "Message": {
                                "Version": 42,
                                "To": "f01234",
                                "From": "f01234",
                                "Nonce": 42,
                                "Value": "0",
                                "GasLimit": 9,
                                "GasFeeCap": "0",
                                "GasPremium": "0",
                                "Method": 1,
                                "Params": "Ynl0ZSBhcnJheQ==",
                                "CID": {
                                    "/": "bafy2bzacebbpdegvr3i4cosewthysg5xkxpqfn2wfcz6mv2hmoktwbdxkax4s"
                                }
                            },
                            "ValidNonce": true
                        }
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "Message": {
                            "additionalProperties": false,
                            "properties": {
                                "From": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "GasFeeCap": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "GasLimit": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "GasPremium": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "Method": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "Nonce": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "Params": {
                                    "media": {
                                        "binaryEncoding": "base64"
                                    },
                                    "type": "string"
                                },
                                "To": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "Value": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "Version": {
                                    "title": "number",
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        "ValidNonce": {
                            "type": "boolean"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L1900"
            }
        },
        {
            "name": "Filecoin.MsigApproveTxnHash",
            "description": "```go\nfunc (s *FullNodeStruct) MsigApproveTxnHash(p0 context.Context, p1 address.Address, p2 uint64, p3 address.Address, p4 address.Address, p5 types.BigInt, p6 address.Address, p7 uint64, p8 []byte) (*MessagePrototype, error) {\n\tif s.Internal.MsigApproveTxnHash == nil {\n\t\treturn nil, ErrNotSupported\n\t}\n\treturn s.Internal.MsigApproveTxnHash(p0, p1, p2, p3, p4, p5, p6, p7, p8)\n}\n```",
            "summary": "MsigApproveTxnHash approves a previously-proposed multisig message, specified\nusing both transaction ID and a hash of the parameters used in the\nproposal. This method of approval can be used to ensure you only approve\nexactly the transaction you think you are.\nIt takes the following params: \u003cmultisig address\u003e, \u003cproposed message ID\u003e, \u003cproposer address\u003e, \u003crecipient address\u003e, \u003cvalue to transfer\u003e,\n\u003csender address of the approve msg\u003e, \u003cmethod to call in the proposed message\u003e, \u003cparams to include in the proposed message\u003e\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p2",
                    "description": "uint64",
                    "summary": "",
                    "schema": {
                        "title": "number",
                        "description": "Number is a number",
                        "examples": [
                            42
                        ],
                        "type": [
                            "number"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p3",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p4",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p5",
                    "description": "types.BigInt",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "0"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p6",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p7",
                    "description": "uint64",
                    "summary": "",
                    "schema": {
                        "title": "number",
                        "description": "Number is a number",
                        "examples": [
                            42
                        ],
                        "type": [
                            "number"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p8",
                    "description": "[]byte",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "Ynl0ZSBhcnJheQ=="
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*MessagePrototype",
                "description": "*MessagePrototype",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "Message": {
                                "Version": 42,
                                "To": "f01234",
                                "From": "f01234",
                                "Nonce": 42,
                                "Value": "0",
                                "GasLimit": 9,
                                "GasFeeCap": "0",
                                "GasPremium": "0",
                                "Method": 1,
                                "Params": "Ynl0ZSBhcnJheQ==",
                                "CID": {
                                    "/": "bafy2bzacebbpdegvr3i4cosewthysg5xkxpqfn2wfcz6mv2hmoktwbdxkax4s"
                                }
                            },
                            "ValidNonce": true
                        }
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "Message": {
                            "additionalProperties": false,
                            "properties": {
                                "From": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "GasFeeCap": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "GasLimit": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "GasPremium": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "Method": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "Nonce": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "Params": {
                                    "media": {
                                        "binaryEncoding": "base64"
                                    },
                                    "type": "string"
                                },
                                "To": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "Value": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "Version": {
                                    "title": "number",
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        "ValidNonce": {
                            "type": "boolean"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L1911"
            }
        },
        {
            "name": "Filecoin.MsigCancel",
            "description": "```go\nfunc (s *FullNodeStruct) MsigCancel(p0 context.Context, p1 address.Address, p2 uint64, p3 address.Address, p4 types.BigInt, p5 address.Address, p6 uint64, p7 []byte) (*MessagePrototype, error) {\n\tif s.Internal.MsigCancel == nil {\n\t\treturn nil, ErrNotSupported\n\t}\n\treturn s.Internal.MsigCancel(p0, p1, p2, p3, p4, p5, p6, p7)\n}\n```",
            "summary": "MsigCancel cancels a previously-proposed multisig message\nIt takes the following params: \u003cmultisig address\u003e, \u003cproposed transaction ID\u003e, \u003crecipient address\u003e, \u003cvalue to transfer\u003e,\n\u003csender address of the cancel msg\u003e, \u003cmethod to call in the proposed message\u003e, \u003cparams to include in the proposed message\u003e\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p2",
                    "description": "uint64",
                    "summary": "",
                    "schema": {
                        "title": "number",
                        "description": "Number is a number",
                        "examples": [
                            42
                        ],
                        "type": [
                            "number"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p3",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p4",
                    "description": "types.BigInt",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "0"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p5",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p6",
                    "description": "uint64",
                    "summary": "",
                    "schema": {
                        "title": "number",
                        "description": "Number is a number",
                        "examples": [
                            42
                        ],
                        "type": [
                            "number"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p7",
                    "description": "[]byte",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "Ynl0ZSBhcnJheQ=="
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*MessagePrototype",
                "description": "*MessagePrototype",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "Message": {
                                "Version": 42,
                                "To": "f01234",
                                "From": "f01234",
                                "Nonce": 42,
                                "Value": "0",
                                "GasLimit": 9,
                                "GasFeeCap": "0",
                                "GasPremium": "0",
                                "Method": 1,
                                "Params": "Ynl0ZSBhcnJheQ==",
                                "CID": {
                                    "/": "bafy2bzacebbpdegvr3i4cosewthysg5xkxpqfn2wfcz6mv2hmoktwbdxkax4s"
                                }
                            },
                            "ValidNonce": true
                        }
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "Message": {
                            "additionalProperties": false,
                            "properties": {
                                "From": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "GasFeeCap": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "GasLimit": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "GasPremium": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "Method": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "Nonce": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "Params": {
                                    "media": {
                                        "binaryEncoding": "base64"
                                    },
                                    "type": "string"
                                },
                                "To": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "Value": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "Version": {
                                    "title": "number",
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        "ValidNonce": {
                            "type": "boolean"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L1922"
            }
        },
        {
            "name": "Filecoin.MsigCreate",
            "description": "```go\nfunc (s *FullNodeStruct) MsigCreate(p0 context.Context, p1 uint64, p2 []address.Address, p3 abi.ChainEpoch, p4 types.BigInt, p5 address.Address, p6 types.BigInt) (*MessagePrototype, error) {\n\tif s.Internal.MsigCreate == nil {\n\t\treturn nil, ErrNotSupported\n\t}\n\treturn s.Internal.MsigCreate(p0, p1, p2, p3, p4, p5, p6)\n}\n```",
            "summary": "MsigCreate creates a multisig wallet\nIt takes the following params: \u003crequired number of senders\u003e, \u003capproving addresses\u003e, \u003cunlock duration\u003e\n\u003cinitial balance\u003e, \u003csender address of the create msg\u003e, \u003cgas price\u003e\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "uint64",
                    "summary": "",
                    "schema": {
                        "title": "number",
                        "description": "Number is a number",
                        "examples": [
                            42
                        ],
                        "type": [
                            "number"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p2",
                    "description": "[]address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            null
                        ],
                        "items": [
                            {
                                "additionalProperties": false,
                                "type": [
                                    "object"
                                ]
                            }
                        ],
                        "type": [
                            "array"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p3",
                    "description": "abi.ChainEpoch",
                    "summary": "",
                    "schema": {
                        "title": "number",
                        "description": "Number is a number",
                        "examples": [
                            10101
                        ],
                        "type": [
                            "number"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p4",
                    "description": "types.BigInt",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "0"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p5",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p6",
                    "description": "types.BigInt",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "0"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*MessagePrototype",
                "description": "*MessagePrototype",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "Message": {
                                "Version": 42,
                                "To": "f01234",
                                "From": "f01234",
                                "Nonce": 42,
                                "Value": "0",
                                "GasLimit": 9,
                                "GasFeeCap": "0",
                                "GasPremium": "0",
                                "Method": 1,
                                "Params": "Ynl0ZSBhcnJheQ==",
                                "CID": {
                                    "/": "bafy2bzacebbpdegvr3i4cosewthysg5xkxpqfn2wfcz6mv2hmoktwbdxkax4s"
                                }
                            },
                            "ValidNonce": true
                        }
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "Message": {
                            "additionalProperties": false,
                            "properties": {
                                "From": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "GasFeeCap": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "GasLimit": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "GasPremium": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "Method": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "Nonce": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "Params": {
                                    "media": {
                                        "binaryEncoding": "base64"
                                    },
                                    "type": "string"
                                },
                                "To": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "Value": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "Version": {
                                    "title": "number",
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        "ValidNonce": {
                            "type": "boolean"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L1933"
            }
        },
        {
            "name": "Filecoin.MsigGetAvailableBalance",
            "description": "```go\nfunc (s *FullNodeStruct) MsigGetAvailableBalance(p0 context.Context, p1 address.Address, p2 types.TipSetKey) (types.BigInt, error) {\n\tif s.Internal.MsigGetAvailableBalance == nil {\n\t\treturn *new(types.BigInt), ErrNotSupported\n\t}\n\treturn s.Internal.MsigGetAvailableBalance(p0, p1, p2)\n}\n```",
            "summary": "MsigGetAvailableBalance returns the portion of a multisig's balance that can be withdrawn or spent\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p2",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "types.BigInt",
                "description": "types.BigInt",
                "summary": "",
                "schema": {
                    "examples": [
                        "0"
                    ],
                    "additionalProperties": false,
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L1944"
            }
        },
        {
            "name": "Filecoin.MsigGetPending",
            "description": "```go\nfunc (s *FullNodeStruct) MsigGetPending(p0 context.Context, p1 address.Address, p2 types.TipSetKey) ([]*MsigTransaction, error) {\n\tif s.Internal.MsigGetPending == nil {\n\t\treturn *new([]*MsigTransaction), ErrNotSupported\n\t}\n\treturn s.Internal.MsigGetPending(p0, p1, p2)\n}\n```",
            "summary": "MsigGetPending returns pending transactions for the given multisig\nwallet. Once pending transactions are fully approved, they will no longer\nappear here.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p2",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "[]*MsigTransaction",
                "description": "[]*MsigTransaction",
                "summary": "",
                "schema": {
                    "examples": [
                        null
                    ],
                    "items": [
                        {
                            "additionalProperties": false,
                            "properties": {
                                "Approved": {
                                    "items": {
                                        "additionalProperties": false,
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "ID": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "Method": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "Params": {
                                    "media": {
                                        "binaryEncoding": "base64"
                                    },
                                    "type": "string"
                                },
                                "To": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "Value": {
                                    "additionalProperties": false,
                                    "type": "object"
                                }
                            },
                            "type": [
                                "object"
                            ]
                        }
                    ],
                    "type": [
                        "array"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L1955"
            }
        },
        {
            "name": "Filecoin.MsigGetVested",
            "description": "```go\nfunc (s *FullNodeStruct) MsigGetVested(p0 context.Context, p1 address.Address, p2 types.TipSetKey, p3 types.TipSetKey) (types.BigInt, error) {\n\tif s.Internal.MsigGetVested == nil {\n\t\treturn *new(types.BigInt), ErrNotSupported\n\t}\n\treturn s.Internal.MsigGetVested(p0, p1, p2, p3)\n}\n```",
            "summary": "MsigGetVested returns the amount of FIL that vested in a multisig in a certain period.\nIt takes the following params: \u003cmultisig address\u003e, \u003cstart epoch\u003e, \u003cend epoch\u003e\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p2",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p3",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "types.BigInt",
                "description": "types.BigInt",
                "summary": "",
                "schema": {
                    "examples": [
                        "0"
                    ],
                    "additionalProperties": false,
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L1966"
            }
        },
        {
            "name": "Filecoin.MsigGetVestingSchedule",
            "description": "```go\nfunc (s *FullNodeStruct) MsigGetVestingSchedule(p0 context.Context, p1 address.Address, p2 types.TipSetKey) (MsigVesting, error) {\n\tif s.Internal.MsigGetVestingSchedule == nil {\n\t\treturn *new(MsigVesting), ErrNotSupported\n\t}\n\treturn s.Internal.MsigGetVestingSchedule(p0, p1, p2)\n}\n```",
            "summary": "MsigGetVestingSchedule returns the vesting details of a given multisig.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p2",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "MsigVesting",
                "description": "MsigVesting",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "InitialBalance": "0",
                            "StartEpoch": 10101,
                            "UnlockDuration": 10101
                        }
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "InitialBalance": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "StartEpoch": {
                            "title": "number",
                            "type": "number"
                        },
                        "UnlockDuration": {
                            "title": "number",
                            "type": "number"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L1977"
            }
        },
        {
            "name": "Filecoin.MsigPropose",
            "description": "```go\nfunc (s *FullNodeStruct) MsigPropose(p0 context.Context, p1 address.Address, p2 address.Address, p3 types.BigInt, p4 address.Address, p5 uint64, p6 []byte) (*MessagePrototype, error) {\n\tif s.Internal.MsigPropose == nil {\n\t\treturn nil, ErrNotSupported\n\t}\n\treturn s.Internal.MsigPropose(p0, p1, p2, p3, p4, p5, p6)\n}\n```",
            "summary": "MsigPropose proposes a multisig message\nIt takes the following params: \u003cmultisig address\u003e, \u003crecipient address\u003e, \u003cvalue to transfer\u003e,\n\u003csender address of the propose msg\u003e, \u003cmethod to call in the proposed message\u003e, \u003cparams to include in the proposed message\u003e\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p2",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p3",
                    "description": "types.BigInt",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "0"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p4",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p5",
                    "description": "uint64",
                    "summary": "",
                    "schema": {
                        "title": "number",
                        "description": "Number is a number",
                        "examples": [
                            42
                        ],
                        "type": [
                            "number"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p6",
                    "description": "[]byte",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "Ynl0ZSBhcnJheQ=="
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*MessagePrototype",
                "description": "*MessagePrototype",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "Message": {
                                "Version": 42,
                                "To": "f01234",
                                "From": "f01234",
                                "Nonce": 42,
                                "Value": "0",
                                "GasLimit": 9,
                                "GasFeeCap": "0",
                                "GasPremium": "0",
                                "Method": 1,
                                "Params": "Ynl0ZSBhcnJheQ==",
                                "CID": {
                                    "/": "bafy2bzacebbpdegvr3i4cosewthysg5xkxpqfn2wfcz6mv2hmoktwbdxkax4s"
                                }
                            },
                            "ValidNonce": true
                        }
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "Message": {
                            "additionalProperties": false,
                            "properties": {
                                "From": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "GasFeeCap": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "GasLimit": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "GasPremium": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "Method": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "Nonce": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "Params": {
                                    "media": {
                                        "binaryEncoding": "base64"
                                    },
                                    "type": "string"
                                },
                                "To": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "Value": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "Version": {
                                    "title": "number",
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        "ValidNonce": {
                            "type": "boolean"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L1988"
            }
        },
        {
            "name": "Filecoin.MsigRemoveSigner",
            "description": "```go\nfunc (s *FullNodeStruct) MsigRemoveSigner(p0 context.Context, p1 address.Address, p2 address.Address, p3 address.Address, p4 bool) (*MessagePrototype, error) {\n\tif s.Internal.MsigRemoveSigner == nil {\n\t\treturn nil, ErrNotSupported\n\t}\n\treturn s.Internal.MsigRemoveSigner(p0, p1, p2, p3, p4)\n}\n```",
            "summary": "MsigRemoveSigner proposes the removal of a signer from the multisig.\nIt accepts the multisig to make the change on, the proposer address to\nsend the message from, the address to be removed, and a boolean\nindicating whether or not the signing threshold should be lowered by one\nalong with the address removal.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p2",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p3",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p4",
                    "description": "bool",
                    "summary": "",
                    "schema": {
                        "examples": [
                            true
                        ],
                        "type": [
                            "boolean"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*MessagePrototype",
                "description": "*MessagePrototype",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "Message": {
                                "Version": 42,
                                "To": "f01234",
                                "From": "f01234",
                                "Nonce": 42,
                                "Value": "0",
                                "GasLimit": 9,
                                "GasFeeCap": "0",
                                "GasPremium": "0",
                                "Method": 1,
                                "Params": "Ynl0ZSBhcnJheQ==",
                                "CID": {
                                    "/": "bafy2bzacebbpdegvr3i4cosewthysg5xkxpqfn2wfcz6mv2hmoktwbdxkax4s"
                                }
                            },
                            "ValidNonce": true
                        }
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "Message": {
                            "additionalProperties": false,
                            "properties": {
                                "From": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "GasFeeCap": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "GasLimit": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "GasPremium": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "Method": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "Nonce": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "Params": {
                                    "media": {
                                        "binaryEncoding": "base64"
                                    },
                                    "type": "string"
                                },
                                "To": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "Value": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "Version": {
                                    "title": "number",
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        "ValidNonce": {
                            "type": "boolean"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L1999"
            }
        },
        {
            "name": "Filecoin.MsigSwapApprove",
            "description": "```go\nfunc (s *FullNodeStruct) MsigSwapApprove(p0 context.Context, p1 address.Address, p2 address.Address, p3 uint64, p4 address.Address, p5 address.Address, p6 address.Address) (*MessagePrototype, error) {\n\tif s.Internal.MsigSwapApprove == nil {\n\t\treturn nil, ErrNotSupported\n\t}\n\treturn s.Internal.MsigSwapApprove(p0, p1, p2, p3, p4, p5, p6)\n}\n```",
            "summary": "MsigSwapApprove approves a previously proposed SwapSigner\nIt takes the following params: \u003cmultisig address\u003e, \u003csender address of the approve msg\u003e, \u003cproposed message ID\u003e,\n\u003cproposer address\u003e, \u003cold signer\u003e, \u003cnew signer\u003e\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p2",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p3",
                    "description": "uint64",
                    "summary": "",
                    "schema": {
                        "title": "number",
                        "description": "Number is a number",
                        "examples": [
                            42
                        ],
                        "type": [
                            "number"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p4",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p5",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p6",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*MessagePrototype",
                "description": "*MessagePrototype",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "Message": {
                                "Version": 42,
                                "To": "f01234",
                                "From": "f01234",
                                "Nonce": 42,
                                "Value": "0",
                                "GasLimit": 9,
                                "GasFeeCap": "0",
                                "GasPremium": "0",
                                "Method": 1,
                                "Params": "Ynl0ZSBhcnJheQ==",
                                "CID": {
                                    "/": "bafy2bzacebbpdegvr3i4cosewthysg5xkxpqfn2wfcz6mv2hmoktwbdxkax4s"
                                }
                            },
                            "ValidNonce": true
                        }
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "Message": {
                            "additionalProperties": false,
                            "properties": {
                                "From": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "GasFeeCap": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "GasLimit": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "GasPremium": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "Method": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "Nonce": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "Params": {
                                    "media": {
                                        "binaryEncoding": "base64"
                                    },
                                    "type": "string"
                                },
                                "To": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "Value": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "Version": {
                                    "title": "number",
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        "ValidNonce": {
                            "type": "boolean"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L2010"
            }
        },
        {
            "name": "Filecoin.MsigSwapCancel",
            "description": "```go\nfunc (s *FullNodeStruct) MsigSwapCancel(p0 context.Context, p1 address.Address, p2 address.Address, p3 uint64, p4 address.Address, p5 address.Address) (*MessagePrototype, error) {\n\tif s.Internal.MsigSwapCancel == nil {\n\t\treturn nil, ErrNotSupported\n\t}\n\treturn s.Internal.MsigSwapCancel(p0, p1, p2, p3, p4, p5)\n}\n```",
            "summary": "MsigSwapCancel cancels a previously proposed SwapSigner message\nIt takes the following params: \u003cmultisig address\u003e, \u003csender address of the cancel msg\u003e, \u003cproposed message ID\u003e,\n\u003cold signer\u003e, \u003cnew signer\u003e\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p2",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p3",
                    "description": "uint64",
                    "summary": "",
                    "schema": {
                        "title": "number",
                        "description": "Number is a number",
                        "examples": [
                            42
                        ],
                        "type": [
                            "number"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p4",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p5",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*MessagePrototype",
                "description": "*MessagePrototype",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "Message": {
                                "Version": 42,
                                "To": "f01234",
                                "From": "f01234",
                                "Nonce": 42,
                                "Value": "0",
                                "GasLimit": 9,
                                "GasFeeCap": "0",
                                "GasPremium": "0",
                                "Method": 1,
                                "Params": "Ynl0ZSBhcnJheQ==",
                                "CID": {
                                    "/": "bafy2bzacebbpdegvr3i4cosewthysg5xkxpqfn2wfcz6mv2hmoktwbdxkax4s"
                                }
                            },
                            "ValidNonce": true
                        }
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "Message": {
                            "additionalProperties": false,
                            "properties": {
                                "From": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "GasFeeCap": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "GasLimit": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "GasPremium": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "Method": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "Nonce": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "Params": {
                                    "media": {
                                        "binaryEncoding": "base64"
                                    },
                                    "type": "string"
                                },
                                "To": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "Value": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "Version": {
                                    "title": "number",
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        "ValidNonce": {
                            "type": "boolean"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L2021"
            }
        },
        {
            "name": "Filecoin.MsigSwapPropose",
            "description": "```go\nfunc (s *FullNodeStruct) MsigSwapPropose(p0 context.Context, p1 address.Address, p2 address.Address, p3 address.Address, p4 address.Address) (*MessagePrototype, error) {\n\tif s.Internal.MsigSwapPropose == nil {\n\t\treturn nil, ErrNotSupported\n\t}\n\treturn s.Internal.MsigSwapPropose(p0, p1, p2, p3, p4)\n}\n```",
            "summary": "MsigSwapPropose proposes swapping 2 signers in the multisig\nIt takes the following params: \u003cmultisig address\u003e, \u003csender address of the propose msg\u003e,\n\u003cold signer\u003e, \u003cnew signer\u003e\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p2",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p3",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p4",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*MessagePrototype",
                "description": "*MessagePrototype",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "Message": {
                                "Version": 42,
                                "To": "f01234",
                                "From": "f01234",
                                "Nonce": 42,
                                "Value": "0",
                                "GasLimit": 9,
                                "GasFeeCap": "0",
                                "GasPremium": "0",
                                "Method": 1,
                                "Params": "Ynl0ZSBhcnJheQ==",
                                "CID": {
                                    "/": "bafy2bzacebbpdegvr3i4cosewthysg5xkxpqfn2wfcz6mv2hmoktwbdxkax4s"
                                }
                            },
                            "ValidNonce": true
                        }
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "Message": {
                            "additionalProperties": false,
                            "properties": {
                                "From": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "GasFeeCap": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "GasLimit": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "GasPremium": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "Method": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "Nonce": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "Params": {
                                    "media": {
                                        "binaryEncoding": "base64"
                                    },
                                    "type": "string"
                                },
                                "To": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "Value": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "Version": {
                                    "title": "number",
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        "ValidNonce": {
                            "type": "boolean"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L2032"
            }
        },
        {
            "name": "Filecoin.NodeStatus",
            "description": "```go\nfunc (s *FullNodeStruct) NodeStatus(p0 context.Context, p1 bool) (NodeStatus, error) {\n\tif s.Internal.NodeStatus == nil {\n\t\treturn *new(NodeStatus), ErrNotSupported\n\t}\n\treturn s.Internal.NodeStatus(p0, p1)\n}\n```",
            "summary": "There are not yet any comments for this method.",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "bool",
                    "summary": "",
                    "schema": {
                        "examples": [
                            true
                        ],
                        "type": [
                            "boolean"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "NodeStatus",
                "description": "NodeStatus",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "SyncStatus": {
                                "Epoch": 42,
                                "Behind": 42
                            },
                            "PeerStatus": {
                                "PeersToPublishMsgs": 123,
                                "PeersToPublishBlocks": 123
                            },
                            "ChainStatus": {
                                "BlocksPerTipsetLast100": 12.3,
                                "BlocksPerTipsetLastFinality": 12.3
                            }
                        }
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "ChainStatus": {
                            "additionalProperties": false,
                            "properties": {
                                "BlocksPerTipsetLast100": {
                                    "type": "number"
                                },
                                "BlocksPerTipsetLastFinality": {
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        "PeerStatus": {
                            "additionalProperties": false,
                            "properties": {
                                "PeersToPublishBlocks": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "PeersToPublishMsgs": {
                                    "title": "number",
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        "SyncStatus": {
                            "additionalProperties": false,
                            "properties": {
                                "Behind": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "Epoch": {
                                    "title": "number",
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L2043"
            }
        },
        {
            "name": "Filecoin.PaychAllocateLane",
            "description": "```go\nfunc (s *FullNodeStruct) PaychAllocateLane(p0 context.Context, p1 address.Address) (uint64, error) {\n\tif s.Internal.PaychAllocateLane == nil {\n\t\treturn 0, ErrNotSupported\n\t}\n\treturn s.Internal.PaychAllocateLane(p0, p1)\n}\n```",
            "summary": "",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "uint64",
                "description": "uint64",
                "summary": "",
                "schema": {
                    "title": "number",
                    "description": "Number is a number",
                    "examples": [
                        42
                    ],
                    "type": [
                        "number"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L2054"
            }
        },
        {
            "name": "Filecoin.PaychAvailableFunds",
            "description": "```go\nfunc (s *FullNodeStruct) PaychAvailableFunds(p0 context.Context, p1 address.Address) (*ChannelAvailableFunds, error) {\n\tif s.Internal.PaychAvailableFunds == nil {\n\t\treturn nil, ErrNotSupported\n\t}\n\treturn s.Internal.PaychAvailableFunds(p0, p1)\n}\n```",
            "summary": "",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*ChannelAvailableFunds",
                "description": "*ChannelAvailableFunds",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "Channel": "\u003cempty\u003e",
                            "From": "f01234",
                            "To": "f01234",
                            "ConfirmedAmt": "0",
                            "PendingAmt": "0",
                            "PendingWaitSentinel": null,
                            "QueuedAmt": "0",
                            "VoucherReedeemedAmt": "0"
                        }
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "Channel": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "ConfirmedAmt": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "From": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "PendingAmt": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "PendingWaitSentinel": {
                            "title": "Content Identifier",
                            "type": "string"
                        },
                        "QueuedAmt": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "To": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "VoucherReedeemedAmt": {
                            "additionalProperties": false,
                            "type": "object"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L2065"
            }
        },
        {
            "name": "Filecoin.PaychAvailableFundsByFromTo",
            "description": "```go\nfunc (s *FullNodeStruct) PaychAvailableFundsByFromTo(p0 context.Context, p1 address.Address, p2 address.Address) (*ChannelAvailableFunds, error) {\n\tif s.Internal.PaychAvailableFundsByFromTo == nil {\n\t\treturn nil, ErrNotSupported\n\t}\n\treturn s.Internal.PaychAvailableFundsByFromTo(p0, p1, p2)\n}\n```",
            "summary": "",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p2",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*ChannelAvailableFunds",
                "description": "*ChannelAvailableFunds",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "Channel": "\u003cempty\u003e",
                            "From": "f01234",
                            "To": "f01234",
                            "ConfirmedAmt": "0",
                            "PendingAmt": "0",
                            "PendingWaitSentinel": null,
                            "QueuedAmt": "0",
                            "VoucherReedeemedAmt": "0"
                        }
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "Channel": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "ConfirmedAmt": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "From": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "PendingAmt": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "PendingWaitSentinel": {
                            "title": "Content Identifier",
                            "type": "string"
                        },
                        "QueuedAmt": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "To": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "VoucherReedeemedAmt": {
                            "additionalProperties": false,
                            "type": "object"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L2076"
            }
        },
        {
            "name": "Filecoin.PaychCollect",
            "description": "```go\nfunc (s *FullNodeStruct) PaychCollect(p0 context.Context, p1 address.Address) (cid.Cid, error) {\n\tif s.Internal.PaychCollect == nil {\n\t\treturn *new(cid.Cid), ErrNotSupported\n\t}\n\treturn s.Internal.PaychCollect(p0, p1)\n}\n```",
            "summary": "",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "cid.Cid",
                "description": "cid.Cid",
                "summary": "",
                "schema": {
                    "title": "Content Identifier",
                    "description": "Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.",
                    "examples": [
                        {
                            "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                        }
                    ],
                    "type": [
                        "string"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L2087"
            }
        },
        {
            "name": "Filecoin.PaychGet",
            "description": "```go\nfunc (s *FullNodeStruct) PaychGet(p0 context.Context, p1 address.Address, p2 address.Address, p3 types.BigInt) (*ChannelInfo, error) {\n\tif s.Internal.PaychGet == nil {\n\t\treturn nil, ErrNotSupported\n\t}\n\treturn s.Internal.PaychGet(p0, p1, p2, p3)\n}\n```",
            "summary": "There are not yet any comments for this method.",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p2",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p3",
                    "description": "types.BigInt",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "0"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*ChannelInfo",
                "description": "*ChannelInfo",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "Channel": "f01234",
                            "WaitSentinel": {
                                "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                            }
                        }
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "Channel": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "WaitSentinel": {
                            "title": "Content Identifier",
                            "type": "string"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L2098"
            }
        },
        {
            "name": "Filecoin.PaychGetWaitReady",
            "description": "```go\nfunc (s *FullNodeStruct) PaychGetWaitReady(p0 context.Context, p1 cid.Cid) (address.Address, error) {\n\tif s.Internal.PaychGetWaitReady == nil {\n\t\treturn *new(address.Address), ErrNotSupported\n\t}\n\treturn s.Internal.PaychGetWaitReady(p0, p1)\n}\n```",
            "summary": "",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "cid.Cid",
                    "summary": "",
                    "schema": {
                        "title": "Content Identifier",
                        "description": "Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.",
                        "examples": [
                            {
                                "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                            }
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "address.Address",
                "description": "address.Address",
                "summary": "",
                "schema": {
                    "examples": [
                        "f01234"
                    ],
                    "additionalProperties": false,
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L2109"
            }
        },
        {
            "name": "Filecoin.PaychList",
            "description": "```go\nfunc (s *FullNodeStruct) PaychList(p0 context.Context) ([]address.Address, error) {\n\tif s.Internal.PaychList == nil {\n\t\treturn *new([]address.Address), ErrNotSupported\n\t}\n\treturn s.Internal.PaychList(p0)\n}\n```",
            "summary": "",
            "paramStructure": "by-position",
            "params": [],
            "result": {
                "name": "[]address.Address",
                "description": "[]address.Address",
                "summary": "",
                "schema": {
                    "examples": [
                        null
                    ],
                    "items": [
                        {
                            "additionalProperties": false,
                            "type": [
                                "object"
                            ]
                        }
                    ],
                    "type": [
                        "array"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L2120"
            }
        },
        {
            "name": "Filecoin.PaychNewPayment",
            "description": "```go\nfunc (s *FullNodeStruct) PaychNewPayment(p0 context.Context, p1 address.Address, p2 address.Address, p3 []VoucherSpec) (*PaymentInfo, error) {\n\tif s.Internal.PaychNewPayment == nil {\n\t\treturn nil, ErrNotSupported\n\t}\n\treturn s.Internal.PaychNewPayment(p0, p1, p2, p3)\n}\n```",
            "summary": "",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p2",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p3",
                    "description": "[]VoucherSpec",
                    "summary": "",
                    "schema": {
                        "examples": [
                            null
                        ],
                        "items": [
                            {
                                "additionalProperties": false,
                                "properties": {
                                    "Amount": {
                                        "additionalProperties": false,
                                        "type": "object"
                                    },
                                    "Extra": {
                                        "additionalProperties": false,
                                        "properties": {
                                            "Actor": {
                                                "additionalProperties": false,
                                                "type": "object"
                                            },
                                            "Data": {
                                                "media": {
                                                    "binaryEncoding": "base64"
                                                },
                                                "type": "string"
                                            },
                                            "Method": {
                                                "title": "number",
                                                "type": "number"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "MinSettle": {
                                        "title": "number",
                                        "type": "number"
                                    },
                                    "TimeLockMax": {
                                        "title": "number",
                                        "type": "number"
                                    },
                                    "TimeLockMin": {
                                        "title": "number",
                                        "type": "number"
                                    }
                                },
                                "type": [
                                    "object"
                                ]
                            }
                        ],
                        "type": [
                            "array"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*PaymentInfo",
                "description": "*PaymentInfo",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "Channel": "f01234",
                            "WaitSentinel": {
                                "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                            },
                            "Vouchers": null
                        }
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "Channel": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "Vouchers": {
                            "items": {
                                "additionalProperties": false,
                                "properties": {
                                    "Amount": {
                                        "additionalProperties": false,
                                        "type": "object"
                                    },
                                    "ChannelAddr": {
                                        "additionalProperties": false,
                                        "type": "object"
                                    },
                                    "Extra": {
                                        "additionalProperties": false,
                                        "properties": {
                                            "Actor": {
                                                "additionalProperties": false,
                                                "type": "object"
                                            },
                                            "Data": {
                                                "media": {
                                                    "binaryEncoding": "base64"
                                                },
                                                "type": "string"
                                            },
                                            "Method": {
                                                "title": "number",
                                                "type": "number"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "Lane": {
                                        "title": "number",
                                        "type": "number"
                                    },
                                    "Merges": {
                                        "items": {
                                            "additionalProperties": false,
                                            "properties": {
                                                "Lane": {
                                                    "title": "number",
                                                    "type": "number"
                                                },
                                                "Nonce": {
                                                    "title": "number",
                                                    "type": "number"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "MinSettleHeight": {
                                        "title": "number",
                                        "type": "number"
                                    },
                                    "Nonce": {
                                        "title": "number",
                                        "type": "number"
                                    },
                                    "SecretPreimage": {
                                        "media": {
                                            "binaryEncoding": "base64"
                                        },
                                        "type": "string"
                                    },
                                    "Signature": {
                                        "additionalProperties": false,
                                        "properties": {
                                            "Data": {
                                                "media": {
                                                    "binaryEncoding": "base64"
                                                },
                                                "type": "string"
                                            },
                                            "Type": {
                                                "title": "number",
                                                "type": "number"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "TimeLockMax": {
                                        "title": "number",
                                        "type": "number"
                                    },
                                    "TimeLockMin": {
                                        "title": "number",
                                        "type": "number"
                                    }
                                },
                                "type": "object"
                            },
                            "type": "array"
                        },
                        "WaitSentinel": {
                            "title": "Content Identifier",
                            "type": "string"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L2131"
            }
        },
        {
            "name": "Filecoin.PaychSettle",
            "description": "```go\nfunc (s *FullNodeStruct) PaychSettle(p0 context.Context, p1 address.Address) (cid.Cid, error) {\n\tif s.Internal.PaychSettle == nil {\n\t\treturn *new(cid.Cid), ErrNotSupported\n\t}\n\treturn s.Internal.PaychSettle(p0, p1)\n}\n```",
            "summary": "",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "cid.Cid",
                "description": "cid.Cid",
                "summary": "",
                "schema": {
                    "title": "Content Identifier",
                    "description": "Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.",
                    "examples": [
                        {
                            "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                        }
                    ],
                    "type": [
                        "string"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L2142"
            }
        },
        {
            "name": "Filecoin.PaychStatus",
            "description": "```go\nfunc (s *FullNodeStruct) PaychStatus(p0 context.Context, p1 address.Address) (*PaychStatus, error) {\n\tif s.Internal.PaychStatus == nil {\n\t\treturn nil, ErrNotSupported\n\t}\n\treturn s.Internal.PaychStatus(p0, p1)\n}\n```",
            "summary": "",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*PaychStatus",
                "description": "*PaychStatus",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "ControlAddr": "f01234",
                            "Direction": 1
                        }
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "ControlAddr": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "Direction": {
                            "title": "number",
                            "type": "number"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L2153"
            }
        },
        {
            "name": "Filecoin.PaychVoucherAdd",
            "description": "```go\nfunc (s *FullNodeStruct) PaychVoucherAdd(p0 context.Context, p1 address.Address, p2 *paych.SignedVoucher, p3 []byte, p4 types.BigInt) (types.BigInt, error) {\n\tif s.Internal.PaychVoucherAdd == nil {\n\t\treturn *new(types.BigInt), ErrNotSupported\n\t}\n\treturn s.Internal.PaychVoucherAdd(p0, p1, p2, p3, p4)\n}\n```",
            "summary": "",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p2",
                    "description": "*paych.SignedVoucher",
                    "summary": "",
                    "schema": {
                        "examples": [
                            {
                                "ChannelAddr": "f01234",
                                "TimeLockMin": 10101,
                                "TimeLockMax": 10101,
                                "SecretPreimage": "Ynl0ZSBhcnJheQ==",
                                "Extra": {
                                    "Actor": "f01234",
                                    "Method": 1,
                                    "Data": "Ynl0ZSBhcnJheQ=="
                                },
                                "Lane": 42,
                                "Nonce": 42,
                                "Amount": "0",
                                "MinSettleHeight": 10101,
                                "Merges": null,
                                "Signature": {
                                    "Type": 2,
                                    "Data": "Ynl0ZSBhcnJheQ=="
                                }
                            }
                        ],
                        "additionalProperties": false,
                        "properties": {
                            "Amount": {
                                "additionalProperties": false,
                                "type": "object"
                            },
                            "ChannelAddr": {
                                "additionalProperties": false,
                                "type": "object"
                            },
                            "Extra": {
                                "additionalProperties": false,
                                "properties": {
                                    "Actor": {
                                        "additionalProperties": false,
                                        "type": "object"
                                    },
                                    "Data": {
                                        "media": {
                                            "binaryEncoding": "base64"
                                        },
                                        "type": "string"
                                    },
                                    "Method": {
                                        "title": "number",
                                        "type": "number"
                                    }
                                },
                                "type": "object"
                            },
                            "Lane": {
                                "title": "number",
                                "type": "number"
                            },
                            "Merges": {
                                "items": {
                                    "additionalProperties": false,
                                    "properties": {
                                        "Lane": {
                                            "title": "number",
                                            "type": "number"
                                        },
                                        "Nonce": {
                                            "title": "number",
                                            "type": "number"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            "MinSettleHeight": {
                                "title": "number",
                                "type": "number"
                            },
                            "Nonce": {
                                "title": "number",
                                "type": "number"
                            },
                            "SecretPreimage": {
                                "media": {
                                    "binaryEncoding": "base64"
                                },
                                "type": "string"
                            },
                            "Signature": {
                                "additionalProperties": false,
                                "properties": {
                                    "Data": {
                                        "media": {
                                            "binaryEncoding": "base64"
                                        },
                                        "type": "string"
                                    },
                                    "Type": {
                                        "title": "number",
                                        "type": "number"
                                    }
                                },
                                "type": "object"
                            },
                            "TimeLockMax": {
                                "title": "number",
                                "type": "number"
                            },
                            "TimeLockMin": {
                                "title": "number",
                                "type": "number"
                            }
                        },
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p3",
                    "description": "[]byte",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "Ynl0ZSBhcnJheQ=="
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p4",
                    "description": "types.BigInt",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "0"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "types.BigInt",
                "description": "types.BigInt",
                "summary": "",
                "schema": {
                    "examples": [
                        "0"
                    ],
                    "additionalProperties": false,
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L2164"
            }
        },
        {
            "name": "Filecoin.PaychVoucherCheckSpendable",
            "description": "```go\nfunc (s *FullNodeStruct) PaychVoucherCheckSpendable(p0 context.Context, p1 address.Address, p2 *paych.SignedVoucher, p3 []byte, p4 []byte) (bool, error) {\n\tif s.Internal.PaychVoucherCheckSpendable == nil {\n\t\treturn false, ErrNotSupported\n\t}\n\treturn s.Internal.PaychVoucherCheckSpendable(p0, p1, p2, p3, p4)\n}\n```",
            "summary": "",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p2",
                    "description": "*paych.SignedVoucher",
                    "summary": "",
                    "schema": {
                        "examples": [
                            {
                                "ChannelAddr": "f01234",
                                "TimeLockMin": 10101,
                                "TimeLockMax": 10101,
                                "SecretPreimage": "Ynl0ZSBhcnJheQ==",
                                "Extra": {
                                    "Actor": "f01234",
                                    "Method": 1,
                                    "Data": "Ynl0ZSBhcnJheQ=="
                                },
                                "Lane": 42,
                                "Nonce": 42,
                                "Amount": "0",
                                "MinSettleHeight": 10101,
                                "Merges": null,
                                "Signature": {
                                    "Type": 2,
                                    "Data": "Ynl0ZSBhcnJheQ=="
                                }
                            }
                        ],
                        "additionalProperties": false,
                        "properties": {
                            "Amount": {
                                "additionalProperties": false,
                                "type": "object"
                            },
                            "ChannelAddr": {
                                "additionalProperties": false,
                                "type": "object"
                            },
                            "Extra": {
                                "additionalProperties": false,
                                "properties": {
                                    "Actor": {
                                        "additionalProperties": false,
                                        "type": "object"
                                    },
                                    "Data": {
                                        "media": {
                                            "binaryEncoding": "base64"
                                        },
                                        "type": "string"
                                    },
                                    "Method": {
                                        "title": "number",
                                        "type": "number"
                                    }
                                },
                                "type": "object"
                            },
                            "Lane": {
                                "title": "number",
                                "type": "number"
                            },
                            "Merges": {
                                "items": {
                                    "additionalProperties": false,
                                    "properties": {
                                        "Lane": {
                                            "title": "number",
                                            "type": "number"
                                        },
                                        "Nonce": {
                                            "title": "number",
                                            "type": "number"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            "MinSettleHeight": {
                                "title": "number",
                                "type": "number"
                            },
                            "Nonce": {
                                "title": "number",
                                "type": "number"
                            },
                            "SecretPreimage": {
                                "media": {
                                    "binaryEncoding": "base64"
                                },
                                "type": "string"
                            },
                            "Signature": {
                                "additionalProperties": false,
                                "properties": {
                                    "Data": {
                                        "media": {
                                            "binaryEncoding": "base64"
                                        },
                                        "type": "string"
                                    },
                                    "Type": {
                                        "title": "number",
                                        "type": "number"
                                    }
                                },
                                "type": "object"
                            },
                            "TimeLockMax": {
                                "title": "number",
                                "type": "number"
                            },
                            "TimeLockMin": {
                                "title": "number",
                                "type": "number"
                            }
                        },
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p3",
                    "description": "[]byte",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "Ynl0ZSBhcnJheQ=="
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p4",
                    "description": "[]byte",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "Ynl0ZSBhcnJheQ=="
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "bool",
                "description": "bool",
                "summary": "",
                "schema": {
                    "examples": [
                        true
                    ],
                    "type": [
                        "boolean"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L2175"
            }
        },
        {
            "name": "Filecoin.PaychVoucherCheckValid",
            "description": "```go\nfunc (s *FullNodeStruct) PaychVoucherCheckValid(p0 context.Context, p1 address.Address, p2 *paych.SignedVoucher) error {\n\tif s.Internal.PaychVoucherCheckValid == nil {\n\t\treturn ErrNotSupported\n\t}\n\treturn s.Internal.PaychVoucherCheckValid(p0, p1, p2)\n}\n```",
            "summary": "",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p2",
                    "description": "*paych.SignedVoucher",
                    "summary": "",
                    "schema": {
                        "examples": [
                            {
                                "ChannelAddr": "f01234",
                                "TimeLockMin": 10101,
                                "TimeLockMax": 10101,
                                "SecretPreimage": "Ynl0ZSBhcnJheQ==",
                                "Extra": {
                                    "Actor": "f01234",
                                    "Method": 1,
                                    "Data": "Ynl0ZSBhcnJheQ=="
                                },
                                "Lane": 42,
                                "Nonce": 42,
                                "Amount": "0",
                                "MinSettleHeight": 10101,
                                "Merges": null,
                                "Signature": {
                                    "Type": 2,
                                    "Data": "Ynl0ZSBhcnJheQ=="
                                }
                            }
                        ],
                        "additionalProperties": false,
                        "properties": {
                            "Amount": {
                                "additionalProperties": false,
                                "type": "object"
                            },
                            "ChannelAddr": {
                                "additionalProperties": false,
                                "type": "object"
                            },
                            "Extra": {
                                "additionalProperties": false,
                                "properties": {
                                    "Actor": {
                                        "additionalProperties": false,
                                        "type": "object"
                                    },
                                    "Data": {
                                        "media": {
                                            "binaryEncoding": "base64"
                                        },
                                        "type": "string"
                                    },
                                    "Method": {
                                        "title": "number",
                                        "type": "number"
                                    }
                                },
                                "type": "object"
                            },
                            "Lane": {
                                "title": "number",
                                "type": "number"
                            },
                            "Merges": {
                                "items": {
                                    "additionalProperties": false,
                                    "properties": {
                                        "Lane": {
                                            "title": "number",
                                            "type": "number"
                                        },
                                        "Nonce": {
                                            "title": "number",
                                            "type": "number"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            "MinSettleHeight": {
                                "title": "number",
                                "type": "number"
                            },
                            "Nonce": {
                                "title": "number",
                                "type": "number"
                            },
                            "SecretPreimage": {
                                "media": {
                                    "binaryEncoding": "base64"
                                },
                                "type": "string"
                            },
                            "Signature": {
                                "additionalProperties": false,
                                "properties": {
                                    "Data": {
                                        "media": {
                                            "binaryEncoding": "base64"
                                        },
                                        "type": "string"
                                    },
                                    "Type": {
                                        "title": "number",
                                        "type": "number"
                                    }
                                },
                                "type": "object"
                            },
                            "TimeLockMax": {
                                "title": "number",
                                "type": "number"
                            },
                            "TimeLockMin": {
                                "title": "number",
                                "type": "number"
                            }
                        },
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "Null",
                "description": "Null",
                "schema": {
                    "type": [
                        "null"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L2186"
            }
        },
        {
            "name": "Filecoin.PaychVoucherCreate",
            "description": "```go\nfunc (s *FullNodeStruct) PaychVoucherCreate(p0 context.Context, p1 address.Address, p2 types.BigInt, p3 uint64) (*VoucherCreateResult, error) {\n\tif s.Internal.PaychVoucherCreate == nil {\n\t\treturn nil, ErrNotSupported\n\t}\n\treturn s.Internal.PaychVoucherCreate(p0, p1, p2, p3)\n}\n```",
            "summary": "",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p2",
                    "description": "types.BigInt",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "0"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p3",
                    "description": "uint64",
                    "summary": "",
                    "schema": {
                        "title": "number",
                        "description": "Number is a number",
                        "examples": [
                            42
                        ],
                        "type": [
                            "number"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*VoucherCreateResult",
                "description": "*VoucherCreateResult",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "Voucher": {
                                "ChannelAddr": "f01234",
                                "TimeLockMin": 10101,
                                "TimeLockMax": 10101,
                                "SecretPreimage": "Ynl0ZSBhcnJheQ==",
                                "Extra": {
                                    "Actor": "f01234",
                                    "Method": 1,
                                    "Data": "Ynl0ZSBhcnJheQ=="
                                },
                                "Lane": 42,
                                "Nonce": 42,
                                "Amount": "0",
                                "MinSettleHeight": 10101,
                                "Merges": null,
                                "Signature": {
                                    "Type": 2,
                                    "Data": "Ynl0ZSBhcnJheQ=="
                                }
                            },
                            "Shortfall": "0"
                        }
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "Shortfall": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "Voucher": {
                            "additionalProperties": false,
                            "properties": {
                                "Amount": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "ChannelAddr": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "Extra": {
                                    "additionalProperties": false,
                                    "properties": {
                                        "Actor": {
                                            "additionalProperties": false,
                                            "type": "object"
                                        },
                                        "Data": {
                                            "media": {
                                                "binaryEncoding": "base64"
                                            },
                                            "type": "string"
                                        },
                                        "Method": {
                                            "title": "number",
                                            "type": "number"
                                        }
                                    },
                                    "type": "object"
                                },
                                "Lane": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "Merges": {
                                    "items": {
                                        "additionalProperties": false,
                                        "properties": {
                                            "Lane": {
                                                "title": "number",
                                                "type": "number"
                                            },
                                            "Nonce": {
                                                "title": "number",
                                                "type": "number"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "MinSettleHeight": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "Nonce": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "SecretPreimage": {
                                    "media": {
                                        "binaryEncoding": "base64"
                                    },
                                    "type": "string"
                                },
                                "Signature": {
                                    "additionalProperties": false,
                                    "properties": {
                                        "Data": {
                                            "media": {
                                                "binaryEncoding": "base64"
                                            },
                                            "type": "string"
                                        },
                                        "Type": {
                                            "title": "number",
                                            "type": "number"
                                        }
                                    },
                                    "type": "object"
                                },
                                "TimeLockMax": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "TimeLockMin": {
                                    "title": "number",
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L2197"
            }
        },
        {
            "name": "Filecoin.PaychVoucherList",
            "description": "```go\nfunc (s *FullNodeStruct) PaychVoucherList(p0 context.Context, p1 address.Address) ([]*paych.SignedVoucher, error) {\n\tif s.Internal.PaychVoucherList == nil {\n\t\treturn *new([]*paych.SignedVoucher), ErrNotSupported\n\t}\n\treturn s.Internal.PaychVoucherList(p0, p1)\n}\n```",
            "summary": "",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "[]*paych.SignedVoucher",
                "description": "[]*paych.SignedVoucher",
                "summary": "",
                "schema": {
                    "examples": [
                        null
                    ],
                    "items": [
                        {
                            "additionalProperties": false,
                            "properties": {
                                "Amount": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "ChannelAddr": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "Extra": {
                                    "additionalProperties": false,
                                    "properties": {
                                        "Actor": {
                                            "additionalProperties": false,
                                            "type": "object"
                                        },
                                        "Data": {
                                            "media": {
                                                "binaryEncoding": "base64"
                                            },
                                            "type": "string"
                                        },
                                        "Method": {
                                            "title": "number",
                                            "type": "number"
                                        }
                                    },
                                    "type": "object"
                                },
                                "Lane": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "Merges": {
                                    "items": {
                                        "additionalProperties": false,
                                        "properties": {
                                            "Lane": {
                                                "title": "number",
                                                "type": "number"
                                            },
                                            "Nonce": {
                                                "title": "number",
                                                "type": "number"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "MinSettleHeight": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "Nonce": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "SecretPreimage": {
                                    "media": {
                                        "binaryEncoding": "base64"
                                    },
                                    "type": "string"
                                },
                                "Signature": {
                                    "additionalProperties": false,
                                    "properties": {
                                        "Data": {
                                            "media": {
                                                "binaryEncoding": "base64"
                                            },
                                            "type": "string"
                                        },
                                        "Type": {
                                            "title": "number",
                                            "type": "number"
                                        }
                                    },
                                    "type": "object"
                                },
                                "TimeLockMax": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "TimeLockMin": {
                                    "title": "number",
                                    "type": "number"
                                }
                            },
                            "type": [
                                "object"
                            ]
                        }
                    ],
                    "type": [
                        "array"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L2208"
            }
        },
        {
            "name": "Filecoin.PaychVoucherSubmit",
            "description": "```go\nfunc (s *FullNodeStruct) PaychVoucherSubmit(p0 context.Context, p1 address.Address, p2 *paych.SignedVoucher, p3 []byte, p4 []byte) (cid.Cid, error) {\n\tif s.Internal.PaychVoucherSubmit == nil {\n\t\treturn *new(cid.Cid), ErrNotSupported\n\t}\n\treturn s.Internal.PaychVoucherSubmit(p0, p1, p2, p3, p4)\n}\n```",
            "summary": "",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p2",
                    "description": "*paych.SignedVoucher",
                    "summary": "",
                    "schema": {
                        "examples": [
                            {
                                "ChannelAddr": "f01234",
                                "TimeLockMin": 10101,
                                "TimeLockMax": 10101,
                                "SecretPreimage": "Ynl0ZSBhcnJheQ==",
                                "Extra": {
                                    "Actor": "f01234",
                                    "Method": 1,
                                    "Data": "Ynl0ZSBhcnJheQ=="
                                },
                                "Lane": 42,
                                "Nonce": 42,
                                "Amount": "0",
                                "MinSettleHeight": 10101,
                                "Merges": null,
                                "Signature": {
                                    "Type": 2,
                                    "Data": "Ynl0ZSBhcnJheQ=="
                                }
                            }
                        ],
                        "additionalProperties": false,
                        "properties": {
                            "Amount": {
                                "additionalProperties": false,
                                "type": "object"
                            },
                            "ChannelAddr": {
                                "additionalProperties": false,
                                "type": "object"
                            },
                            "Extra": {
                                "additionalProperties": false,
                                "properties": {
                                    "Actor": {
                                        "additionalProperties": false,
                                        "type": "object"
                                    },
                                    "Data": {
                                        "media": {
                                            "binaryEncoding": "base64"
                                        },
                                        "type": "string"
                                    },
                                    "Method": {
                                        "title": "number",
                                        "type": "number"
                                    }
                                },
                                "type": "object"
                            },
                            "Lane": {
                                "title": "number",
                                "type": "number"
                            },
                            "Merges": {
                                "items": {
                                    "additionalProperties": false,
                                    "properties": {
                                        "Lane": {
                                            "title": "number",
                                            "type": "number"
                                        },
                                        "Nonce": {
                                            "title": "number",
                                            "type": "number"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            "MinSettleHeight": {
                                "title": "number",
                                "type": "number"
                            },
                            "Nonce": {
                                "title": "number",
                                "type": "number"
                            },
                            "SecretPreimage": {
                                "media": {
                                    "binaryEncoding": "base64"
                                },
                                "type": "string"
                            },
                            "Signature": {
                                "additionalProperties": false,
                                "properties": {
                                    "Data": {
                                        "media": {
                                            "binaryEncoding": "base64"
                                        },
                                        "type": "string"
                                    },
                                    "Type": {
                                        "title": "number",
                                        "type": "number"
                                    }
                                },
                                "type": "object"
                            },
                            "TimeLockMax": {
                                "title": "number",
                                "type": "number"
                            },
                            "TimeLockMin": {
                                "title": "number",
                                "type": "number"
                            }
                        },
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p3",
                    "description": "[]byte",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "Ynl0ZSBhcnJheQ=="
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p4",
                    "description": "[]byte",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "Ynl0ZSBhcnJheQ=="
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "cid.Cid",
                "description": "cid.Cid",
                "summary": "",
                "schema": {
                    "title": "Content Identifier",
                    "description": "Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.",
                    "examples": [
                        {
                            "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                        }
                    ],
                    "type": [
                        "string"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L2219"
            }
        },
        {
            "name": "Filecoin.StateAccountKey",
            "description": "```go\nfunc (s *FullNodeStruct) StateAccountKey(p0 context.Context, p1 address.Address, p2 types.TipSetKey) (address.Address, error) {\n\tif s.Internal.StateAccountKey == nil {\n\t\treturn *new(address.Address), ErrNotSupported\n\t}\n\treturn s.Internal.StateAccountKey(p0, p1, p2)\n}\n```",
            "summary": "StateAccountKey returns the public key address of the given ID address\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p2",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "address.Address",
                "description": "address.Address",
                "summary": "",
                "schema": {
                    "examples": [
                        "f01234"
                    ],
                    "additionalProperties": false,
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L2230"
            }
        },
        {
            "name": "Filecoin.StateAllMinerFaults",
            "description": "```go\nfunc (s *FullNodeStruct) StateAllMinerFaults(p0 context.Context, p1 abi.ChainEpoch, p2 types.TipSetKey) ([]*Fault, error) {\n\tif s.Internal.StateAllMinerFaults == nil {\n\t\treturn *new([]*Fault), ErrNotSupported\n\t}\n\treturn s.Internal.StateAllMinerFaults(p0, p1, p2)\n}\n```",
            "summary": "StateAllMinerFaults returns all non-expired Faults that occur within lookback epochs of the given tipset\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "abi.ChainEpoch",
                    "summary": "",
                    "schema": {
                        "title": "number",
                        "description": "Number is a number",
                        "examples": [
                            10101
                        ],
                        "type": [
                            "number"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p2",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "[]*Fault",
                "description": "[]*Fault",
                "summary": "",
                "schema": {
                    "examples": [
                        null
                    ],
                    "items": [
                        {
                            "additionalProperties": false,
                            "properties": {
                                "Epoch": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "Miner": {
                                    "additionalProperties": false,
                                    "type": "object"
                                }
                            },
                            "type": [
                                "object"
                            ]
                        }
                    ],
                    "type": [
                        "array"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L2241"
            }
        },
        {
            "name": "Filecoin.StateCall",
            "description": "```go\nfunc (s *FullNodeStruct) StateCall(p0 context.Context, p1 *types.Message, p2 types.TipSetKey) (*InvocResult, error) {\n\tif s.Internal.StateCall == nil {\n\t\treturn nil, ErrNotSupported\n\t}\n\treturn s.Internal.StateCall(p0, p1, p2)\n}\n```",
            "summary": "StateCall runs the given message and returns its result without any persisted changes.\n\nStateCall applies the message to the tipset's parent state. The\nmessage is not applied on-top-of the messages in the passed-in\ntipset.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "*types.Message",
                    "summary": "",
                    "schema": {
                        "examples": [
                            {
                                "Version": 42,
                                "To": "f01234",
                                "From": "f01234",
                                "Nonce": 42,
                                "Value": "0",
                                "GasLimit": 9,
                                "GasFeeCap": "0",
                                "GasPremium": "0",
                                "Method": 1,
                                "Params": "Ynl0ZSBhcnJheQ==",
                                "CID": {
                                    "/": "bafy2bzacebbpdegvr3i4cosewthysg5xkxpqfn2wfcz6mv2hmoktwbdxkax4s"
                                }
                            }
                        ],
                        "additionalProperties": false,
                        "properties": {
                            "From": {
                                "additionalProperties": false,
                                "type": "object"
                            },
                            "GasFeeCap": {
                                "additionalProperties": false,
                                "type": "object"
                            },
                            "GasLimit": {
                                "title": "number",
                                "type": "number"
                            },
                            "GasPremium": {
                                "additionalProperties": false,
                                "type": "object"
                            },
                            "Method": {
                                "title": "number",
                                "type": "number"
                            },
                            "Nonce": {
                                "title": "number",
                                "type": "number"
                            },
                            "Params": {
                                "media": {
                                    "binaryEncoding": "base64"
                                },
                                "type": "string"
                            },
                            "To": {
                                "additionalProperties": false,
                                "type": "object"
                            },
                            "Value": {
                                "additionalProperties": false,
                                "type": "object"
                            },
                            "Version": {
                                "title": "number",
                                "type": "number"
                            }
                        },
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p2",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*InvocResult",
                "description": "*InvocResult",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "MsgCid": {
                                "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                            },
                            "Msg": {
                                "Version": 42,
                                "To": "f01234",
                                "From": "f01234",
                                "Nonce": 42,
                                "Value": "0",
                                "GasLimit": 9,
                                "GasFeeCap": "0",
                                "GasPremium": "0",
                                "Method": 1,
                                "Params": "Ynl0ZSBhcnJheQ==",
                                "CID": {
                                    "/": "bafy2bzacebbpdegvr3i4cosewthysg5xkxpqfn2wfcz6mv2hmoktwbdxkax4s"
                                }
                            },
                            "MsgRct": {
                                "ExitCode": 0,
                                "Return": "Ynl0ZSBhcnJheQ==",
                                "GasUsed": 9
                            },
                            "GasCost": {
                                "Message": {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                "GasUsed": "0",
                                "BaseFeeBurn": "0",
                                "OverEstimationBurn": "0",
                                "MinerPenalty": "0",
                                "MinerTip": "0",
                                "Refund": "0",
                                "TotalCost": "0"
                            },
                            "ExecutionTrace": {
                                "Msg": {
                                    "Version": 42,
                                    "To": "f01234",
                                    "From": "f01234",
                                    "Nonce": 42,
                                    "Value": "0",
                                    "GasLimit": 9,
                                    "GasFeeCap": "0",
                                    "GasPremium": "0",
                                    "Method": 1,
                                    "Params": "Ynl0ZSBhcnJheQ==",
                                    "CID": {
                                        "/": "bafy2bzacebbpdegvr3i4cosewthysg5xkxpqfn2wfcz6mv2hmoktwbdxkax4s"
                                    }
                                },
                                "MsgRct": {
                                    "ExitCode": 0,
                                    "Return": "Ynl0ZSBhcnJheQ==",
                                    "GasUsed": 9
                                },
                                "Error": "string value",
                                "Duration": 60000000000,
                                "GasCharges": null,
                                "Subcalls": null
                            },
                            "Error": "string value",
                            "Duration": 60000000000
                        }
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "Duration": {
                            "title": "number",
                            "type": "number"
                        },
                        "Error": {
                            "type": "string"
                        },
                        "ExecutionTrace": {
                            "additionalProperties": false,
                            "properties": {
                                "Duration": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "Error": {
                                    "type": "string"
                                },
                                "GasCharges": {
                                    "items": {
                                        "additionalProperties": false,
                                        "properties": {
                                            "Name": {
                                                "type": "string"
                                            },
                                            "cg": {
                                                "title": "number",
                                                "type": "number"
                                            },
                                            "ex": {
                                                "additionalProperties": true,
                                                "type": "object"
                                            },
                                            "loc": {
                                                "items": {
                                                    "additionalProperties": false,
                                                    "properties": {
                                                        "File": {
                                                            "type": "string"
                                                        },
                                                        "Function": {
                                                            "type": "string"
                                                        },
                                                        "Line": {
                                                            "title": "number",
                                                            "type": "number"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "type": "array"
                                            },
                                            "sg": {
                                                "title": "number",
                                                "type": "number"
                                            },
                                            "tg": {
                                                "title": "number",
                                                "type": "number"
                                            },
                                            "tt": {
                                                "title": "number",
                                                "type": "number"
                                            },
                                            "vcg": {
                                                "title": "number",
                                                "type": "number"
                                            },
                                            "vsg": {
                                                "title": "number",
                                                "type": "number"
                                            },
                                            "vtg": {
                                                "title": "number",
                                                "type": "number"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "Msg": {
                                    "additionalProperties": false,
                                    "properties": {
                                        "From": {
                                            "additionalProperties": false,
                                            "type": "object"
                                        },
                                        "GasFeeCap": {
                                            "additionalProperties": false,
                                            "type": "object"
                                        },
                                        "GasLimit": {
                                            "title": "number",
                                            "type": "number"
                                        },
                                        "GasPremium": {
                                            "additionalProperties": false,
                                            "type": "object"
                                        },
                                        "Method": {
                                            "title": "number",
                                            "type": "number"
                                        },
                                        "Nonce": {
                                            "title": "number",
                                            "type": "number"
                                        },
                                        "Params": {
                                            "media": {
                                                "binaryEncoding": "base64"
                                            },
                                            "type": "string"
                                        },
                                        "To": {
                                            "additionalProperties": false,
                                            "type": "object"
                                        },
                                        "Value": {
                                            "additionalProperties": false,
                                            "type": "object"
                                        },
                                        "Version": {
                                            "title": "number",
                                            "type": "number"
                                        }
                                    },
                                    "type": "object"
                                },
                                "MsgRct": {
                                    "additionalProperties": false,
                                    "properties": {
                                        "ExitCode": {
                                            "title": "number",
                                            "type": "number"
                                        },
                                        "GasUsed": {
                                            "title": "number",
                                            "type": "number"
                                        },
                                        "Return": {
                                            "media": {
                                                "binaryEncoding": "base64"
                                            },
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "Subcalls": {
                                    "items": {},
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        },
                        "GasCost": {
                            "additionalProperties": false,
                            "properties": {
                                "BaseFeeBurn": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "GasUsed": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "Message": {
                                    "title": "Content Identifier",
                                    "type": "string"
                                },
                                "MinerPenalty": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "MinerTip": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "OverEstimationBurn": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "Refund": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "TotalCost": {
                                    "additionalProperties": false,
                                    "type": "object"
                                }
                            },
                            "type": "object"
                        },
                        "Msg": {
                            "additionalProperties": false,
                            "properties": {
                                "From": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "GasFeeCap": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "GasLimit": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "GasPremium": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "Method": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "Nonce": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "Params": {
                                    "media": {
                                        "binaryEncoding": "base64"
                                    },
                                    "type": "string"
                                },
                                "To": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "Value": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "Version": {
                                    "title": "number",
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        "MsgCid": {
                            "title": "Content Identifier",
                            "type": "string"
                        },
                        "MsgRct": {
                            "additionalProperties": false,
                            "properties": {
                                "ExitCode": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "GasUsed": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "Return": {
                                    "media": {
                                        "binaryEncoding": "base64"
                                    },
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L2252"
            }
        },
        {
            "name": "Filecoin.StateChangedActors",
            "description": "```go\nfunc (s *FullNodeStruct) StateChangedActors(p0 context.Context, p1 cid.Cid, p2 cid.Cid) (map[string]types.Actor, error) {\n\tif s.Internal.StateChangedActors == nil {\n\t\treturn *new(map[string]types.Actor), ErrNotSupported\n\t}\n\treturn s.Internal.StateChangedActors(p0, p1, p2)\n}\n```",
            "summary": "StateChangedActors returns all the actors whose states change between the two given state CIDs\nTODO: Should this take tipset keys instead?\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "cid.Cid",
                    "summary": "",
                    "schema": {
                        "title": "Content Identifier",
                        "description": "Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.",
                        "examples": [
                            {
                                "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                            }
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p2",
                    "description": "cid.Cid",
                    "summary": "",
                    "schema": {
                        "title": "Content Identifier",
                        "description": "Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.",
                        "examples": [
                            {
                                "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                            }
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "map[string]types.Actor",
                "description": "map[string]types.Actor",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "t01236": {
                                "Code": {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                "Head": {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                "Nonce": 42,
                                "Balance": "0"
                            }
                        }
                    ],
                    "patternProperties": {
                        ".*": {
                            "additionalProperties": false,
                            "properties": {
                                "Balance": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "Code": {
                                    "title": "Content Identifier",
                                    "type": "string"
                                },
                                "Head": {
                                    "title": "Content Identifier",
                                    "type": "string"
                                },
                                "Nonce": {
                                    "title": "number",
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L2263"
            }
        },
        {
            "name": "Filecoin.StateCirculatingSupply",
            "description": "```go\nfunc (s *FullNodeStruct) StateCirculatingSupply(p0 context.Context, p1 types.TipSetKey) (abi.TokenAmount, error) {\n\tif s.Internal.StateCirculatingSupply == nil {\n\t\treturn *new(abi.TokenAmount), ErrNotSupported\n\t}\n\treturn s.Internal.StateCirculatingSupply(p0, p1)\n}\n```",
            "summary": "StateCirculatingSupply returns the exact circulating supply of Filecoin at the given tipset.\nThis is not used anywhere in the protocol itself, and is only for external consumption.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "abi.TokenAmount",
                "description": "abi.TokenAmount",
                "summary": "",
                "schema": {
                    "examples": [
                        "0"
                    ],
                    "additionalProperties": false,
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L2274"
            }
        },
        {
            "name": "Filecoin.StateCompute",
            "description": "```go\nfunc (s *FullNodeStruct) StateCompute(p0 context.Context, p1 abi.ChainEpoch, p2 []*types.Message, p3 types.TipSetKey) (*ComputeStateOutput, error) {\n\tif s.Internal.StateCompute == nil {\n\t\treturn nil, ErrNotSupported\n\t}\n\treturn s.Internal.StateCompute(p0, p1, p2, p3)\n}\n```",
            "summary": "StateCompute is a flexible command that applies the given messages on the given tipset.\nThe messages are run as though the VM were at the provided height.\n\nWhen called, StateCompute will:\n- Load the provided tipset, or use the current chain head if not provided\n- Compute the tipset state of the provided tipset on top of the parent state\n  - (note that this step runs before vmheight is applied to the execution)\n  - Execute state upgrade if any were scheduled at the epoch, or in null\n    blocks preceding the tipset\n  - Call the cron actor on null blocks preceding the tipset\n  - For each block in the tipset\n    - Apply messages in blocks in the specified\n    - Award block reward by calling the reward actor\n  - Call the cron actor for the current epoch\n- If the specified vmheight is higher than the current epoch, apply any\n  needed state upgrades to the state\n- Apply the specified messages to the state\n\nThe vmheight parameter sets VM execution epoch, and can be used to simulate\nmessage execution in different network versions. If the specified vmheight\nepoch is higher than the epoch of the specified tipset, any state upgrades\nuntil the vmheight will be executed on the state before applying messages\nspecified by the user.\n\nNote that the initial tipset state computation is not affected by the\nvmheight parameter - only the messages in the `apply` set are\n\nIf the caller wants to simply compute the state, vmheight should be set to\nthe epoch of the specified tipset.\n\nMessages in the `apply` parameter must have the correct nonces, and gas\nvalues set.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "abi.ChainEpoch",
                    "summary": "",
                    "schema": {
                        "title": "number",
                        "description": "Number is a number",
                        "examples": [
                            10101
                        ],
                        "type": [
                            "number"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p2",
                    "description": "[]*types.Message",
                    "summary": "",
                    "schema": {
                        "examples": [
                            null
                        ],
                        "items": [
                            {
                                "additionalProperties": false,
                                "properties": {
                                    "From": {
                                        "additionalProperties": false,
                                        "type": "object"
                                    },
                                    "GasFeeCap": {
                                        "additionalProperties": false,
                                        "type": "object"
                                    },
                                    "GasLimit": {
                                        "title": "number",
                                        "type": "number"
                                    },
                                    "GasPremium": {
                                        "additionalProperties": false,
                                        "type": "object"
                                    },
                                    "Method": {
                                        "title": "number",
                                        "type": "number"
                                    },
                                    "Nonce": {
                                        "title": "number",
                                        "type": "number"
                                    },
                                    "Params": {
                                        "media": {
                                            "binaryEncoding": "base64"
                                        },
                                        "type": "string"
                                    },
                                    "To": {
                                        "additionalProperties": false,
                                        "type": "object"
                                    },
                                    "Value": {
                                        "additionalProperties": false,
                                        "type": "object"
                                    },
                                    "Version": {
                                        "title": "number",
                                        "type": "number"
                                    }
                                },
                                "type": [
                                    "object"
                                ]
                            }
                        ],
                        "type": [
                            "array"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p3",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*ComputeStateOutput",
                "description": "*ComputeStateOutput",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "Root": {
                                "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                            },
                            "Trace": null
                        }
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "Root": {
                            "title": "Content Identifier",
                            "type": "string"
                        },
                        "Trace": {
                            "items": {
                                "additionalProperties": false,
                                "properties": {
                                    "Duration": {
                                        "title": "number",
                                        "type": "number"
                                    },
                                    "Error": {
                                        "type": "string"
                                    },
                                    "ExecutionTrace": {
                                        "additionalProperties": false,
                                        "properties": {
                                            "Duration": {
                                                "title": "number",
                                                "type": "number"
                                            },
                                            "Error": {
                                                "type": "string"
                                            },
                                            "GasCharges": {
                                                "items": {
                                                    "additionalProperties": false,
                                                    "properties": {
                                                        "Name": {
                                                            "type": "string"
                                                        },
                                                        "cg": {
                                                            "title": "number",
                                                            "type": "number"
                                                        },
                                                        "ex": {
                                                            "additionalProperties": true,
                                                            "type": "object"
                                                        },
                                                        "loc": {
                                                            "items": {
                                                                "additionalProperties": false,
                                                                "properties": {
                                                                    "File": {
                                                                        "type": "string"
                                                                    },
                                                                    "Function": {
                                                                        "type": "string"
                                                                    },
                                                                    "Line": {
                                                                        "title": "number",
                                                                        "type": "number"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "sg": {
                                                            "title": "number",
                                                            "type": "number"
                                                        },
                                                        "tg": {
                                                            "title": "number",
                                                            "type": "number"
                                                        },
                                                        "tt": {
                                                            "title": "number",
                                                            "type": "number"
                                                        },
                                                        "vcg": {
                                                            "title": "number",
                                                            "type": "number"
                                                        },
                                                        "vsg": {
                                                            "title": "number",
                                                            "type": "number"
                                                        },
                                                        "vtg": {
                                                            "title": "number",
                                                            "type": "number"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "type": "array"
                                            },
                                            "Msg": {
                                                "additionalProperties": false,
                                                "properties": {
                                                    "From": {
                                                        "additionalProperties": false,
                                                        "type": "object"
                                                    },
                                                    "GasFeeCap": {
                                                        "additionalProperties": false,
                                                        "type": "object"
                                                    },
                                                    "GasLimit": {
                                                        "title": "number",
                                                        "type": "number"
                                                    },
                                                    "GasPremium": {
                                                        "additionalProperties": false,
                                                        "type": "object"
                                                    },
                                                    "Method": {
                                                        "title": "number",
                                                        "type": "number"
                                                    },
                                                    "Nonce": {
                                                        "title": "number",
                                                        "type": "number"
                                                    },
                                                    "Params": {
                                                        "media": {
                                                            "binaryEncoding": "base64"
                                                        },
                                                        "type": "string"
                                                    },
                                                    "To": {
                                                        "additionalProperties": false,
                                                        "type": "object"
                                                    },
                                                    "Value": {
                                                        "additionalProperties": false,
                                                        "type": "object"
                                                    },
                                                    "Version": {
                                                        "title": "number",
                                                        "type": "number"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "MsgRct": {
                                                "additionalProperties": false,
                                                "properties": {
                                                    "ExitCode": {
                                                        "title": "number",
                                                        "type": "number"
                                                    },
                                                    "GasUsed": {
                                                        "title": "number",
                                                        "type": "number"
                                                    },
                                                    "Return": {
                                                        "media": {
                                                            "binaryEncoding": "base64"
                                                        },
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "Subcalls": {
                                                "items": {},
                                                "type": "array"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "GasCost": {
                                        "additionalProperties": false,
                                        "properties": {
                                            "BaseFeeBurn": {
                                                "additionalProperties": false,
                                                "type": "object"
                                            },
                                            "GasUsed": {
                                                "additionalProperties": false,
                                                "type": "object"
                                            },
                                            "Message": {
                                                "title": "Content Identifier",
                                                "type": "string"
                                            },
                                            "MinerPenalty": {
                                                "additionalProperties": false,
                                                "type": "object"
                                            },
                                            "MinerTip": {
                                                "additionalProperties": false,
                                                "type": "object"
                                            },
                                            "OverEstimationBurn": {
                                                "additionalProperties": false,
                                                "type": "object"
                                            },
                                            "Refund": {
                                                "additionalProperties": false,
                                                "type": "object"
                                            },
                                            "TotalCost": {
                                                "additionalProperties": false,
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "Msg": {
                                        "additionalProperties": false,
                                        "properties": {
                                            "From": {
                                                "additionalProperties": false,
                                                "type": "object"
                                            },
                                            "GasFeeCap": {
                                                "additionalProperties": false,
                                                "type": "object"
                                            },
                                            "GasLimit": {
                                                "title": "number",
                                                "type": "number"
                                            },
                                            "GasPremium": {
                                                "additionalProperties": false,
                                                "type": "object"
                                            },
                                            "Method": {
                                                "title": "number",
                                                "type": "number"
                                            },
                                            "Nonce": {
                                                "title": "number",
                                                "type": "number"
                                            },
                                            "Params": {
                                                "media": {
                                                    "binaryEncoding": "base64"
                                                },
                                                "type": "string"
                                            },
                                            "To": {
                                                "additionalProperties": false,
                                                "type": "object"
                                            },
                                            "Value": {
                                                "additionalProperties": false,
                                                "type": "object"
                                            },
                                            "Version": {
                                                "title": "number",
                                                "type": "number"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "MsgCid": {
                                        "title": "Content Identifier",
                                        "type": "string"
                                    },
                                    "MsgRct": {
                                        "additionalProperties": false,
                                        "properties": {
                                            "ExitCode": {
                                                "title": "number",
                                                "type": "number"
                                            },
                                            "GasUsed": {
                                                "title": "number",
                                                "type": "number"
                                            },
                                            "Return": {
                                                "media": {
                                                    "binaryEncoding": "base64"
                                                },
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            },
                            "type": "array"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L2285"
            }
        },
        {
            "name": "Filecoin.StateDealProviderCollateralBounds",
            "description": "```go\nfunc (s *FullNodeStruct) StateDealProviderCollateralBounds(p0 context.Context, p1 abi.PaddedPieceSize, p2 bool, p3 types.TipSetKey) (DealCollateralBounds, error) {\n\tif s.Internal.StateDealProviderCollateralBounds == nil {\n\t\treturn *new(DealCollateralBounds), ErrNotSupported\n\t}\n\treturn s.Internal.StateDealProviderCollateralBounds(p0, p1, p2, p3)\n}\n```",
            "summary": "StateDealProviderCollateralBounds returns the min and max collateral a storage provider\ncan issue. It takes the deal size and verified status as parameters.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "abi.PaddedPieceSize",
                    "summary": "",
                    "schema": {
                        "title": "number",
                        "description": "Number is a number",
                        "examples": [
                            1032
                        ],
                        "type": [
                            "number"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p2",
                    "description": "bool",
                    "summary": "",
                    "schema": {
                        "examples": [
                            true
                        ],
                        "type": [
                            "boolean"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p3",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "DealCollateralBounds",
                "description": "DealCollateralBounds",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "Min": "0",
                            "Max": "0"
                        }
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "Max": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "Min": {
                            "additionalProperties": false,
                            "type": "object"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L2296"
            }
        },
        {
            "name": "Filecoin.StateDecodeParams",
            "description": "```go\nfunc (s *FullNodeStruct) StateDecodeParams(p0 context.Context, p1 address.Address, p2 abi.MethodNum, p3 []byte, p4 types.TipSetKey) (interface{}, error) {\n\tif s.Internal.StateDecodeParams == nil {\n\t\treturn nil, ErrNotSupported\n\t}\n\treturn s.Internal.StateDecodeParams(p0, p1, p2, p3, p4)\n}\n```",
            "summary": "StateDecodeParams attempts to decode the provided params, based on the recipient actor address and method number.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p2",
                    "description": "abi.MethodNum",
                    "summary": "",
                    "schema": {
                        "title": "number",
                        "description": "Number is a number",
                        "examples": [
                            1
                        ],
                        "type": [
                            "number"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p3",
                    "description": "[]byte",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "Ynl0ZSBhcnJheQ=="
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p4",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "interface{}",
                "description": "interface{}",
                "summary": "",
                "schema": {
                    "examples": [
                        {}
                    ],
                    "additionalProperties": true,
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L2307"
            }
        },
        {
            "name": "Filecoin.StateGetActor",
            "description": "```go\nfunc (s *FullNodeStruct) StateGetActor(p0 context.Context, p1 address.Address, p2 types.TipSetKey) (*types.Actor, error) {\n\tif s.Internal.StateGetActor == nil {\n\t\treturn nil, ErrNotSupported\n\t}\n\treturn s.Internal.StateGetActor(p0, p1, p2)\n}\n```",
            "summary": "StateGetActor returns the indicated actor's nonce and balance.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p2",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*types.Actor",
                "description": "*types.Actor",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "Code": {
                                "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                            },
                            "Head": {
                                "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                            },
                            "Nonce": 42,
                            "Balance": "0"
                        }
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "Balance": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "Code": {
                            "title": "Content Identifier",
                            "type": "string"
                        },
                        "Head": {
                            "title": "Content Identifier",
                            "type": "string"
                        },
                        "Nonce": {
                            "title": "number",
                            "type": "number"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L2318"
            }
        },
        {
            "name": "Filecoin.StateListActors",
            "description": "```go\nfunc (s *FullNodeStruct) StateListActors(p0 context.Context, p1 types.TipSetKey) ([]address.Address, error) {\n\tif s.Internal.StateListActors == nil {\n\t\treturn *new([]address.Address), ErrNotSupported\n\t}\n\treturn s.Internal.StateListActors(p0, p1)\n}\n```",
            "summary": "StateListActors returns the addresses of every actor in the state\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "[]address.Address",
                "description": "[]address.Address",
                "summary": "",
                "schema": {
                    "examples": [
                        null
                    ],
                    "items": [
                        {
                            "additionalProperties": false,
                            "type": [
                                "object"
                            ]
                        }
                    ],
                    "type": [
                        "array"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L2329"
            }
        },
        {
            "name": "Filecoin.StateListMessages",
            "description": "```go\nfunc (s *FullNodeStruct) StateListMessages(p0 context.Context, p1 *MessageMatch, p2 types.TipSetKey, p3 abi.ChainEpoch) ([]cid.Cid, error) {\n\tif s.Internal.StateListMessages == nil {\n\t\treturn *new([]cid.Cid), ErrNotSupported\n\t}\n\treturn s.Internal.StateListMessages(p0, p1, p2, p3)\n}\n```",
            "summary": "StateListMessages looks back and returns all messages with a matching to or from address, stopping at the given height.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "*MessageMatch",
                    "summary": "",
                    "schema": {
                        "examples": [
                            {
                                "To": "f01234",
                                "From": "f01234"
                            }
                        ],
                        "additionalProperties": false,
                        "properties": {
                            "From": {
                                "additionalProperties": false,
                                "type": "object"
                            },
                            "To": {
                                "additionalProperties": false,
                                "type": "object"
                            }
                        },
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p2",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p3",
                    "description": "abi.ChainEpoch",
                    "summary": "",
                    "schema": {
                        "title": "number",
                        "description": "Number is a number",
                        "examples": [
                            10101
                        ],
                        "type": [
                            "number"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "[]cid.Cid",
                "description": "[]cid.Cid",
                "summary": "",
                "schema": {
                    "examples": [
                        null
                    ],
                    "items": [
                        {
                            "title": "Content Identifier",
                            "description": "Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.",
                            "type": [
                                "string"
                            ]
                        }
                    ],
                    "type": [
                        "array"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L2340"
            }
        },
        {
            "name": "Filecoin.StateListMiners",
            "description": "```go\nfunc (s *FullNodeStruct) StateListMiners(p0 context.Context, p1 types.TipSetKey) ([]address.Address, error) {\n\tif s.Internal.StateListMiners == nil {\n\t\treturn *new([]address.Address), ErrNotSupported\n\t}\n\treturn s.Internal.StateListMiners(p0, p1)\n}\n```",
            "summary": "StateListMiners returns the addresses of every miner that has claimed power in the Power Actor\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "[]address.Address",
                "description": "[]address.Address",
                "summary": "",
                "schema": {
                    "examples": [
                        null
                    ],
                    "items": [
                        {
                            "additionalProperties": false,
                            "type": [
                                "object"
                            ]
                        }
                    ],
                    "type": [
                        "array"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L2351"
            }
        },
        {
            "name": "Filecoin.StateLookupID",
            "description": "```go\nfunc (s *FullNodeStruct) StateLookupID(p0 context.Context, p1 address.Address, p2 types.TipSetKey) (address.Address, error) {\n\tif s.Internal.StateLookupID == nil {\n\t\treturn *new(address.Address), ErrNotSupported\n\t}\n\treturn s.Internal.StateLookupID(p0, p1, p2)\n}\n```",
            "summary": "StateLookupID retrieves the ID address of the given address\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p2",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "address.Address",
                "description": "address.Address",
                "summary": "",
                "schema": {
                    "examples": [
                        "f01234"
                    ],
                    "additionalProperties": false,
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L2362"
            }
        },
        {
            "name": "Filecoin.StateMarketBalance",
            "description": "```go\nfunc (s *FullNodeStruct) StateMarketBalance(p0 context.Context, p1 address.Address, p2 types.TipSetKey) (MarketBalance, error) {\n\tif s.Internal.StateMarketBalance == nil {\n\t\treturn *new(MarketBalance), ErrNotSupported\n\t}\n\treturn s.Internal.StateMarketBalance(p0, p1, p2)\n}\n```",
            "summary": "StateMarketBalance looks up the Escrow and Locked balances of the given address in the Storage Market\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p2",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "MarketBalance",
                "description": "MarketBalance",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "Escrow": "0",
                            "Locked": "0"
                        }
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "Escrow": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "Locked": {
                            "additionalProperties": false,
                            "type": "object"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L2373"
            }
        },
        {
            "name": "Filecoin.StateMarketDeals",
            "description": "```go\nfunc (s *FullNodeStruct) StateMarketDeals(p0 context.Context, p1 types.TipSetKey) (map[string]MarketDeal, error) {\n\tif s.Internal.StateMarketDeals == nil {\n\t\treturn *new(map[string]MarketDeal), ErrNotSupported\n\t}\n\treturn s.Internal.StateMarketDeals(p0, p1)\n}\n```",
            "summary": "StateMarketDeals returns information about every deal in the Storage Market\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "map[string]MarketDeal",
                "description": "map[string]MarketDeal",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "t026363": {
                                "Proposal": {
                                    "PieceCID": {
                                        "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                    },
                                    "PieceSize": 1032,
                                    "VerifiedDeal": true,
                                    "Client": "f01234",
                                    "Provider": "f01234",
                                    "Label": "string value",
                                    "StartEpoch": 10101,
                                    "EndEpoch": 10101,
                                    "StoragePricePerEpoch": "0",
                                    "ProviderCollateral": "0",
                                    "ClientCollateral": "0"
                                },
                                "State": {
                                    "SectorStartEpoch": 10101,
                                    "LastUpdatedEpoch": 10101,
                                    "SlashEpoch": 10101
                                }
                            }
                        }
                    ],
                    "patternProperties": {
                        ".*": {
                            "additionalProperties": false,
                            "properties": {
                                "Proposal": {
                                    "additionalProperties": false,
                                    "properties": {
                                        "Client": {
                                            "additionalProperties": false,
                                            "type": "object"
                                        },
                                        "ClientCollateral": {
                                            "additionalProperties": false,
                                            "type": "object"
                                        },
                                        "EndEpoch": {
                                            "title": "number",
                                            "type": "number"
                                        },
                                        "Label": {
                                            "type": "string"
                                        },
                                        "PieceCID": {
                                            "title": "Content Identifier",
                                            "type": "string"
                                        },
                                        "PieceSize": {
                                            "title": "number",
                                            "type": "number"
                                        },
                                        "Provider": {
                                            "additionalProperties": false,
                                            "type": "object"
                                        },
                                        "ProviderCollateral": {
                                            "additionalProperties": false,
                                            "type": "object"
                                        },
                                        "StartEpoch": {
                                            "title": "number",
                                            "type": "number"
                                        },
                                        "StoragePricePerEpoch": {
                                            "additionalProperties": false,
                                            "type": "object"
                                        },
                                        "VerifiedDeal": {
                                            "type": "boolean"
                                        }
                                    },
                                    "type": "object"
                                },
                                "State": {
                                    "additionalProperties": false,
                                    "properties": {
                                        "LastUpdatedEpoch": {
                                            "title": "number",
                                            "type": "number"
                                        },
                                        "SectorStartEpoch": {
                                            "title": "number",
                                            "type": "number"
                                        },
                                        "SlashEpoch": {
                                            "title": "number",
                                            "type": "number"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L2384"
            }
        },
        {
            "name": "Filecoin.StateMarketParticipants",
            "description": "```go\nfunc (s *FullNodeStruct) StateMarketParticipants(p0 context.Context, p1 types.TipSetKey) (map[string]MarketBalance, error) {\n\tif s.Internal.StateMarketParticipants == nil {\n\t\treturn *new(map[string]MarketBalance), ErrNotSupported\n\t}\n\treturn s.Internal.StateMarketParticipants(p0, p1)\n}\n```",
            "summary": "StateMarketParticipants returns the Escrow and Locked balances of every participant in the Storage Market\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "map[string]MarketBalance",
                "description": "map[string]MarketBalance",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "t026363": {
                                "Escrow": "0",
                                "Locked": "0"
                            }
                        }
                    ],
                    "patternProperties": {
                        ".*": {
                            "additionalProperties": false,
                            "properties": {
                                "Escrow": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "Locked": {
                                    "additionalProperties": false,
                                    "type": "object"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L2395"
            }
        },
        {
            "name": "Filecoin.StateMarketStorageDeal",
            "description": "```go\nfunc (s *FullNodeStruct) StateMarketStorageDeal(p0 context.Context, p1 abi.DealID, p2 types.TipSetKey) (*MarketDeal, error) {\n\tif s.Internal.StateMarketStorageDeal == nil {\n\t\treturn nil, ErrNotSupported\n\t}\n\treturn s.Internal.StateMarketStorageDeal(p0, p1, p2)\n}\n```",
            "summary": "StateMarketStorageDeal returns information about the indicated deal\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "abi.DealID",
                    "summary": "",
                    "schema": {
                        "title": "number",
                        "description": "Number is a number",
                        "examples": [
                            5432
                        ],
                        "type": [
                            "number"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p2",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*MarketDeal",
                "description": "*MarketDeal",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "Proposal": {
                                "PieceCID": {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                "PieceSize": 1032,
                                "VerifiedDeal": true,
                                "Client": "f01234",
                                "Provider": "f01234",
                                "Label": "string value",
                                "StartEpoch": 10101,
                                "EndEpoch": 10101,
                                "StoragePricePerEpoch": "0",
                                "ProviderCollateral": "0",
                                "ClientCollateral": "0"
                            },
                            "State": {
                                "SectorStartEpoch": 10101,
                                "LastUpdatedEpoch": 10101,
                                "SlashEpoch": 10101
                            }
                        }
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "Proposal": {
                            "additionalProperties": false,
                            "properties": {
                                "Client": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "ClientCollateral": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "EndEpoch": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "Label": {
                                    "type": "string"
                                },
                                "PieceCID": {
                                    "title": "Content Identifier",
                                    "type": "string"
                                },
                                "PieceSize": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "Provider": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "ProviderCollateral": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "StartEpoch": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "StoragePricePerEpoch": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "VerifiedDeal": {
                                    "type": "boolean"
                                }
                            },
                            "type": "object"
                        },
                        "State": {
                            "additionalProperties": false,
                            "properties": {
                                "LastUpdatedEpoch": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "SectorStartEpoch": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "SlashEpoch": {
                                    "title": "number",
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L2406"
            }
        },
        {
            "name": "Filecoin.StateMinerActiveSectors",
            "description": "```go\nfunc (s *FullNodeStruct) StateMinerActiveSectors(p0 context.Context, p1 address.Address, p2 types.TipSetKey) ([]*miner.SectorOnChainInfo, error) {\n\tif s.Internal.StateMinerActiveSectors == nil {\n\t\treturn *new([]*miner.SectorOnChainInfo), ErrNotSupported\n\t}\n\treturn s.Internal.StateMinerActiveSectors(p0, p1, p2)\n}\n```",
            "summary": "StateMinerActiveSectors returns info about sectors that a given miner is actively proving.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p2",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "[]*miner.SectorOnChainInfo",
                "description": "[]*miner.SectorOnChainInfo",
                "summary": "",
                "schema": {
                    "examples": [
                        null
                    ],
                    "items": [
                        {
                            "additionalProperties": false,
                            "properties": {
                                "Activation": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "DealIDs": {
                                    "items": {
                                        "description": "Number is a number",
                                        "title": "number",
                                        "type": "number"
                                    },
                                    "type": "array"
                                },
                                "DealWeight": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "ExpectedDayReward": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "ExpectedStoragePledge": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "Expiration": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "InitialPledge": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "SealProof": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "SealedCID": {
                                    "title": "Content Identifier",
                                    "type": "string"
                                },
                                "SectorNumber": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "VerifiedDealWeight": {
                                    "additionalProperties": false,
                                    "type": "object"
                                }
                            },
                            "type": [
                                "object"
                            ]
                        }
                    ],
                    "type": [
                        "array"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L2417"
            }
        },
        {
            "name": "Filecoin.StateMinerAvailableBalance",
            "description": "```go\nfunc (s *FullNodeStruct) StateMinerAvailableBalance(p0 context.Context, p1 address.Address, p2 types.TipSetKey) (types.BigInt, error) {\n\tif s.Internal.StateMinerAvailableBalance == nil {\n\t\treturn *new(types.BigInt), ErrNotSupported\n\t}\n\treturn s.Internal.StateMinerAvailableBalance(p0, p1, p2)\n}\n```",
            "summary": "StateMinerAvailableBalance returns the portion of a miner's balance that can be withdrawn or spent\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p2",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "types.BigInt",
                "description": "types.BigInt",
                "summary": "",
                "schema": {
                    "examples": [
                        "0"
                    ],
                    "additionalProperties": false,
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L2428"
            }
        },
        {
            "name": "Filecoin.StateMinerDeadlines",
            "description": "```go\nfunc (s *FullNodeStruct) StateMinerDeadlines(p0 context.Context, p1 address.Address, p2 types.TipSetKey) ([]Deadline, error) {\n\tif s.Internal.StateMinerDeadlines == nil {\n\t\treturn *new([]Deadline), ErrNotSupported\n\t}\n\treturn s.Internal.StateMinerDeadlines(p0, p1, p2)\n}\n```",
            "summary": "StateMinerDeadlines returns all the proving deadlines for the given miner\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p2",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "[]Deadline",
                "description": "[]Deadline",
                "summary": "",
                "schema": {
                    "examples": [
                        null
                    ],
                    "items": [
                        {
                            "additionalProperties": false,
                            "properties": {
                                "DisputableProofCount": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "PostSubmissions": {
                                    "additionalProperties": false,
                                    "type": "object"
                                }
                            },
                            "type": [
                                "object"
                            ]
                        }
                    ],
                    "type": [
                        "array"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L2439"
            }
        },
        {
            "name": "Filecoin.StateMinerFaults",
            "description": "```go\nfunc (s *FullNodeStruct) StateMinerFaults(p0 context.Context, p1 address.Address, p2 types.TipSetKey) (bitfield.BitField, error) {\n\tif s.Internal.StateMinerFaults == nil {\n\t\treturn *new(bitfield.BitField), ErrNotSupported\n\t}\n\treturn s.Internal.StateMinerFaults(p0, p1, p2)\n}\n```",
            "summary": "StateMinerFaults returns a bitfield indicating the faulty sectors of the given miner\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p2",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "bitfield.BitField",
                "description": "bitfield.BitField",
                "summary": "",
                "schema": {
                    "examples": [
                        [
                            5,
                            1
                        ]
                    ],
                    "additionalProperties": false,
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L2450"
            }
        },
        {
            "name": "Filecoin.StateMinerInfo",
            "description": "```go\nfunc (s *FullNodeStruct) StateMinerInfo(p0 context.Context, p1 address.Address, p2 types.TipSetKey) (miner.MinerInfo, error) {\n\tif s.Internal.StateMinerInfo == nil {\n\t\treturn *new(miner.MinerInfo), ErrNotSupported\n\t}\n\treturn s.Internal.StateMinerInfo(p0, p1, p2)\n}\n```",
            "summary": "StateMinerInfo returns info about the indicated miner\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p2",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "miner.MinerInfo",
                "description": "miner.MinerInfo",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "Owner": "f01234",
                            "Worker": "f01234",
                            "NewWorker": "f01234",
                            "ControlAddresses": null,
                            "WorkerChangeEpoch": 10101,
                            "PeerId": "12D3KooWGzxzKZYveHXtpG6AsrUJBcWxHBFS2HsEoGTxrMLvKXtf",
                            "Multiaddrs": null,
                            "WindowPoStProofType": 8,
                            "SectorSize": 34359738368,
                            "WindowPoStPartitionSectors": 42,
                            "ConsensusFaultElapsed": 10101
                        }
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "ConsensusFaultElapsed": {
                            "title": "number",
                            "type": "number"
                        },
                        "ControlAddresses": {
                            "items": {
                                "additionalProperties": false,
                                "type": "object"
                            },
                            "type": "array"
                        },
                        "Multiaddrs": {
                            "items": {
                                "media": {
                                    "binaryEncoding": "base64"
                                },
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "NewWorker": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "Owner": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "PeerId": {
                            "type": "string"
                        },
                        "SectorSize": {
                            "title": "number",
                            "type": "number"
                        },
                        "WindowPoStPartitionSectors": {
                            "title": "number",
                            "type": "number"
                        },
                        "WindowPoStProofType": {
                            "title": "number",
                            "type": "number"
                        },
                        "Worker": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "WorkerChangeEpoch": {
                            "title": "number",
                            "type": "number"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L2461"
            }
        },
        {
            "name": "Filecoin.StateMinerInitialPledgeCollateral",
            "description": "```go\nfunc (s *FullNodeStruct) StateMinerInitialPledgeCollateral(p0 context.Context, p1 address.Address, p2 miner.SectorPreCommitInfo, p3 types.TipSetKey) (types.BigInt, error) {\n\tif s.Internal.StateMinerInitialPledgeCollateral == nil {\n\t\treturn *new(types.BigInt), ErrNotSupported\n\t}\n\treturn s.Internal.StateMinerInitialPledgeCollateral(p0, p1, p2, p3)\n}\n```",
            "summary": "StateMinerInitialPledgeCollateral returns the initial pledge collateral for the specified miner's sector\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p2",
                    "description": "miner.SectorPreCommitInfo",
                    "summary": "",
                    "schema": {
                        "examples": [
                            {
                                "SealProof": 8,
                                "SectorNumber": 9,
                                "SealedCID": {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                "SealRandEpoch": 10101,
                                "DealIDs": null,
                                "Expiration": 10101,
                                "ReplaceCapacity": true,
                                "ReplaceSectorDeadline": 42,
                                "ReplaceSectorPartition": 42,
                                "ReplaceSectorNumber": 9
                            }
                        ],
                        "additionalProperties": false,
                        "properties": {
                            "DealIDs": {
                                "items": {
                                    "description": "Number is a number",
                                    "title": "number",
                                    "type": "number"
                                },
                                "type": "array"
                            },
                            "Expiration": {
                                "title": "number",
                                "type": "number"
                            },
                            "ReplaceCapacity": {
                                "type": "boolean"
                            },
                            "ReplaceSectorDeadline": {
                                "title": "number",
                                "type": "number"
                            },
                            "ReplaceSectorNumber": {
                                "title": "number",
                                "type": "number"
                            },
                            "ReplaceSectorPartition": {
                                "title": "number",
                                "type": "number"
                            },
                            "SealProof": {
                                "title": "number",
                                "type": "number"
                            },
                            "SealRandEpoch": {
                                "title": "number",
                                "type": "number"
                            },
                            "SealedCID": {
                                "title": "Content Identifier",
                                "type": "string"
                            },
                            "SectorNumber": {
                                "title": "number",
                                "type": "number"
                            }
                        },
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p3",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "types.BigInt",
                "description": "types.BigInt",
                "summary": "",
                "schema": {
                    "examples": [
                        "0"
                    ],
                    "additionalProperties": false,
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L2472"
            }
        },
        {
            "name": "Filecoin.StateMinerPartitions",
            "description": "```go\nfunc (s *FullNodeStruct) StateMinerPartitions(p0 context.Context, p1 address.Address, p2 uint64, p3 types.TipSetKey) ([]Partition, error) {\n\tif s.Internal.StateMinerPartitions == nil {\n\t\treturn *new([]Partition), ErrNotSupported\n\t}\n\treturn s.Internal.StateMinerPartitions(p0, p1, p2, p3)\n}\n```",
            "summary": "StateMinerPartitions returns all partitions in the specified deadline\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p2",
                    "description": "uint64",
                    "summary": "",
                    "schema": {
                        "title": "number",
                        "description": "Number is a number",
                        "examples": [
                            42
                        ],
                        "type": [
                            "number"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p3",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "[]Partition",
                "description": "[]Partition",
                "summary": "",
                "schema": {
                    "examples": [
                        null
                    ],
                    "items": [
                        {
                            "additionalProperties": false,
                            "properties": {
                                "ActiveSectors": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "AllSectors": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "FaultySectors": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "LiveSectors": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "RecoveringSectors": {
                                    "additionalProperties": false,
                                    "type": "object"
                                }
                            },
                            "type": [
                                "object"
                            ]
                        }
                    ],
                    "type": [
                        "array"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L2483"
            }
        },
        {
            "name": "Filecoin.StateMinerPower",
            "description": "```go\nfunc (s *FullNodeStruct) StateMinerPower(p0 context.Context, p1 address.Address, p2 types.TipSetKey) (*MinerPower, error) {\n\tif s.Internal.StateMinerPower == nil {\n\t\treturn nil, ErrNotSupported\n\t}\n\treturn s.Internal.StateMinerPower(p0, p1, p2)\n}\n```",
            "summary": "StateMinerPower returns the power of the indicated miner\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p2",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*MinerPower",
                "description": "*MinerPower",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "MinerPower": {
                                "RawBytePower": "0",
                                "QualityAdjPower": "0"
                            },
                            "TotalPower": {
                                "RawBytePower": "0",
                                "QualityAdjPower": "0"
                            },
                            "HasMinPower": true
                        }
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "HasMinPower": {
                            "type": "boolean"
                        },
                        "MinerPower": {
                            "additionalProperties": false,
                            "properties": {
                                "QualityAdjPower": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "RawBytePower": {
                                    "additionalProperties": false,
                                    "type": "object"
                                }
                            },
                            "type": "object"
                        },
                        "TotalPower": {
                            "additionalProperties": false,
                            "properties": {
                                "QualityAdjPower": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "RawBytePower": {
                                    "additionalProperties": false,
                                    "type": "object"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L2494"
            }
        },
        {
            "name": "Filecoin.StateMinerPreCommitDepositForPower",
            "description": "```go\nfunc (s *FullNodeStruct) StateMinerPreCommitDepositForPower(p0 context.Context, p1 address.Address, p2 miner.SectorPreCommitInfo, p3 types.TipSetKey) (types.BigInt, error) {\n\tif s.Internal.StateMinerPreCommitDepositForPower == nil {\n\t\treturn *new(types.BigInt), ErrNotSupported\n\t}\n\treturn s.Internal.StateMinerPreCommitDepositForPower(p0, p1, p2, p3)\n}\n```",
            "summary": "StateMinerInitialPledgeCollateral returns the precommit deposit for the specified miner's sector\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p2",
                    "description": "miner.SectorPreCommitInfo",
                    "summary": "",
                    "schema": {
                        "examples": [
                            {
                                "SealProof": 8,
                                "SectorNumber": 9,
                                "SealedCID": {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                "SealRandEpoch": 10101,
                                "DealIDs": null,
                                "Expiration": 10101,
                                "ReplaceCapacity": true,
                                "ReplaceSectorDeadline": 42,
                                "ReplaceSectorPartition": 42,
                                "ReplaceSectorNumber": 9
                            }
                        ],
                        "additionalProperties": false,
                        "properties": {
                            "DealIDs": {
                                "items": {
                                    "description": "Number is a number",
                                    "title": "number",
                                    "type": "number"
                                },
                                "type": "array"
                            },
                            "Expiration": {
                                "title": "number",
                                "type": "number"
                            },
                            "ReplaceCapacity": {
                                "type": "boolean"
                            },
                            "ReplaceSectorDeadline": {
                                "title": "number",
                                "type": "number"
                            },
                            "ReplaceSectorNumber": {
                                "title": "number",
                                "type": "number"
                            },
                            "ReplaceSectorPartition": {
                                "title": "number",
                                "type": "number"
                            },
                            "SealProof": {
                                "title": "number",
                                "type": "number"
                            },
                            "SealRandEpoch": {
                                "title": "number",
                                "type": "number"
                            },
                            "SealedCID": {
                                "title": "Content Identifier",
                                "type": "string"
                            },
                            "SectorNumber": {
                                "title": "number",
                                "type": "number"
                            }
                        },
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p3",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "types.BigInt",
                "description": "types.BigInt",
                "summary": "",
                "schema": {
                    "examples": [
                        "0"
                    ],
                    "additionalProperties": false,
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L2505"
            }
        },
        {
            "name": "Filecoin.StateMinerProvingDeadline",
            "description": "```go\nfunc (s *FullNodeStruct) StateMinerProvingDeadline(p0 context.Context, p1 address.Address, p2 types.TipSetKey) (*dline.Info, error) {\n\tif s.Internal.StateMinerProvingDeadline == nil {\n\t\treturn nil, ErrNotSupported\n\t}\n\treturn s.Internal.StateMinerProvingDeadline(p0, p1, p2)\n}\n```",
            "summary": "StateMinerProvingDeadline calculates the deadline at some epoch for a proving period\nand returns the deadline-related calculations.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p2",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*dline.Info",
                "description": "*dline.Info",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "CurrentEpoch": 10101,
                            "PeriodStart": 10101,
                            "Index": 42,
                            "Open": 10101,
                            "Close": 10101,
                            "Challenge": 10101,
                            "FaultCutoff": 10101,
                            "WPoStPeriodDeadlines": 42,
                            "WPoStProvingPeriod": 10101,
                            "WPoStChallengeWindow": 10101,
                            "WPoStChallengeLookback": 10101,
                            "FaultDeclarationCutoff": 10101
                        }
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "Challenge": {
                            "title": "number",
                            "type": "number"
                        },
                        "Close": {
                            "title": "number",
                            "type": "number"
                        },
                        "CurrentEpoch": {
                            "title": "number",
                            "type": "number"
                        },
                        "FaultCutoff": {
                            "title": "number",
                            "type": "number"
                        },
                        "FaultDeclarationCutoff": {
                            "title": "number",
                            "type": "number"
                        },
                        "Index": {
                            "title": "number",
                            "type": "number"
                        },
                        "Open": {
                            "title": "number",
                            "type": "number"
                        },
                        "PeriodStart": {
                            "title": "number",
                            "type": "number"
                        },
                        "WPoStChallengeLookback": {
                            "title": "number",
                            "type": "number"
                        },
                        "WPoStChallengeWindow": {
                            "title": "number",
                            "type": "number"
                        },
                        "WPoStPeriodDeadlines": {
                            "title": "number",
                            "type": "number"
                        },
                        "WPoStProvingPeriod": {
                            "title": "number",
                            "type": "number"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L2516"
            }
        },
        {
            "name": "Filecoin.StateMinerRecoveries",
            "description": "```go\nfunc (s *FullNodeStruct) StateMinerRecoveries(p0 context.Context, p1 address.Address, p2 types.TipSetKey) (bitfield.BitField, error) {\n\tif s.Internal.StateMinerRecoveries == nil {\n\t\treturn *new(bitfield.BitField), ErrNotSupported\n\t}\n\treturn s.Internal.StateMinerRecoveries(p0, p1, p2)\n}\n```",
            "summary": "StateMinerRecoveries returns a bitfield indicating the recovering sectors of the given miner\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p2",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "bitfield.BitField",
                "description": "bitfield.BitField",
                "summary": "",
                "schema": {
                    "examples": [
                        [
                            5,
                            1
                        ]
                    ],
                    "additionalProperties": false,
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L2527"
            }
        },
        {
            "name": "Filecoin.StateMinerSectorAllocated",
            "description": "```go\nfunc (s *FullNodeStruct) StateMinerSectorAllocated(p0 context.Context, p1 address.Address, p2 abi.SectorNumber, p3 types.TipSetKey) (bool, error) {\n\tif s.Internal.StateMinerSectorAllocated == nil {\n\t\treturn false, ErrNotSupported\n\t}\n\treturn s.Internal.StateMinerSectorAllocated(p0, p1, p2, p3)\n}\n```",
            "summary": "StateMinerSectorAllocated checks if a sector is allocated\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p2",
                    "description": "abi.SectorNumber",
                    "summary": "",
                    "schema": {
                        "title": "number",
                        "description": "Number is a number",
                        "examples": [
                            9
                        ],
                        "type": [
                            "number"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p3",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "bool",
                "description": "bool",
                "summary": "",
                "schema": {
                    "examples": [
                        true
                    ],
                    "type": [
                        "boolean"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L2538"
            }
        },
        {
            "name": "Filecoin.StateMinerSectorCount",
            "description": "```go\nfunc (s *FullNodeStruct) StateMinerSectorCount(p0 context.Context, p1 address.Address, p2 types.TipSetKey) (MinerSectors, error) {\n\tif s.Internal.StateMinerSectorCount == nil {\n\t\treturn *new(MinerSectors), ErrNotSupported\n\t}\n\treturn s.Internal.StateMinerSectorCount(p0, p1, p2)\n}\n```",
            "summary": "StateMinerSectorCount returns the number of sectors in a miner's sector set and proving set\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p2",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "MinerSectors",
                "description": "MinerSectors",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "Live": 42,
                            "Active": 42,
                            "Faulty": 42
                        }
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "Active": {
                            "title": "number",
                            "type": "number"
                        },
                        "Faulty": {
                            "title": "number",
                            "type": "number"
                        },
                        "Live": {
                            "title": "number",
                            "type": "number"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L2549"
            }
        },
        {
            "name": "Filecoin.StateMinerSectors",
            "description": "```go\nfunc (s *FullNodeStruct) StateMinerSectors(p0 context.Context, p1 address.Address, p2 *bitfield.BitField, p3 types.TipSetKey) ([]*miner.SectorOnChainInfo, error) {\n\tif s.Internal.StateMinerSectors == nil {\n\t\treturn *new([]*miner.SectorOnChainInfo), ErrNotSupported\n\t}\n\treturn s.Internal.StateMinerSectors(p0, p1, p2, p3)\n}\n```",
            "summary": "StateMinerSectors returns info about the given miner's sectors. If the filter bitfield is nil, all sectors are included.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p2",
                    "description": "*bitfield.BitField",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                0
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p3",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "[]*miner.SectorOnChainInfo",
                "description": "[]*miner.SectorOnChainInfo",
                "summary": "",
                "schema": {
                    "examples": [
                        null
                    ],
                    "items": [
                        {
                            "additionalProperties": false,
                            "properties": {
                                "Activation": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "DealIDs": {
                                    "items": {
                                        "description": "Number is a number",
                                        "title": "number",
                                        "type": "number"
                                    },
                                    "type": "array"
                                },
                                "DealWeight": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "ExpectedDayReward": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "ExpectedStoragePledge": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "Expiration": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "InitialPledge": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "SealProof": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "SealedCID": {
                                    "title": "Content Identifier",
                                    "type": "string"
                                },
                                "SectorNumber": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "VerifiedDealWeight": {
                                    "additionalProperties": false,
                                    "type": "object"
                                }
                            },
                            "type": [
                                "object"
                            ]
                        }
                    ],
                    "type": [
                        "array"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L2560"
            }
        },
        {
            "name": "Filecoin.StateNetworkName",
            "description": "```go\nfunc (s *FullNodeStruct) StateNetworkName(p0 context.Context) (dtypes.NetworkName, error) {\n\tif s.Internal.StateNetworkName == nil {\n\t\treturn *new(dtypes.NetworkName), ErrNotSupported\n\t}\n\treturn s.Internal.StateNetworkName(p0)\n}\n```",
            "summary": "StateNetworkName returns the name of the network the node is synced to\n",
            "paramStructure": "by-position",
            "params": [],
            "result": {
                "name": "dtypes.NetworkName",
                "description": "dtypes.NetworkName",
                "summary": "",
                "schema": {
                    "examples": [
                        "lotus"
                    ],
                    "type": [
                        "string"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L2571"
            }
        },
        {
            "name": "Filecoin.StateNetworkVersion",
            "description": "```go\nfunc (s *FullNodeStruct) StateNetworkVersion(p0 context.Context, p1 types.TipSetKey) (apitypes.NetworkVersion, error) {\n\tif s.Internal.StateNetworkVersion == nil {\n\t\treturn *new(apitypes.NetworkVersion), ErrNotSupported\n\t}\n\treturn s.Internal.StateNetworkVersion(p0, p1)\n}\n```",
            "summary": "StateNetworkVersion returns the network version at the given tipset\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "apitypes.NetworkVersion",
                "description": "apitypes.NetworkVersion",
                "summary": "",
                "schema": {
                    "title": "number",
                    "description": "Number is a number",
                    "examples": [
                        1300
                    ],
                    "type": [
                        "number"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L2582"
            }
        },
        {
            "name": "Filecoin.StateReadState",
            "description": "```go\nfunc (s *FullNodeStruct) StateReadState(p0 context.Context, p1 address.Address, p2 types.TipSetKey) (*ActorState, error) {\n\tif s.Internal.StateReadState == nil {\n\t\treturn nil, ErrNotSupported\n\t}\n\treturn s.Internal.StateReadState(p0, p1, p2)\n}\n```",
            "summary": "StateReadState returns the indicated actor's state.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p2",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*ActorState",
                "description": "*ActorState",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "Balance": "0",
                            "Code": {
                                "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                            },
                            "State": {}
                        }
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "Balance": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "Code": {
                            "title": "Content Identifier",
                            "type": "string"
                        },
                        "State": {
                            "additionalProperties": true,
                            "type": "object"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L2593"
            }
        },
        {
            "name": "Filecoin.StateReplay",
            "description": "```go\nfunc (s *FullNodeStruct) StateReplay(p0 context.Context, p1 types.TipSetKey, p2 cid.Cid) (*InvocResult, error) {\n\tif s.Internal.StateReplay == nil {\n\t\treturn nil, ErrNotSupported\n\t}\n\treturn s.Internal.StateReplay(p0, p1, p2)\n}\n```",
            "summary": "StateReplay replays a given message, assuming it was included in a block in the specified tipset.\n\nIf a tipset key is provided, and a replacing message is found on chain,\nthe method will return an error saying that the message wasn't found\n\nIf no tipset key is provided, the appropriate tipset is looked up, and if\nthe message was gas-repriced, the on-chain message will be replayed - in\nthat case the returned InvocResult.MsgCid will not match the Cid param\n\nIf the caller wants to ensure that exactly the requested message was executed,\nthey MUST check that InvocResult.MsgCid is equal to the provided Cid.\nWithout this check both the requested and original message may appear as\nsuccessfully executed on-chain, which may look like a double-spend.\n\nA replacing message is a message with a different CID, any of Gas values, and\ndifferent signature, but with all other parameters matching (source/destination,\nnonce, params, etc.)\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p2",
                    "description": "cid.Cid",
                    "summary": "",
                    "schema": {
                        "title": "Content Identifier",
                        "description": "Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.",
                        "examples": [
                            {
                                "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                            }
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*InvocResult",
                "description": "*InvocResult",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "MsgCid": {
                                "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                            },
                            "Msg": {
                                "Version": 42,
                                "To": "f01234",
                                "From": "f01234",
                                "Nonce": 42,
                                "Value": "0",
                                "GasLimit": 9,
                                "GasFeeCap": "0",
                                "GasPremium": "0",
                                "Method": 1,
                                "Params": "Ynl0ZSBhcnJheQ==",
                                "CID": {
                                    "/": "bafy2bzacebbpdegvr3i4cosewthysg5xkxpqfn2wfcz6mv2hmoktwbdxkax4s"
                                }
                            },
                            "MsgRct": {
                                "ExitCode": 0,
                                "Return": "Ynl0ZSBhcnJheQ==",
                                "GasUsed": 9
                            },
                            "GasCost": {
                                "Message": {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                "GasUsed": "0",
                                "BaseFeeBurn": "0",
                                "OverEstimationBurn": "0",
                                "MinerPenalty": "0",
                                "MinerTip": "0",
                                "Refund": "0",
                                "TotalCost": "0"
                            },
                            "ExecutionTrace": {
                                "Msg": {
                                    "Version": 42,
                                    "To": "f01234",
                                    "From": "f01234",
                                    "Nonce": 42,
                                    "Value": "0",
                                    "GasLimit": 9,
                                    "GasFeeCap": "0",
                                    "GasPremium": "0",
                                    "Method": 1,
                                    "Params": "Ynl0ZSBhcnJheQ==",
                                    "CID": {
                                        "/": "bafy2bzacebbpdegvr3i4cosewthysg5xkxpqfn2wfcz6mv2hmoktwbdxkax4s"
                                    }
                                },
                                "MsgRct": {
                                    "ExitCode": 0,
                                    "Return": "Ynl0ZSBhcnJheQ==",
                                    "GasUsed": 9
                                },
                                "Error": "string value",
                                "Duration": 60000000000,
                                "GasCharges": null,
                                "Subcalls": null
                            },
                            "Error": "string value",
                            "Duration": 60000000000
                        }
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "Duration": {
                            "title": "number",
                            "type": "number"
                        },
                        "Error": {
                            "type": "string"
                        },
                        "ExecutionTrace": {
                            "additionalProperties": false,
                            "properties": {
                                "Duration": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "Error": {
                                    "type": "string"
                                },
                                "GasCharges": {
                                    "items": {
                                        "additionalProperties": false,
                                        "properties": {
                                            "Name": {
                                                "type": "string"
                                            },
                                            "cg": {
                                                "title": "number",
                                                "type": "number"
                                            },
                                            "ex": {
                                                "additionalProperties": true,
                                                "type": "object"
                                            },
                                            "loc": {
                                                "items": {
                                                    "additionalProperties": false,
                                                    "properties": {
                                                        "File": {
                                                            "type": "string"
                                                        },
                                                        "Function": {
                                                            "type": "string"
                                                        },
                                                        "Line": {
                                                            "title": "number",
                                                            "type": "number"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "type": "array"
                                            },
                                            "sg": {
                                                "title": "number",
                                                "type": "number"
                                            },
                                            "tg": {
                                                "title": "number",
                                                "type": "number"
                                            },
                                            "tt": {
                                                "title": "number",
                                                "type": "number"
                                            },
                                            "vcg": {
                                                "title": "number",
                                                "type": "number"
                                            },
                                            "vsg": {
                                                "title": "number",
                                                "type": "number"
                                            },
                                            "vtg": {
                                                "title": "number",
                                                "type": "number"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "Msg": {
                                    "additionalProperties": false,
                                    "properties": {
                                        "From": {
                                            "additionalProperties": false,
                                            "type": "object"
                                        },
                                        "GasFeeCap": {
                                            "additionalProperties": false,
                                            "type": "object"
                                        },
                                        "GasLimit": {
                                            "title": "number",
                                            "type": "number"
                                        },
                                        "GasPremium": {
                                            "additionalProperties": false,
                                            "type": "object"
                                        },
                                        "Method": {
                                            "title": "number",
                                            "type": "number"
                                        },
                                        "Nonce": {
                                            "title": "number",
                                            "type": "number"
                                        },
                                        "Params": {
                                            "media": {
                                                "binaryEncoding": "base64"
                                            },
                                            "type": "string"
                                        },
                                        "To": {
                                            "additionalProperties": false,
                                            "type": "object"
                                        },
                                        "Value": {
                                            "additionalProperties": false,
                                            "type": "object"
                                        },
                                        "Version": {
                                            "title": "number",
                                            "type": "number"
                                        }
                                    },
                                    "type": "object"
                                },
                                "MsgRct": {
                                    "additionalProperties": false,
                                    "properties": {
                                        "ExitCode": {
                                            "title": "number",
                                            "type": "number"
                                        },
                                        "GasUsed": {
                                            "title": "number",
                                            "type": "number"
                                        },
                                        "Return": {
                                            "media": {
                                                "binaryEncoding": "base64"
                                            },
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "Subcalls": {
                                    "items": {},
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        },
                        "GasCost": {
                            "additionalProperties": false,
                            "properties": {
                                "BaseFeeBurn": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "GasUsed": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "Message": {
                                    "title": "Content Identifier",
                                    "type": "string"
                                },
                                "MinerPenalty": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "MinerTip": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "OverEstimationBurn": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "Refund": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "TotalCost": {
                                    "additionalProperties": false,
                                    "type": "object"
                                }
                            },
                            "type": "object"
                        },
                        "Msg": {
                            "additionalProperties": false,
                            "properties": {
                                "From": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "GasFeeCap": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "GasLimit": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "GasPremium": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "Method": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "Nonce": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "Params": {
                                    "media": {
                                        "binaryEncoding": "base64"
                                    },
                                    "type": "string"
                                },
                                "To": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "Value": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "Version": {
                                    "title": "number",
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        "MsgCid": {
                            "title": "Content Identifier",
                            "type": "string"
                        },
                        "MsgRct": {
                            "additionalProperties": false,
                            "properties": {
                                "ExitCode": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "GasUsed": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "Return": {
                                    "media": {
                                        "binaryEncoding": "base64"
                                    },
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L2604"
            }
        },
        {
            "name": "Filecoin.StateSearchMsg",
            "description": "```go\nfunc (s *FullNodeStruct) StateSearchMsg(p0 context.Context, p1 types.TipSetKey, p2 cid.Cid, p3 abi.ChainEpoch, p4 bool) (*MsgLookup, error) {\n\tif s.Internal.StateSearchMsg == nil {\n\t\treturn nil, ErrNotSupported\n\t}\n\treturn s.Internal.StateSearchMsg(p0, p1, p2, p3, p4)\n}\n```",
            "summary": "StateSearchMsg looks back up to limit epochs in the chain for a message, and returns its receipt and the tipset where it was executed\n\nNOTE: If a replacing message is found on chain, this method will return\na MsgLookup for the replacing message - the MsgLookup.Message will be a different\nCID than the one provided in the 'cid' param, MsgLookup.Receipt will contain the\nresult of the execution of the replacing message.\n\nIf the caller wants to ensure that exactly the requested message was executed,\nthey must check that MsgLookup.Message is equal to the provided 'cid', or set the\n`allowReplaced` parameter to false. Without this check, and with `allowReplaced`\nset to true, both the requested and original message may appear as\nsuccessfully executed on-chain, which may look like a double-spend.\n\nA replacing message is a message with a different CID, any of Gas values, and\ndifferent signature, but with all other parameters matching (source/destination,\nnonce, params, etc.)\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p2",
                    "description": "cid.Cid",
                    "summary": "",
                    "schema": {
                        "title": "Content Identifier",
                        "description": "Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.",
                        "examples": [
                            {
                                "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                            }
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p3",
                    "description": "abi.ChainEpoch",
                    "summary": "",
                    "schema": {
                        "title": "number",
                        "description": "Number is a number",
                        "examples": [
                            10101
                        ],
                        "type": [
                            "number"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p4",
                    "description": "bool",
                    "summary": "",
                    "schema": {
                        "examples": [
                            true
                        ],
                        "type": [
                            "boolean"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*MsgLookup",
                "description": "*MsgLookup",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "Message": {
                                "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                            },
                            "Receipt": {
                                "ExitCode": 0,
                                "Return": "Ynl0ZSBhcnJheQ==",
                                "GasUsed": 9
                            },
                            "ReturnDec": {},
                            "TipSet": [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ],
                            "Height": 10101
                        }
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "Height": {
                            "title": "number",
                            "type": "number"
                        },
                        "Message": {
                            "title": "Content Identifier",
                            "type": "string"
                        },
                        "Receipt": {
                            "additionalProperties": false,
                            "properties": {
                                "ExitCode": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "GasUsed": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "Return": {
                                    "media": {
                                        "binaryEncoding": "base64"
                                    },
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "ReturnDec": {
                            "additionalProperties": true,
                            "type": "object"
                        },
                        "TipSet": {
                            "additionalProperties": false,
                            "type": "object"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L2615"
            }
        },
        {
            "name": "Filecoin.StateSectorExpiration",
            "description": "```go\nfunc (s *FullNodeStruct) StateSectorExpiration(p0 context.Context, p1 address.Address, p2 abi.SectorNumber, p3 types.TipSetKey) (*miner.SectorExpiration, error) {\n\tif s.Internal.StateSectorExpiration == nil {\n\t\treturn nil, ErrNotSupported\n\t}\n\treturn s.Internal.StateSectorExpiration(p0, p1, p2, p3)\n}\n```",
            "summary": "StateSectorExpiration returns epoch at which given sector will expire\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p2",
                    "description": "abi.SectorNumber",
                    "summary": "",
                    "schema": {
                        "title": "number",
                        "description": "Number is a number",
                        "examples": [
                            9
                        ],
                        "type": [
                            "number"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p3",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*miner.SectorExpiration",
                "description": "*miner.SectorExpiration",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "OnTime": 10101,
                            "Early": 10101
                        }
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "Early": {
                            "title": "number",
                            "type": "number"
                        },
                        "OnTime": {
                            "title": "number",
                            "type": "number"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L2626"
            }
        },
        {
            "name": "Filecoin.StateSectorGetInfo",
            "description": "```go\nfunc (s *FullNodeStruct) StateSectorGetInfo(p0 context.Context, p1 address.Address, p2 abi.SectorNumber, p3 types.TipSetKey) (*miner.SectorOnChainInfo, error) {\n\tif s.Internal.StateSectorGetInfo == nil {\n\t\treturn nil, ErrNotSupported\n\t}\n\treturn s.Internal.StateSectorGetInfo(p0, p1, p2, p3)\n}\n```",
            "summary": "StateSectorGetInfo returns the on-chain info for the specified miner's sector. Returns null in case the sector info isn't found\nNOTE: returned info.Expiration may not be accurate in some cases, use StateSectorExpiration to get accurate\nexpiration epoch\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p2",
                    "description": "abi.SectorNumber",
                    "summary": "",
                    "schema": {
                        "title": "number",
                        "description": "Number is a number",
                        "examples": [
                            9
                        ],
                        "type": [
                            "number"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p3",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*miner.SectorOnChainInfo",
                "description": "*miner.SectorOnChainInfo",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "SectorNumber": 9,
                            "SealProof": 8,
                            "SealedCID": {
                                "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                            },
                            "DealIDs": null,
                            "Activation": 10101,
                            "Expiration": 10101,
                            "DealWeight": "0",
                            "VerifiedDealWeight": "0",
                            "InitialPledge": "0",
                            "ExpectedDayReward": "0",
                            "ExpectedStoragePledge": "0"
                        }
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "Activation": {
                            "title": "number",
                            "type": "number"
                        },
                        "DealIDs": {
                            "items": {
                                "description": "Number is a number",
                                "title": "number",
                                "type": "number"
                            },
                            "type": "array"
                        },
                        "DealWeight": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "ExpectedDayReward": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "ExpectedStoragePledge": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "Expiration": {
                            "title": "number",
                            "type": "number"
                        },
                        "InitialPledge": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "SealProof": {
                            "title": "number",
                            "type": "number"
                        },
                        "SealedCID": {
                            "title": "Content Identifier",
                            "type": "string"
                        },
                        "SectorNumber": {
                            "title": "number",
                            "type": "number"
                        },
                        "VerifiedDealWeight": {
                            "additionalProperties": false,
                            "type": "object"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L2637"
            }
        },
        {
            "name": "Filecoin.StateSectorPartition",
            "description": "```go\nfunc (s *FullNodeStruct) StateSectorPartition(p0 context.Context, p1 address.Address, p2 abi.SectorNumber, p3 types.TipSetKey) (*miner.SectorLocation, error) {\n\tif s.Internal.StateSectorPartition == nil {\n\t\treturn nil, ErrNotSupported\n\t}\n\treturn s.Internal.StateSectorPartition(p0, p1, p2, p3)\n}\n```",
            "summary": "StateSectorPartition finds deadline/partition with the specified sector\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p2",
                    "description": "abi.SectorNumber",
                    "summary": "",
                    "schema": {
                        "title": "number",
                        "description": "Number is a number",
                        "examples": [
                            9
                        ],
                        "type": [
                            "number"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p3",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*miner.SectorLocation",
                "description": "*miner.SectorLocation",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "Deadline": 42,
                            "Partition": 42
                        }
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "Deadline": {
                            "title": "number",
                            "type": "number"
                        },
                        "Partition": {
                            "title": "number",
                            "type": "number"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L2648"
            }
        },
        {
            "name": "Filecoin.StateSectorPreCommitInfo",
            "description": "```go\nfunc (s *FullNodeStruct) StateSectorPreCommitInfo(p0 context.Context, p1 address.Address, p2 abi.SectorNumber, p3 types.TipSetKey) (miner.SectorPreCommitOnChainInfo, error) {\n\tif s.Internal.StateSectorPreCommitInfo == nil {\n\t\treturn *new(miner.SectorPreCommitOnChainInfo), ErrNotSupported\n\t}\n\treturn s.Internal.StateSectorPreCommitInfo(p0, p1, p2, p3)\n}\n```",
            "summary": "StateSectorPreCommitInfo returns the PreCommit info for the specified miner's sector\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p2",
                    "description": "abi.SectorNumber",
                    "summary": "",
                    "schema": {
                        "title": "number",
                        "description": "Number is a number",
                        "examples": [
                            9
                        ],
                        "type": [
                            "number"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p3",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "miner.SectorPreCommitOnChainInfo",
                "description": "miner.SectorPreCommitOnChainInfo",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "Info": {
                                "SealProof": 8,
                                "SectorNumber": 9,
                                "SealedCID": {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                "SealRandEpoch": 10101,
                                "DealIDs": null,
                                "Expiration": 10101,
                                "ReplaceCapacity": true,
                                "ReplaceSectorDeadline": 42,
                                "ReplaceSectorPartition": 42,
                                "ReplaceSectorNumber": 9
                            },
                            "PreCommitDeposit": "0",
                            "PreCommitEpoch": 10101,
                            "DealWeight": "0",
                            "VerifiedDealWeight": "0"
                        }
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "DealWeight": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "Info": {
                            "additionalProperties": false,
                            "properties": {
                                "DealIDs": {
                                    "items": {
                                        "description": "Number is a number",
                                        "title": "number",
                                        "type": "number"
                                    },
                                    "type": "array"
                                },
                                "Expiration": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "ReplaceCapacity": {
                                    "type": "boolean"
                                },
                                "ReplaceSectorDeadline": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "ReplaceSectorNumber": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "ReplaceSectorPartition": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "SealProof": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "SealRandEpoch": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "SealedCID": {
                                    "title": "Content Identifier",
                                    "type": "string"
                                },
                                "SectorNumber": {
                                    "title": "number",
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        "PreCommitDeposit": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "PreCommitEpoch": {
                            "title": "number",
                            "type": "number"
                        },
                        "VerifiedDealWeight": {
                            "additionalProperties": false,
                            "type": "object"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L2659"
            }
        },
        {
            "name": "Filecoin.StateVMCirculatingSupplyInternal",
            "description": "```go\nfunc (s *FullNodeStruct) StateVMCirculatingSupplyInternal(p0 context.Context, p1 types.TipSetKey) (CirculatingSupply, error) {\n\tif s.Internal.StateVMCirculatingSupplyInternal == nil {\n\t\treturn *new(CirculatingSupply), ErrNotSupported\n\t}\n\treturn s.Internal.StateVMCirculatingSupplyInternal(p0, p1)\n}\n```",
            "summary": "StateVMCirculatingSupplyInternal returns an approximation of the circulating supply of Filecoin at the given tipset.\nThis is the value reported by the runtime interface to actors code.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "CirculatingSupply",
                "description": "CirculatingSupply",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "FilVested": "0",
                            "FilMined": "0",
                            "FilBurnt": "0",
                            "FilLocked": "0",
                            "FilCirculating": "0",
                            "FilReserveDisbursed": "0"
                        }
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "FilBurnt": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "FilCirculating": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "FilLocked": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "FilMined": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "FilReserveDisbursed": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "FilVested": {
                            "additionalProperties": false,
                            "type": "object"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L2670"
            }
        },
        {
            "name": "Filecoin.StateVerifiedClientStatus",
            "description": "```go\nfunc (s *FullNodeStruct) StateVerifiedClientStatus(p0 context.Context, p1 address.Address, p2 types.TipSetKey) (*abi.StoragePower, error) {\n\tif s.Internal.StateVerifiedClientStatus == nil {\n\t\treturn nil, ErrNotSupported\n\t}\n\treturn s.Internal.StateVerifiedClientStatus(p0, p1, p2)\n}\n```",
            "summary": "StateVerifiedClientStatus returns the data cap for the given address.\nReturns nil if there is no entry in the data cap table for the\naddress.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p2",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*abi.StoragePower",
                "description": "*abi.StoragePower",
                "summary": "",
                "schema": {
                    "examples": [
                        "0"
                    ],
                    "additionalProperties": false,
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L2681"
            }
        },
        {
            "name": "Filecoin.StateVerifiedRegistryRootKey",
            "description": "```go\nfunc (s *FullNodeStruct) StateVerifiedRegistryRootKey(p0 context.Context, p1 types.TipSetKey) (address.Address, error) {\n\tif s.Internal.StateVerifiedRegistryRootKey == nil {\n\t\treturn *new(address.Address), ErrNotSupported\n\t}\n\treturn s.Internal.StateVerifiedRegistryRootKey(p0, p1)\n}\n```",
            "summary": "StateVerifiedClientStatus returns the address of the Verified Registry's root key\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "address.Address",
                "description": "address.Address",
                "summary": "",
                "schema": {
                    "examples": [
                        "f01234"
                    ],
                    "additionalProperties": false,
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L2692"
            }
        },
        {
            "name": "Filecoin.StateVerifierStatus",
            "description": "```go\nfunc (s *FullNodeStruct) StateVerifierStatus(p0 context.Context, p1 address.Address, p2 types.TipSetKey) (*abi.StoragePower, error) {\n\tif s.Internal.StateVerifierStatus == nil {\n\t\treturn nil, ErrNotSupported\n\t}\n\treturn s.Internal.StateVerifierStatus(p0, p1, p2)\n}\n```",
            "summary": "StateVerifierStatus returns the data cap for the given address.\nReturns nil if there is no entry in the data cap table for the\naddress.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p2",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*abi.StoragePower",
                "description": "*abi.StoragePower",
                "summary": "",
                "schema": {
                    "examples": [
                        "0"
                    ],
                    "additionalProperties": false,
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L2703"
            }
        },
        {
            "name": "Filecoin.StateWaitMsg",
            "description": "```go\nfunc (s *FullNodeStruct) StateWaitMsg(p0 context.Context, p1 cid.Cid, p2 uint64, p3 abi.ChainEpoch, p4 bool) (*MsgLookup, error) {\n\tif s.Internal.StateWaitMsg == nil {\n\t\treturn nil, ErrNotSupported\n\t}\n\treturn s.Internal.StateWaitMsg(p0, p1, p2, p3, p4)\n}\n```",
            "summary": "StateWaitMsg looks back up to limit epochs in the chain for a message.\nIf not found, it blocks until the message arrives on chain, and gets to the\nindicated confidence depth.\n\nNOTE: If a replacing message is found on chain, this method will return\na MsgLookup for the replacing message - the MsgLookup.Message will be a different\nCID than the one provided in the 'cid' param, MsgLookup.Receipt will contain the\nresult of the execution of the replacing message.\n\nIf the caller wants to ensure that exactly the requested message was executed,\nthey must check that MsgLookup.Message is equal to the provided 'cid', or set the\n`allowReplaced` parameter to false. Without this check, and with `allowReplaced`\nset to true, both the requested and original message may appear as\nsuccessfully executed on-chain, which may look like a double-spend.\n\nA replacing message is a message with a different CID, any of Gas values, and\ndifferent signature, but with all other parameters matching (source/destination,\nnonce, params, etc.)\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "cid.Cid",
                    "summary": "",
                    "schema": {
                        "title": "Content Identifier",
                        "description": "Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.",
                        "examples": [
                            {
                                "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                            }
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p2",
                    "description": "uint64",
                    "summary": "",
                    "schema": {
                        "title": "number",
                        "description": "Number is a number",
                        "examples": [
                            42
                        ],
                        "type": [
                            "number"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p3",
                    "description": "abi.ChainEpoch",
                    "summary": "",
                    "schema": {
                        "title": "number",
                        "description": "Number is a number",
                        "examples": [
                            10101
                        ],
                        "type": [
                            "number"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p4",
                    "description": "bool",
                    "summary": "",
                    "schema": {
                        "examples": [
                            true
                        ],
                        "type": [
                            "boolean"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*MsgLookup",
                "description": "*MsgLookup",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "Message": {
                                "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                            },
                            "Receipt": {
                                "ExitCode": 0,
                                "Return": "Ynl0ZSBhcnJheQ==",
                                "GasUsed": 9
                            },
                            "ReturnDec": {},
                            "TipSet": [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ],
                            "Height": 10101
                        }
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "Height": {
                            "title": "number",
                            "type": "number"
                        },
                        "Message": {
                            "title": "Content Identifier",
                            "type": "string"
                        },
                        "Receipt": {
                            "additionalProperties": false,
                            "properties": {
                                "ExitCode": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "GasUsed": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "Return": {
                                    "media": {
                                        "binaryEncoding": "base64"
                                    },
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "ReturnDec": {
                            "additionalProperties": true,
                            "type": "object"
                        },
                        "TipSet": {
                            "additionalProperties": false,
                            "type": "object"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L2714"
            }
        },
        {
            "name": "Filecoin.SyncCheckBad",
            "description": "```go\nfunc (s *FullNodeStruct) SyncCheckBad(p0 context.Context, p1 cid.Cid) (string, error) {\n\tif s.Internal.SyncCheckBad == nil {\n\t\treturn \"\", ErrNotSupported\n\t}\n\treturn s.Internal.SyncCheckBad(p0, p1)\n}\n```",
            "summary": "SyncCheckBad checks if a block was marked as bad, and if it was, returns\nthe reason.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "cid.Cid",
                    "summary": "",
                    "schema": {
                        "title": "Content Identifier",
                        "description": "Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.",
                        "examples": [
                            {
                                "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                            }
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "string",
                "description": "string",
                "summary": "",
                "schema": {
                    "examples": [
                        "string value"
                    ],
                    "type": [
                        "string"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L2725"
            }
        },
        {
            "name": "Filecoin.SyncCheckpoint",
            "description": "```go\nfunc (s *FullNodeStruct) SyncCheckpoint(p0 context.Context, p1 types.TipSetKey) error {\n\tif s.Internal.SyncCheckpoint == nil {\n\t\treturn ErrNotSupported\n\t}\n\treturn s.Internal.SyncCheckpoint(p0, p1)\n}\n```",
            "summary": "SyncCheckpoint marks a blocks as checkpointed, meaning that it won't ever fork away from it.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "Null",
                "description": "Null",
                "schema": {
                    "type": [
                        "null"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L2736"
            }
        },
        {
            "name": "Filecoin.SyncMarkBad",
            "description": "```go\nfunc (s *FullNodeStruct) SyncMarkBad(p0 context.Context, p1 cid.Cid) error {\n\tif s.Internal.SyncMarkBad == nil {\n\t\treturn ErrNotSupported\n\t}\n\treturn s.Internal.SyncMarkBad(p0, p1)\n}\n```",
            "summary": "SyncMarkBad marks a blocks as bad, meaning that it won't ever by synced.\nUse with extreme caution.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "cid.Cid",
                    "summary": "",
                    "schema": {
                        "title": "Content Identifier",
                        "description": "Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.",
                        "examples": [
                            {
                                "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                            }
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "Null",
                "description": "Null",
                "schema": {
                    "type": [
                        "null"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L2758"
            }
        },
        {
            "name": "Filecoin.SyncState",
            "description": "```go\nfunc (s *FullNodeStruct) SyncState(p0 context.Context) (*SyncState, error) {\n\tif s.Internal.SyncState == nil {\n\t\treturn nil, ErrNotSupported\n\t}\n\treturn s.Internal.SyncState(p0)\n}\n```",
            "summary": "SyncState returns the current status of the lotus sync system.\n",
            "paramStructure": "by-position",
            "params": [],
            "result": {
                "name": "*SyncState",
                "description": "*SyncState",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "ActiveSyncs": null,
                            "VMApplied": 42
                        }
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "ActiveSyncs": {
                            "items": {
                                "additionalProperties": false,
                                "properties": {
                                    "Base": {
                                        "additionalProperties": false,
                                        "type": "object"
                                    },
                                    "End": {
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "Height": {
                                        "title": "number",
                                        "type": "number"
                                    },
                                    "Message": {
                                        "type": "string"
                                    },
                                    "Stage": {
                                        "title": "number",
                                        "type": "number"
                                    },
                                    "Start": {
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "Target": {
                                        "additionalProperties": false,
                                        "type": "object"
                                    },
                                    "WorkerID": {
                                        "title": "number",
                                        "type": "number"
                                    }
                                },
                                "type": "object"
                            },
                            "type": "array"
                        },
                        "VMApplied": {
                            "title": "number",
                            "type": "number"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L2769"
            }
        },
        {
            "name": "Filecoin.SyncSubmitBlock",
            "description": "```go\nfunc (s *FullNodeStruct) SyncSubmitBlock(p0 context.Context, p1 *types.BlockMsg) error {\n\tif s.Internal.SyncSubmitBlock == nil {\n\t\treturn ErrNotSupported\n\t}\n\treturn s.Internal.SyncSubmitBlock(p0, p1)\n}\n```",
            "summary": "SyncSubmitBlock can be used to submit a newly created block to the.\nnetwork through this node\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "*types.BlockMsg",
                    "summary": "",
                    "schema": {
                        "examples": [
                            {
                                "Header": {
                                    "Miner": "f01234",
                                    "Ticket": {
                                        "VRFProof": "Ynl0ZSBhcnJheQ=="
                                    },
                                    "ElectionProof": {
                                        "WinCount": 9,
                                        "VRFProof": "Ynl0ZSBhcnJheQ=="
                                    },
                                    "BeaconEntries": null,
                                    "WinPoStProof": null,
                                    "Parents": null,
                                    "ParentWeight": "0",
                                    "Height": 10101,
                                    "ParentStateRoot": {
                                        "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                    },
                                    "ParentMessageReceipts": {
                                        "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                    },
                                    "Messages": {
                                        "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                    },
                                    "BLSAggregate": {
                                        "Type": 2,
                                        "Data": "Ynl0ZSBhcnJheQ=="
                                    },
                                    "Timestamp": 42,
                                    "BlockSig": {
                                        "Type": 2,
                                        "Data": "Ynl0ZSBhcnJheQ=="
                                    },
                                    "ForkSignaling": 42,
                                    "ParentBaseFee": "0"
                                },
                                "BlsMessages": null,
                                "SecpkMessages": null
                            }
                        ],
                        "additionalProperties": false,
                        "properties": {
                            "BlsMessages": {
                                "items": {
                                    "description": "Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.",
                                    "title": "Content Identifier",
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            "Header": {
                                "additionalProperties": false,
                                "properties": {
                                    "BLSAggregate": {
                                        "additionalProperties": false,
                                        "properties": {
                                            "Data": {
                                                "media": {
                                                    "binaryEncoding": "base64"
                                                },
                                                "type": "string"
                                            },
                                            "Type": {
                                                "title": "number",
                                                "type": "number"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "BeaconEntries": {
                                        "items": {
                                            "additionalProperties": false,
                                            "properties": {
                                                "Data": {
                                                    "media": {
                                                        "binaryEncoding": "base64"
                                                    },
                                                    "type": "string"
                                                },
                                                "Round": {
                                                    "title": "number",
                                                    "type": "number"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "BlockSig": {
                                        "additionalProperties": false,
                                        "properties": {
                                            "Data": {
                                                "media": {
                                                    "binaryEncoding": "base64"
                                                },
                                                "type": "string"
                                            },
                                            "Type": {
                                                "title": "number",
                                                "type": "number"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "ElectionProof": {
                                        "additionalProperties": false,
                                        "properties": {
                                            "VRFProof": {
                                                "media": {
                                                    "binaryEncoding": "base64"
                                                },
                                                "type": "string"
                                            },
                                            "WinCount": {
                                                "title": "number",
                                                "type": "number"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "ForkSignaling": {
                                        "title": "number",
                                        "type": "number"
                                    },
                                    "Height": {
                                        "title": "number",
                                        "type": "number"
                                    },
                                    "Messages": {
                                        "title": "Content Identifier",
                                        "type": "string"
                                    },
                                    "Miner": {
                                        "additionalProperties": false,
                                        "type": "object"
                                    },
                                    "ParentBaseFee": {
                                        "additionalProperties": false,
                                        "type": "object"
                                    },
                                    "ParentMessageReceipts": {
                                        "title": "Content Identifier",
                                        "type": "string"
                                    },
                                    "ParentStateRoot": {
                                        "title": "Content Identifier",
                                        "type": "string"
                                    },
                                    "ParentWeight": {
                                        "additionalProperties": false,
                                        "type": "object"
                                    },
                                    "Parents": {
                                        "items": {
                                            "description": "Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.",
                                            "title": "Content Identifier",
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    "Ticket": {
                                        "additionalProperties": false,
                                        "properties": {
                                            "VRFProof": {
                                                "media": {
                                                    "binaryEncoding": "base64"
                                                },
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "Timestamp": {
                                        "title": "number",
                                        "type": "number"
                                    },
                                    "WinPoStProof": {
                                        "items": {
                                            "additionalProperties": false,
                                            "properties": {
                                                "PoStProof": {
                                                    "title": "number",
                                                    "type": "number"
                                                },
                                                "ProofBytes": {
                                                    "media": {
                                                        "binaryEncoding": "base64"
                                                    },
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            },
                            "SecpkMessages": {
                                "items": {
                                    "description": "Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.",
                                    "title": "Content Identifier",
                                    "type": "string"
                                },
                                "type": "array"
                            }
                        },
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "Null",
                "description": "Null",
                "schema": {
                    "type": [
                        "null"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L2780"
            }
        },
        {
            "name": "Filecoin.SyncUnmarkAllBad",
            "description": "```go\nfunc (s *FullNodeStruct) SyncUnmarkAllBad(p0 context.Context) error {\n\tif s.Internal.SyncUnmarkAllBad == nil {\n\t\treturn ErrNotSupported\n\t}\n\treturn s.Internal.SyncUnmarkAllBad(p0)\n}\n```",
            "summary": "SyncUnmarkAllBad purges bad block cache, making it possible to sync to chains previously marked as bad\n",
            "paramStructure": "by-position",
            "params": [],
            "result": {
                "name": "Null",
                "description": "Null",
                "schema": {
                    "type": [
                        "null"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L2791"
            }
        },
        {
            "name": "Filecoin.SyncUnmarkBad",
            "description": "```go\nfunc (s *FullNodeStruct) SyncUnmarkBad(p0 context.Context, p1 cid.Cid) error {\n\tif s.Internal.SyncUnmarkBad == nil {\n\t\treturn ErrNotSupported\n\t}\n\treturn s.Internal.SyncUnmarkBad(p0, p1)\n}\n```",
            "summary": "SyncUnmarkBad unmarks a blocks as bad, making it possible to be validated and synced again.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "cid.Cid",
                    "summary": "",
                    "schema": {
                        "title": "Content Identifier",
                        "description": "Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.",
                        "examples": [
                            {
                                "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                            }
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "Null",
                "description": "Null",
                "schema": {
                    "type": [
                        "null"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L2802"
            }
        },
        {
            "name": "Filecoin.SyncValidateTipset",
            "description": "```go\nfunc (s *FullNodeStruct) SyncValidateTipset(p0 context.Context, p1 types.TipSetKey) (bool, error) {\n\tif s.Internal.SyncValidateTipset == nil {\n\t\treturn false, ErrNotSupported\n\t}\n\treturn s.Internal.SyncValidateTipset(p0, p1)\n}\n```",
            "summary": "SyncValidateTipset indicates whether the provided tipset is valid or not\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "bool",
                "description": "bool",
                "summary": "",
                "schema": {
                    "examples": [
                        true
                    ],
                    "type": [
                        "boolean"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L2813"
            }
        },
        {
            "name": "Filecoin.WalletBalance",
            "description": "```go\nfunc (s *FullNodeStruct) WalletBalance(p0 context.Context, p1 address.Address) (types.BigInt, error) {\n\tif s.Internal.WalletBalance == nil {\n\t\treturn *new(types.BigInt), ErrNotSupported\n\t}\n\treturn s.Internal.WalletBalance(p0, p1)\n}\n```",
            "summary": "WalletBalance returns the balance of the given address at the current head of the chain.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "types.BigInt",
                "description": "types.BigInt",
                "summary": "",
                "schema": {
                    "examples": [
                        "0"
                    ],
                    "additionalProperties": false,
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L2824"
            }
        },
        {
            "name": "Filecoin.WalletDefaultAddress",
            "description": "```go\nfunc (s *FullNodeStruct) WalletDefaultAddress(p0 context.Context) (address.Address, error) {\n\tif s.Internal.WalletDefaultAddress == nil {\n\t\treturn *new(address.Address), ErrNotSupported\n\t}\n\treturn s.Internal.WalletDefaultAddress(p0)\n}\n```",
            "summary": "WalletDefaultAddress returns the address marked as default in the wallet.\n",
            "paramStructure": "by-position",
            "params": [],
            "result": {
                "name": "address.Address",
                "description": "address.Address",
                "summary": "",
                "schema": {
                    "examples": [
                        "f01234"
                    ],
                    "additionalProperties": false,
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L2835"
            }
        },
        {
            "name": "Filecoin.WalletDelete",
            "description": "```go\nfunc (s *FullNodeStruct) WalletDelete(p0 context.Context, p1 address.Address) error {\n\tif s.Internal.WalletDelete == nil {\n\t\treturn ErrNotSupported\n\t}\n\treturn s.Internal.WalletDelete(p0, p1)\n}\n```",
            "summary": "WalletDelete deletes an address from the wallet.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "Null",
                "description": "Null",
                "schema": {
                    "type": [
                        "null"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L2846"
            }
        },
        {
            "name": "Filecoin.WalletExport",
            "description": "```go\nfunc (s *FullNodeStruct) WalletExport(p0 context.Context, p1 address.Address) (*types.KeyInfo, error) {\n\tif s.Internal.WalletExport == nil {\n\t\treturn nil, ErrNotSupported\n\t}\n\treturn s.Internal.WalletExport(p0, p1)\n}\n```",
            "summary": "WalletExport returns the private key of an address in the wallet.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*types.KeyInfo",
                "description": "*types.KeyInfo",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "Type": "bls",
                            "PrivateKey": "Ynl0ZSBhcnJheQ=="
                        }
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "PrivateKey": {
                            "media": {
                                "binaryEncoding": "base64"
                            },
                            "type": "string"
                        },
                        "Type": {
                            "type": "string"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L2857"
            }
        },
        {
            "name": "Filecoin.WalletHas",
            "description": "```go\nfunc (s *FullNodeStruct) WalletHas(p0 context.Context, p1 address.Address) (bool, error) {\n\tif s.Internal.WalletHas == nil {\n\t\treturn false, ErrNotSupported\n\t}\n\treturn s.Internal.WalletHas(p0, p1)\n}\n```",
            "summary": "WalletHas indicates whether the given address is in the wallet.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "bool",
                "description": "bool",
                "summary": "",
                "schema": {
                    "examples": [
                        true
                    ],
                    "type": [
                        "boolean"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L2868"
            }
        },
        {
            "name": "Filecoin.WalletImport",
            "description": "```go\nfunc (s *FullNodeStruct) WalletImport(p0 context.Context, p1 *types.KeyInfo) (address.Address, error) {\n\tif s.Internal.WalletImport == nil {\n\t\treturn *new(address.Address), ErrNotSupported\n\t}\n\treturn s.Internal.WalletImport(p0, p1)\n}\n```",
            "summary": "WalletImport receives a KeyInfo, which includes a private key, and imports it into the wallet.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "*types.KeyInfo",
                    "summary": "",
                    "schema": {
                        "examples": [
                            {
                                "Type": "bls",
                                "PrivateKey": "Ynl0ZSBhcnJheQ=="
                            }
                        ],
                        "additionalProperties": false,
                        "properties": {
                            "PrivateKey": {
                                "media": {
                                    "binaryEncoding": "base64"
                                },
                                "type": "string"
                            },
                            "Type": {
                                "type": "string"
                            }
                        },
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "address.Address",
                "description": "address.Address",
                "summary": "",
                "schema": {
                    "examples": [
                        "f01234"
                    ],
                    "additionalProperties": false,
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L2879"
            }
        },
        {
            "name": "Filecoin.WalletList",
            "description": "```go\nfunc (s *FullNodeStruct) WalletList(p0 context.Context) ([]address.Address, error) {\n\tif s.Internal.WalletList == nil {\n\t\treturn *new([]address.Address), ErrNotSupported\n\t}\n\treturn s.Internal.WalletList(p0)\n}\n```",
            "summary": "WalletList lists all the addresses in the wallet.\n",
            "paramStructure": "by-position",
            "params": [],
            "result": {
                "name": "[]address.Address",
                "description": "[]address.Address",
                "summary": "",
                "schema": {
                    "examples": [
                        null
                    ],
                    "items": [
                        {
                            "additionalProperties": false,
                            "type": [
                                "object"
                            ]
                        }
                    ],
                    "type": [
                        "array"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L2890"
            }
        },
        {
            "name": "Filecoin.WalletNew",
            "description": "```go\nfunc (s *FullNodeStruct) WalletNew(p0 context.Context, p1 types.KeyType) (address.Address, error) {\n\tif s.Internal.WalletNew == nil {\n\t\treturn *new(address.Address), ErrNotSupported\n\t}\n\treturn s.Internal.WalletNew(p0, p1)\n}\n```",
            "summary": "WalletNew creates a new address in the wallet with the given sigType.\nAvailable key types: bls, secp256k1, secp256k1-ledger\nSupport for numerical types: 1 - secp256k1, 2 - BLS is deprecated\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "types.KeyType",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "bls"
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "address.Address",
                "description": "address.Address",
                "summary": "",
                "schema": {
                    "examples": [
                        "f01234"
                    ],
                    "additionalProperties": false,
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L2901"
            }
        },
        {
            "name": "Filecoin.WalletSetDefault",
            "description": "```go\nfunc (s *FullNodeStruct) WalletSetDefault(p0 context.Context, p1 address.Address) error {\n\tif s.Internal.WalletSetDefault == nil {\n\t\treturn ErrNotSupported\n\t}\n\treturn s.Internal.WalletSetDefault(p0, p1)\n}\n```",
            "summary": "WalletSetDefault marks the given address as as the default one.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "Null",
                "description": "Null",
                "schema": {
                    "type": [
                        "null"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L2912"
            }
        },
        {
            "name": "Filecoin.WalletSign",
            "description": "```go\nfunc (s *FullNodeStruct) WalletSign(p0 context.Context, p1 address.Address, p2 []byte) (*crypto.Signature, error) {\n\tif s.Internal.WalletSign == nil {\n\t\treturn nil, ErrNotSupported\n\t}\n\treturn s.Internal.WalletSign(p0, p1, p2)\n}\n```",
            "summary": "WalletSign signs the given bytes using the given address.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p2",
                    "description": "[]byte",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "Ynl0ZSBhcnJheQ=="
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*crypto.Signature",
                "description": "*crypto.Signature",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "Type": 2,
                            "Data": "Ynl0ZSBhcnJheQ=="
                        }
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "Data": {
                            "media": {
                                "binaryEncoding": "base64"
                            },
                            "type": "string"
                        },
                        "Type": {
                            "title": "number",
                            "type": "number"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L2923"
            }
        },
        {
            "name": "Filecoin.WalletSignMessage",
            "description": "```go\nfunc (s *FullNodeStruct) WalletSignMessage(p0 context.Context, p1 address.Address, p2 *types.Message) (*types.SignedMessage, error) {\n\tif s.Internal.WalletSignMessage == nil {\n\t\treturn nil, ErrNotSupported\n\t}\n\treturn s.Internal.WalletSignMessage(p0, p1, p2)\n}\n```",
            "summary": "WalletSignMessage signs the given message using the given address.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p2",
                    "description": "*types.Message",
                    "summary": "",
                    "schema": {
                        "examples": [
                            {
                                "Version": 42,
                                "To": "f01234",
                                "From": "f01234",
                                "Nonce": 42,
                                "Value": "0",
                                "GasLimit": 9,
                                "GasFeeCap": "0",
                                "GasPremium": "0",
                                "Method": 1,
                                "Params": "Ynl0ZSBhcnJheQ==",
                                "CID": {
                                    "/": "bafy2bzacebbpdegvr3i4cosewthysg5xkxpqfn2wfcz6mv2hmoktwbdxkax4s"
                                }
                            }
                        ],
                        "additionalProperties": false,
                        "properties": {
                            "From": {
                                "additionalProperties": false,
                                "type": "object"
                            },
                            "GasFeeCap": {
                                "additionalProperties": false,
                                "type": "object"
                            },
                            "GasLimit": {
                                "title": "number",
                                "type": "number"
                            },
                            "GasPremium": {
                                "additionalProperties": false,
                                "type": "object"
                            },
                            "Method": {
                                "title": "number",
                                "type": "number"
                            },
                            "Nonce": {
                                "title": "number",
                                "type": "number"
                            },
                            "Params": {
                                "media": {
                                    "binaryEncoding": "base64"
                                },
                                "type": "string"
                            },
                            "To": {
                                "additionalProperties": false,
                                "type": "object"
                            },
                            "Value": {
                                "additionalProperties": false,
                                "type": "object"
                            },
                            "Version": {
                                "title": "number",
                                "type": "number"
                            }
                        },
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*types.SignedMessage",
                "description": "*types.SignedMessage",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "Message": {
                                "Version": 42,
                                "To": "f01234",
                                "From": "f01234",
                                "Nonce": 42,
                                "Value": "0",
                                "GasLimit": 9,
                                "GasFeeCap": "0",
                                "GasPremium": "0",
                                "Method": 1,
                                "Params": "Ynl0ZSBhcnJheQ==",
                                "CID": {
                                    "/": "bafy2bzacebbpdegvr3i4cosewthysg5xkxpqfn2wfcz6mv2hmoktwbdxkax4s"
                                }
                            },
                            "Signature": {
                                "Type": 2,
                                "Data": "Ynl0ZSBhcnJheQ=="
                            },
                            "CID": {
                                "/": "bafy2bzacebbpdegvr3i4cosewthysg5xkxpqfn2wfcz6mv2hmoktwbdxkax4s"
                            }
                        }
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "Message": {
                            "additionalProperties": false,
                            "properties": {
                                "From": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "GasFeeCap": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "GasLimit": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "GasPremium": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "Method": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "Nonce": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "Params": {
                                    "media": {
                                        "binaryEncoding": "base64"
                                    },
                                    "type": "string"
                                },
                                "To": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "Value": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "Version": {
                                    "title": "number",
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        "Signature": {
                            "additionalProperties": false,
                            "properties": {
                                "Data": {
                                    "media": {
                                        "binaryEncoding": "base64"
                                    },
                                    "type": "string"
                                },
                                "Type": {
                                    "title": "number",
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L2934"
            }
        },
        {
            "name": "Filecoin.WalletValidateAddress",
            "description": "```go\nfunc (s *FullNodeStruct) WalletValidateAddress(p0 context.Context, p1 string) (address.Address, error) {\n\tif s.Internal.WalletValidateAddress == nil {\n\t\treturn *new(address.Address), ErrNotSupported\n\t}\n\treturn s.Internal.WalletValidateAddress(p0, p1)\n}\n```",
            "summary": "WalletValidateAddress validates whether a given string can be decoded as a well-formed address\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "string",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "string value"
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "address.Address",
                "description": "address.Address",
                "summary": "",
                "schema": {
                    "examples": [
                        "f01234"
                    ],
                    "additionalProperties": false,
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L2945"
            }
        },
        {
            "name": "Filecoin.WalletVerify",
            "description": "```go\nfunc (s *FullNodeStruct) WalletVerify(p0 context.Context, p1 address.Address, p2 []byte, p3 *crypto.Signature) (bool, error) {\n\tif s.Internal.WalletVerify == nil {\n\t\treturn false, ErrNotSupported\n\t}\n\treturn s.Internal.WalletVerify(p0, p1, p2, p3)\n}\n```",
            "summary": "WalletVerify takes an address, a signature, and some bytes, and indicates whether the signature is valid.\nThe address does not have to be in the wallet.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p2",
                    "description": "[]byte",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "Ynl0ZSBhcnJheQ=="
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p3",
                    "description": "*crypto.Signature",
                    "summary": "",
                    "schema": {
                        "examples": [
                            {
                                "Type": 2,
                                "Data": "Ynl0ZSBhcnJheQ=="
                            }
                        ],
                        "additionalProperties": false,
                        "properties": {
                            "Data": {
                                "media": {
                                    "binaryEncoding": "base64"
                                },
                                "type": "string"
                            },
                            "Type": {
                                "title": "number",
                                "type": "number"
                            }
                        },
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "bool",
                "description": "bool",
                "summary": "",
                "schema": {
                    "examples": [
                        true
                    ],
                    "type": [
                        "boolean"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L2956"
            }
        }
    ]
}