static REGISTRIES_EXT: Lazy<
    RwLock<HashMap<String, prometheus_client::registry::Registry>>,
> = Lazy::new(|| RwLock::new(HashMap::new()));
pub static LRU_CACHE_HIT: Lazy<Box<GenericCounterVec<AtomicU64>>> = Lazy::new(|| {
    let lru_cache_hit = Box::new(
        GenericCounterVec::<
            AtomicU64,
        >::new(Opts::new("lru_cache_hit", "Stats of lru cache hit"), &[labels::KIND])
            .expect("Defining the lru_cache_hit metric must succeed"),
    );
    prometheus::default_registry()
        .register(lru_cache_hit.clone())
        .expect(
            "Registering the lru_cache_hit metric with the metrics registry must succeed",
        );
    lru_cache_hit
});
pub static LRU_CACHE_MISS: Lazy<Box<GenericCounterVec<AtomicU64>>> = Lazy::new(|| {
    let lru_cache_miss = Box::new(
        GenericCounterVec::<
            AtomicU64,
        >::new(Opts::new("lru_cache_miss", "Stats of lru cache miss"), &[labels::KIND])
            .expect("Defining the lru_cache_miss metric must succeed"),
    );
    prometheus::default_registry()
        .register(lru_cache_miss.clone())
        .expect(
            "Registering the lru_cache_miss metric with the metrics registry must succeed",
        );
    lru_cache_miss
});
