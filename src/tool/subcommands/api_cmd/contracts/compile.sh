#!/bin/bash
# This script compiles all the Solidity files in the current directory and
# generates the corresponding files with the compiled bytecode in hexadecimal
# format.

set -euo pipefail

find . -mindepth 2 -type f -name "*.sol" -print0 | while IFS= read -r -d '' file; do
    echo "Compiling: $file"

    # Extract directory and base name
    dir=$(dirname "$file")
    base_name=$(basename "$file" .sol)
    hex_file="$dir/$base_name.hex"

    # Compile and capture output
    if ! solc_output=$(solc --optimize --bin "$file" 2>&1); then
        echo "ERROR: Compilation failed for $file"
        echo "solc output: $solc_output"
        exit 1
    fi

    # Extract bytecode (last line of successful compilation)
    bytecode=$(echo "$solc_output" | tail -n 1 | tr -d '\n')

    if [[ -z "$bytecode" ]]; then
        echo "ERROR: Generated bytecode is empty for $file"
        echo "solc output: $solc_output"
        exit 1
    fi

    # Write to hex file
    echo -n "$bytecode" >"$hex_file"

    echo "Generated: $dir/$base_name.hex"
done
