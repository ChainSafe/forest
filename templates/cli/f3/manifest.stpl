Manifest:
  Protocol Version:     <%= manifest.protocol_version %>
  Paused:               <%= manifest.pause %>
  Initial Instance:     <%= manifest.initial_instance %>
  Initial Power Table:  <% if is_initial_power_table_defined { %><%= manifest.initial_power_table.to_string() %><% } else { %>unknown<% } %>
  Bootstrap Epoch:      <%= manifest.bootstrap_epoch %>
  Network Name:         <%= manifest.network_name %>
  Ignore EC Power:      <%= manifest.ignore_ec_power %>
  Committee Lookback:   <%= manifest.committee_lookback %>
  Catch Up Alignment:   <%= fancy_duration::FancyDuration(manifest.catch_up_alignment).to_string() %>

  GPBFT Delta:                        <%= fancy_duration::FancyDuration(manifest.gpbft.delta).to_string() %>
  GPBFT Delta BackOff Exponent:       <%= manifest.gpbft.delta_back_off_exponent %>
  GPBFT Max Lookahead Rounds:         <%= manifest.gpbft.max_lookahead_rounds %>
  GPBFT Rebroadcast Backoff Base:     <%= fancy_duration::FancyDuration(manifest.gpbft.rebroadcast_backoff_base).to_string() %>
  GPBFT Rebroadcast Backoff Exponent: <%= manifest.gpbft.rebroadcast_backoff_exponent %>
  GPBFT Rebroadcast Backoff Spread:   <%= manifest.gpbft.rebroadcast_backoff_spread %>
  GPBFT Rebroadcast Backoff Max:      <%= fancy_duration::FancyDuration(manifest.gpbft.rebroadcast_backoff_max).to_string() %>

  EC Period:            <%= fancy_duration::FancyDuration(manifest.ec.period).to_string() %>
  EC Finality:          <%= manifest.ec.finality %>
  EC Delay Multiplier:  <%= manifest.ec.delay_multiplier %>
  EC Head Lookback:     <%= manifest.ec.head_lookback %>
  EC Finalize:          <%= manifest.ec.finalize %>

  Certificate Exchange Client Timeout:    <%= fancy_duration::FancyDuration(manifest.certificate_exchange.client_request_timeout).to_string() %>
  Certificate Exchange Server Timeout:    <%= fancy_duration::FancyDuration(manifest.certificate_exchange.server_request_timeout).to_string() %>
  Certificate Exchange Min Poll Interval: <%= fancy_duration::FancyDuration(manifest.certificate_exchange.minimum_poll_interval).to_string() %>
  Certificate Exchange Max Poll Interval: <%= fancy_duration::FancyDuration(manifest.certificate_exchange.maximum_poll_interval).to_string() %>
