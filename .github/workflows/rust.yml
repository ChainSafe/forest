name: Rust

on:
  workflow_dispatch:
  pull_request:
    branches:
      - main
    # This needs to be declared explicitly so that the job is actually
    # run when moved out of draft.
    types: [opened, synchronize, reopened, ready_for_review]
    paths-ignore:
      - '*.md'
      - '*.rb'
  push:
    branches:
      - main
    paths-ignore:
      - '*.md'
      - '*.rb'
  schedule:
    - cron: "0 0 * * *"

env:
  CI: 1
  CARGO_INCREMENTAL: 1
  CACHE_TIMEOUT_MINUTES: 5
  SNAPSHOT_DIRECTORY: /tmp/snapshots
  SCCACHE_GHA_ENABLED: "true"
  RUSTC_WRAPPER: "sccache"

jobs:
  test:
    name: Test
    runs-on: buildjet-8vcpu-ubuntu-2204
    # Run the job only if the PR is not a draft.
    # This is done to limit the runner cost.
    if: github.event.pull_request.draft == false
    timeout-minutes: 30
    steps:
      - name: Checkout Sources
        uses: actions/checkout@v3
      - name: Setup sccache
        uses: mozilla-actions/sccache-action@v0.0.3
        timeout-minutes: ${{ fromJSON(env.CACHE_TIMEOUT_MINUTES) }}
        continue-on-error: true
      - name: Apt Dependencies
        uses: nick-fields/retry@v2
        with:
          timeout_minutes: 5
          max_attempts: 3
          command: sudo make install-deps
      - uses: actions/setup-go@v4
        with:
          go-version-file: "node/forest_libp2p/bitswap/tests/go-app/go.mod"
      - name: install nextest
        uses: taiki-e/install-action@nextest
      - run: make test-all
        env:
          CC: "sccache clang"
          CXX: "sccache clang++"

  lint-all:
    name: All lint checks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Sources
        uses: actions/checkout@v3
      - name: Setup sccache
        uses: mozilla-actions/sccache-action@v0.0.3
        timeout-minutes: ${{ fromJSON(env.CACHE_TIMEOUT_MINUTES) }}
        continue-on-error: true
      - name: Apt Dependencies
        uses: nick-fields/retry@v2
        with:
          timeout_minutes: 5
          max_attempts: 3
          command: |
            sudo make install-deps
            sudo apt-get install -y libclang-dev # required dep for cargo-spellcheck
      - name: Install Lint tools
        run: make install-lint-tools-ci
        env:
          RUSTFLAGS: "-Cstrip=symbols"
      - run: make lint-all
        env:
          CC: "sccache clang"
          CXX: "sccache clang++"

  build-macos:
    name: Build MacOS
    runs-on: macos-latest
    steps:
      - name: Checkout Sources
        uses: actions/checkout@v3
      - name: Setup sccache
        uses: mozilla-actions/sccache-action@v0.0.3
        timeout-minutes: ${{ fromJSON(env.CACHE_TIMEOUT_MINUTES) }}
        continue-on-error: true
      - name: Cargo Check
        run: cargo check
        env:
          CC: "sccache clang"
          CXX: "sccache clang++"

  build-ubuntu:
    name: Build Ubuntu
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Sources
        uses: actions/checkout@v3
      - name: Setup sccache
        uses: mozilla-actions/sccache-action@v0.0.3
        timeout-minutes: ${{ fromJSON(env.CACHE_TIMEOUT_MINUTES) }}
        continue-on-error: true
      - name: Install Apt Dependencies
        run: |
          lscpu # the job may run on different CPUs, list cpu here for analysing build time
          sudo make install-deps
      - name: Cargo Install
        run: make install
        env:
          CC: "sccache clang"
          CXX: "sccache clang++"
      - uses: actions/upload-artifact@v3
        with:
          name: forest-${{ runner.os }}
          path: |
            ~/.cargo/bin/forest
            ~/.cargo/bin/forest-cli
          if-no-files-found: error

  calibnet-check:
    needs: build-ubuntu
    name: Calibnet sync check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Sources
        uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          name: forest-${{ runner.os }}
          path: ~/.cargo/bin
      # Permissions are lost during artifact-upload
      # https://github.com/actions/upload-artifact#permission-loss
      - name: Set permissions
        run: |
          chmod +x ~/.cargo/bin/forest*
      - name: Calibnet health check
        env:
          CALIBNET_WALLET: ${{ secrets.CALIBNET_WALLET }}
        run: ./scripts/calibnet_health_check.sh "$CALIBNET_WALLET"

  dependencies-check:
    name: Check cargo files for duplicates
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.0"
      - name: Run dependencies checks
        run: |
          gem install toml-rb --no-document
          ruby scripts/find_duplicate_deps.rb && ruby scripts/find_unused_deps.rb
