name: Rust

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
  schedule:
    -
      cron: "0 0 * * *"

jobs:
  test:
    name: Tests
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        rust: [1.57.0, stable, nightly]
        os: [buildjet-64vcpu-ubuntu-2004, macos-latest]
    steps:
      - name: Restore Cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Checkout Sources
        uses: actions/checkout@v2
      - name: Install Toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          override: true
      - name: Cargo Check
        uses: actions-rs/cargo@v1
        with:
          command: check
      - name: Test Vecotrs
        run: |
          git submodule update --init
          make run-vectors
      - name: Cargo Test
        run: make test
      - name: Install Binary
        run: make install

  clippy:
    name: Clippy
    runs-on: buildjet-64vcpu-ubuntu-2004
    steps:
      - name: Restore Cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Checkout Sources
        uses: actions/checkout@v2
      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: 1.57.0
      - name: Install Clippy
        run: rustup component add clippy
      - name: Run Cargo Clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: -- -D warnings

  fmt:
    name: Formatter
    runs-on: buildjet-2vcpu-ubuntu-2004
    steps:
      - name: Checkout Sources
        uses: actions/checkout@v2
      - name: Install Toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: 1.57.0
      - name: Check License
        run: make license
      - name: Install RustFmt
        run: rustup component add rustfmt
      - name: Run Cargo Fmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  audit:
    name: Audit
    runs-on: buildjet-2vcpu-ubuntu-2004
    steps:
      - name: Checkout Sources
        uses: actions/checkout@v2
      - name: Install Toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: 1.57.0
      - name: Build and Audit
        run: |
          cargo install cargo-audit
          cargo audit --ignore RUSTSEC-2020-0159 --ignore RUSTSEC-2020-0071 --ignore RUSTSEC-2021-0130

  codecov:
    name: Coverage
    runs-on: buildjet-64vcpu-ubuntu-2004
    steps:
      - name: Restore Cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Checkout Sources
        uses: actions/checkout@v2
      - name: Install Toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: 1.57.0
      - name: Run Tarpaulin
        uses: actions-rs/tarpaulin@v0.1
        with:
          args: '--workspace --out Xml
      - name: Upload CodeCov
        uses: codecov/codecov-action@v2
        with:
          fail_ci_if_error: true
