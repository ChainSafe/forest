# Re-tag the given image and push it to the ghcr.io
# Preserves the old tag.
name: Docker Latest tag

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag of the base image to use'
        required: true
        type: string
      new_tag:
        description: 'New tag to use'
        default: 'latest'
        required: true
        type: string
      dry_run:
        description: "Don't push the tag to GHCR"
        required: true
        type: boolean
        default: false

jobs:
  tag-docker-image:
    name: Retag image and push to GHCR
    runs-on: ubuntu-24.04-arm
    steps:
      - name: Login to Github Packages
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Re-tag image and push to GHCR
        if: ${{ !fromJSON(github.event.inputs.dry_run) }}
        run: |
          docker buildx imagetools create --tag ghcr.io/chainsafe/forest:${{ github.event.inputs.new_tag }} ghcr.io/chainsafe/forest:${{ github.event.inputs.tag }}
          docker buildx imagetools create --tag ghcr.io/chainsafe/forest:${{ github.event.inputs.new_tag }}-fat ghcr.io/chainsafe/forest:${{ github.event.inputs.tag }}-fat
      - name: Re-tag image (dry run)
        if: ${{ fromJSON(github.event.inputs.dry_run) }}
        run: |
          docker buildx imagetools create --dry-run --tag ghcr.io/chainsafe/forest:${{ github.event.inputs.new_tag }} ghcr.io/chainsafe/forest:${{ github.event.inputs.tag }}
          docker buildx imagetools create --dry-run --tag ghcr.io/chainsafe/forest:${{ github.event.inputs.new_tag }}-fat ghcr.io/chainsafe/forest:${{ github.event.inputs.tag }}-fat
